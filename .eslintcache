[{"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/App.tsx":"1","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/Button.tsx":"2","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonBuyPackage.tsx":"3","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonDarkMode.tsx":"4","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonWeb3Connect.tsx":"5","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/index.ts":"6","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PackageCard.tsx":"7","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PartnersCard.tsx":"8","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/TeamMemberCard.tsx":"9","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/index.ts":"10","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Footer.tsx":"11","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Header.tsx":"12","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/HeroImage.tsx":"13","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/LoadingOrError.tsx":"14","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/MarketplaceListings.tsx":"15","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/index.ts":"16","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/PriceDisplay.tsx":"17","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Buy.tsx":"18","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/ContentSection.tsx":"19","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Intro.tsx":"20","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Partners.tsx":"21","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Services.tsx":"22","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Splash.tsx":"23","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Team.tsx":"24","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/index.ts":"25","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Starfield.tsx":"26","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Toast/index.tsx":"27","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/ThemeContext.tsx":"28","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/index.ts":"29","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/layouts/Default.tsx":"30","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/animation/starfield.ts":"31","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/constants.ts":"32","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/helpers.ts":"33","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/index.ts":"34","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/useDarkMode.ts":"35","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/main.tsx":"36","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/404.tsx":"37","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/Home.tsx":"38","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/types/index.ts":"39","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/vite-env.d.ts":"40","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/animation.ts":"41","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Portal.tsx":"42","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Seo.tsx":"43"},{"size":2838,"mtime":1659290187394,"results":"44","hashOfConfig":"45"},{"size":799,"mtime":1658784457710,"results":"46","hashOfConfig":"45"},{"size":14618,"mtime":1659474042420,"results":"47","hashOfConfig":"45"},{"size":1391,"mtime":1659405273473,"results":"48","hashOfConfig":"45"},{"size":4010,"mtime":1659287833325,"results":"49","hashOfConfig":"45"},{"size":128,"mtime":1658419996773,"results":"50","hashOfConfig":"45"},{"size":4064,"mtime":1659474059172,"results":"51","hashOfConfig":"45"},{"size":3201,"mtime":1659278113453,"results":"52","hashOfConfig":"45"},{"size":5945,"mtime":1659289318570,"results":"53","hashOfConfig":"45"},{"size":93,"mtime":1658752942521,"results":"54","hashOfConfig":"45"},{"size":2812,"mtime":1659471596547,"results":"55","hashOfConfig":"45"},{"size":8621,"mtime":1659288596290,"results":"56","hashOfConfig":"45"},{"size":1971,"mtime":1659283392603,"results":"57","hashOfConfig":"45"},{"size":1941,"mtime":1659114945074,"results":"58","hashOfConfig":"45"},{"size":3146,"mtime":1659471366449,"results":"59","hashOfConfig":"45"},{"size":39,"mtime":1658754522173,"results":"60","hashOfConfig":"45"},{"size":998,"mtime":1659403731520,"results":"61","hashOfConfig":"45"},{"size":1366,"mtime":1659269306740,"results":"62","hashOfConfig":"45"},{"size":2229,"mtime":1659465998418,"results":"63","hashOfConfig":"45"},{"size":1685,"mtime":1659198570549,"results":"64","hashOfConfig":"45"},{"size":1057,"mtime":1659297431138,"results":"65","hashOfConfig":"45"},{"size":1416,"mtime":1659129799609,"results":"66","hashOfConfig":"45"},{"size":2863,"mtime":1659298226031,"results":"67","hashOfConfig":"45"},{"size":1096,"mtime":1659197444234,"results":"68","hashOfConfig":"45"},{"size":187,"mtime":1658413735966,"results":"69","hashOfConfig":"45"},{"size":398,"mtime":1658881794487,"results":"70","hashOfConfig":"71"},{"size":1625,"mtime":1659390475291,"results":"72","hashOfConfig":"45"},{"size":1936,"mtime":1658968904769,"results":"73","hashOfConfig":"45"},{"size":31,"mtime":1658417079218,"results":"74","hashOfConfig":"45"},{"size":3445,"mtime":1659381114041,"results":"75","hashOfConfig":"45"},{"size":2885,"mtime":1658785604543,"results":"76","hashOfConfig":"45"},{"size":785,"mtime":1659397465207,"results":"77","hashOfConfig":"45"},{"size":972,"mtime":1659036520205,"results":"78","hashOfConfig":"45"},{"size":29,"mtime":1658782954774,"results":"79","hashOfConfig":"45"},{"size":588,"mtime":1659137409618,"results":"80","hashOfConfig":"45"},{"size":1174,"mtime":1659406566782,"results":"81","hashOfConfig":"45"},{"size":1065,"mtime":1659040419116,"results":"82","hashOfConfig":"45"},{"size":1182,"mtime":1659301329251,"results":"83","hashOfConfig":"45"},{"size":562,"mtime":1658781223626,"results":"84","hashOfConfig":"71"},{"size":38,"mtime":1657237072000,"results":"85","hashOfConfig":"71"},{"size":7993,"mtime":1659136048961,"results":"86","hashOfConfig":"45"},{"size":422,"mtime":1659016632052,"results":"87","hashOfConfig":"45"},{"size":1743,"mtime":1659300843327,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"x0gch6",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":8,"fatalErrorCount":0,"warningCount":51,"fixableErrorCount":2,"fixableWarningCount":6,"source":"100","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"93"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"93"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"93"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"14vr6xm",{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"93"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"93"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"93"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"93"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"93"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"93"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"93"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"93"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/App.tsx",["245","246","247","248"],["249","250","251"],"// eslint-disable-next-line unicorn/prefer-node-protocol\nimport { Buffer } from 'buffer';\n\nimport type { ReactElement } from 'react';\nimport { useEffect } from 'react';\n\nimport gsap from 'gsap';\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport { useEventListener } from 'usehooks-ts';\n\nimport PageNotFound from '~mb/routes/404';\nimport Home from '~mb/routes/Home';\n\n// const Home = lazy(async () => import('~mb/routes/Home'));\n// const PageNotFound = lazy(async () => import('~mb/routes/404'));\ngsap.registerPlugin(ScrollToPlugin);\n\nfunction App(): ReactElement {\n  const location = useLocation();\n\n  /**\n   * Effect to set the Buffer global variable due to a Coinbase Wallet bug (a dep of ThirdWeb sdk)\n   * See: https://stackoverflow.com/a/71953677/5721585\n    */\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      window.Buffer = Buffer;\n    }\n  });\n\n  useEventListener('scroll', () => {\n    if (typeof window === 'undefined') return;\n    const tl = gsap.timeline({paused: true, reversed: true});\n    const page = document.documentElement;\n    const offset = page.scrollTop;\n    const backToTop = document.querySelector('.back-to-top') as HTMLElement;\n    // gsap.set(backToTop, {opacity: 0, xPercent: 125});\n    // tl.from(backToTop, {\n    //   opacity: 0,\n    //   xPercent: 125,\n    //   duration: 0.4,\n    //   ease: 'elastic',\n    // }).to(backToTop, {\n    //   opacity: 1,\n    //   xPercent: 0,\n    //   duration: 0.4,\n    // })\n\n    if (offset > 1200) {\n      backToTop.classList.remove('invisible');\n    } else {\n      backToTop.classList.add('invisible');\n    }\n    // tl.play();\n  });\n\n\n  function onLocation(): void {\n    if (typeof window === 'undefined') return;\n    if (location.hash === '') return;\n    const tl = gsap.timeline({ paused: true, reversed: true });\n    const fallback = document.documentElement;\n    const element = document.querySelector(location.hash);\n    // eslint-disable-next-line no-debugger\n    // debugger;\n\n    if (element !== null) {\n      tl.to(\n        window,\n        {\n          duration: 1,\n          delay: 0,\n          scrollTo: {\n            y: element,\n          },\n          ease: \"power4.inOut\",\n        },\n      );\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    tl.reversed() ? tl.play() : tl.reverse();\n  }\n\n  useEffect(() => {\n    onLocation();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.hash, location.pathname]);\n\n\n  return (\n    // <Suspense fallback={<LoadingOrError message=\"Loading Meta-Builders\" />}>\n    <Routes location={location} key={location.pathname}>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"*\" element={<PageNotFound />} />\n    </Routes>\n    // </Suspense>\n  );\n}\n\nexport default App;\n",["252","253","254","255","256"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/Button.tsx",[],["257"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonBuyPackage.tsx",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],["317"],"import type { Dispatch, SetStateAction } from 'react'\nimport { useEffect, useCallback, useRef, useState } from 'react'\n\nimport { useAddress, useBalance, useMetamask, useNetwork, useNetworkMismatch, useToken } from '@thirdweb-dev/react'\nimport { ChainId, CurrencyValue, Marketplace, Token } from '@thirdweb-dev/sdk';\nimport { useMachine, normalizeProps } from '@zag-js/react'\nimport * as toast from '@zag-js/toast'\nimport accounting from 'accounting'\nimport { BigNumber, utils } from 'ethers';\nimport gsap from 'gsap'\nimport { useOnClickOutside, useCopyToClipboard } from 'usehooks-ts'\nimport { v4 as uuid } from 'uuid'\n\nimport LoadingOrError from '../LoadingOrError'\n\nimport { ButtonWeb3Connect } from './ButtonWeb3Connect'\n\nimport { Portal } from '~mb/components/Portal'\nimport Toast from '~mb/components/Toast'\nimport { shortenAddress } from '~mb/lib/helpers'\nimport { Icon } from '@iconify/react';\nimport { polygonScanApiEndpoint } from '~mb/lib/constants';\nimport PriceDisplay from '../PriceDisplay';\nexport type BuyPackOptions = {\n  name: string\n  currencySymbol: string\n  listingId: string\n  quantityToBuy: number\n  currency: string\n  contract: string\n  price: string\n  value: BigNumber\n  marketplace: Marketplace\n}\n\nexport type ButtonBuyPackagePopUp = {\n  pack: BuyPackOptions\n  forAddress: string | undefined\n  isOpen: boolean\n  setIsOpen: Dispatch<SetStateAction<boolean>>\n}\n\nexport interface GetTokenBalanceResponse {\n  balance: UserBalance\n}\nexport type UserBalance = {\n  displayValue: string\n  value: BigNumber\n}\n\nexport function BuyPackackagePopUp(\n  properties: ButtonBuyPackagePopUp\n): JSX.Element {\n  const popUpReference = useRef<HTMLDivElement>(null)\n  const contentReference = useRef<HTMLDivElement>(null)\n  const overlayBg1Reference = useRef<HTMLDivElement>(null)\n  const isNetworkMismatch = useNetworkMismatch()\n  const [hasEnough, setHasEnough] = useState(false)\n  const { forAddress, pack, isOpen, setIsOpen } = properties\n  const { marketplace, name, price, currency, quantityToBuy, currencySymbol, listingId, value: packValue } = pack\n  const [isLoading, setIsLoading] = useState(false)\n  const network = useNetwork();\n  const { chain } = network[0].data;\n  // const { data: balance, isLoading: balanceLoading, error: balanceError } = useTokenBalance(currency, forAddress);\n  const [copyValue, copy] = useCopyToClipboard()\n  const [state, send] = useMachine(\n    toast.group.machine({\n      id: uuid(),\n      pauseOnInteraction: true,\n      pauseOnPageIdle: true,\n      gutter: '1rem',\n      offsets: {\n        top: '2rem',\n        right: '2rem',\n        bottom: '2rem',\n        left: '2rem'\n      },\n    })\n  )\n  const apiToast = toast.group.connect(state, send, normalizeProps)\n\n  const popupTween = gsap.to(popUpReference.current, {\n    opacity: 1,\n    y: 0,\n    delay: 0.1,\n    duration: 0.5,\n    ease: 'power2.out',\n    autoAlpha: 1\n  })\n\n\n\n  async function getTokenBalance(contract: string, symbol: string,  address: string): Promise<UserBalance | undefined> {\n    try {\n      // for some reason matic in ThirdWeb uses 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE which isn't a contract address and it doesn't work with balanceOf so I'm getting balances from polygonscan.\n      // const balance = symbol !== 'MATIC' ? await tokenData.balanceOf(address) : undefined\n      const nativeToken = '0x0000000000000000000000000000000000001010'\n      const tokenToCheck = symbol === 'MATIC' ? nativeToken : contract\n      const balanceResponse = await fetch(\n        `${polygonScanApiEndpoint}&module=account&action=tokenbalance&contractaddress=${tokenToCheck}&address=${address}`)\n      const data = await balanceResponse.json()\n      const balance = {\n        displayValue: utils.formatUnits(data.result, chain?.nativeCurrency?.decimals),\n        value: BigNumber.from(data.result)\n      } as UserBalance\n\n      return balance\n\n\n    } catch (error) {\n      console.log('Balance error', { error });\n      return undefined\n    }\n  }\n\n  function onCopy(toCopy: string): void {\n    copy(toCopy).then(() => {\n\n      const copyToastId = apiToast.upsert({\n        id: uuid(),\n        type: 'success',\n        title: `Copied to clipboard: ${toCopy}`,\n        placement: 'bottom-start',\n        duration: 3000,\n      })\n    }).catch((_error: unknown) => {\n      apiToast.create({\n        type: 'error',\n        title: `Failed to copy to clipboard: ${copyValue as string}`,\n        duration: 3000\n      })\n    })\n  }\n\n  /** function to call the `buyNow` method of `useBuyNow`  */\n  const onBuyPackage = useCallback(\n    (id: string) => {\n      // if (isNetworkMismatch) return\n      // console.log('buying package', { id, forAddress });\n      setIsLoading(true)\n\n      if (forAddress) {\n        const buyToastId = apiToast.create({\n          id: uuid(),\n          type: 'info',\n          title: `Buying ${name} package for ${price} ${currencySymbol} - Please wait...`,\n          description: 'Please sign the transaction in your wallet.',\n          placement: 'bottom-end',\n          duration: 7000\n        })\n        apiToast.pause()\n        apiToast.create({\n          id: uuid(),\n          type: 'info',\n          title: `Checking ${currencySymbol} balance...`,\n          duration: 3000\n        })\n\n        getTokenBalance(currency, currencySymbol, forAddress).then(data => {\n          if (data !== undefined) {\n            const { value, displayValue } = data\n            const enoughFunds = value.gte(packValue);\n            if (enoughFunds) {\n              setHasEnough(enoughFunds)\n              apiToast.create({\n                id: uuid(),\n                type: 'success',\n                title: `Balance confirmed: ${displayValue} ${currencySymbol}. `,\n                duration: 3000\n              })\n\n              marketplace\n                .buyoutListing(id, quantityToBuy)\n                .then(data => {\n                  apiToast.resume()\n                  apiToast.create({\n                    id: uuid(),\n                    type: 'success',\n                    title: `W00t! You bought ${name}! Your receipt: ${data.receipt.transactionHash}`,\n                    description: `You have successfully bought ${name} for ${price} ${currencySymbol}. \\n\\n Your receipt: ${data.receipt.transactionHash}`,\n                    duration: 7000\n                  })\n\n                  setIsLoading(false)\n                })\n                .catch((error: any) => {\n                  console.log('buyPackage error', { error })\n                  const errorMessage =\n                    (error.message as string) || (error.toString() as string)\n                  const errorToastId = apiToast.create({\n                    id: uuid(),\n                    type: 'error',\n                    title: `Something went wrong!\\n ${errorMessage}`,\n                    duration: 7000\n                  })\n                  setIsLoading(false)\n                }).finally(() => {\n                  apiToast.resume()\n                })\n            } else {\n              apiToast.resume()\n              apiToast.create({\n                id: uuid(),\n                type: 'error',\n                title: `You do not have sufficient ${currencySymbol} to buy this package`,\n                duration: 3000\n              })\n              setHasEnough(enoughFunds)\n              setIsLoading(false)\n            }\n          }\n\n        }).catch((error: Error) => {\n          console.error('tokenBalance error', error);\n          apiToast.create({\n            id: uuid(),\n            type: 'error',\n            title: `${error.message}`,\n            duration: 3000\n          })\n          setIsLoading(false)\n        });\n      }\n\n    },\n    [forAddress, hasEnough, packValue, quantityToBuy, apiToast, currency, currencySymbol, isNetworkMismatch, marketplace, name, price]\n  )\n\n  const onOpenBuyCallback = useCallback((open: boolean) => {\n    // gsap.set(popUpReference.current, { yPercent: 100, opacity: 0 });\n    // gsap.set(contentReference.current, { opacity: 0, scale: 0.8 });\n    // gsap.set(overlayBg1Reference.current, { opacity: 0, yPercent: -100, xPercent: -100 });\n\n    const tl = gsap.timeline({ paused: true, reversed: true })\n    gsap.set(popUpReference.current, { yPercent: 101, opacity: 0 })\n    tl.to(\n      popUpReference.current,\n      {\n        opacity: 1,\n        display: 'flex',\n        yPercent: 0,\n        duration: 0.3,\n        ease: 'power3',\n      }\n    )\n      .to(contentReference.current, {\n        opacity: 1,\n        scale: 1,\n        delay: 0.05,\n        duration: 0.7\n      })\n      .to(overlayBg1Reference.current, {\n        opacity: 1\n      })\n    if (tl.reversed()) {\n      if (open) tl.play()\n    } else {\n      if (!open) tl.reverse()\n      setTimeout(() => { console.log('close') }, 300)\n    }\n  }, [])\n\n  useEffect(() => {\n    onOpenBuyCallback(isOpen)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, onOpenBuyCallback])\n\n  useOnClickOutside(popUpReference, () => setIsOpen(false))\n\n  return (\n    <>\n      <div\n        ref={popUpReference}\n        className='buy-popup l-0 r-0 b-0 hidden fixed inset-0 h-full w-full origin-top items-center justify-center overflow-hidden border-2 border-violet-300 p-5 shadow-violet-400 z-30 text-slate-50'\n      >\n        <div\n          ref={contentReference}\n          className='relative flex flex-col items-center justify-center text-left z-[100]'\n        >\n          <div className='flex-grow'>\n            <h3 className='text-teal-400 uppercase font-bold text-md text-left inline-flex flex-wrap flex-col space-0 gap-0 mb-3'>\n              <span className='badge badge-outline text-xs leading-3 uppercase text-violet-400 font-normal'>Edition {`#${listingId}`}</span>\n              <strong className='text-lg leading-3'>{name}</strong>\n            </h3>\n            <p>Let&apos;s do this! Hit &apos;Confirm&apos; below to buy this NFT, and the <span className='gradient-text font-bold'>Meta-Builders</span> services locked up inside it.</p>\n            <div className='flex flex-col items-start justify-center space-y-2 my-3'>\n              <p className='inline-flex flex-col gap-0 space-0'>\n                <span className='text-sm'>Price:</span> <PriceDisplay price={price} currency={currencySymbol} />\n              </p>\n              {forAddress ? (\n                <p className='mb-3 text-sm'>\n                    <span className='text-md'>Active wallet</span>\n                  <span className='tooltip tooltip-primary' data-tip='Click to copy'>\n                    <span className='text-violet-400 ml-3'\n                      tabIndex={0}\n                      role=\"button\"\n                      onClick={(): void => onCopy(forAddress)}\n                      onKeyPress={(): void => onCopy(forAddress)}\n                    >{shortenAddress(forAddress)}</span>\n                  </span>\n                </p>\n              ) : undefined}\n            </div>\n          </div>\n          <div className='z-10 flex-shrink text-center'>\n            {forAddress ? (\n              Number.parseFloat(price) > 0 ? (\n                <>\n                  <span className={`text-md text-orange-500 ${isNetworkMismatch ? 'block' : 'hidden'}`}>Switch to <strong>Polygon Mumbai</strong>.</span>\n                  <button\n                    type='button'\n                    className='btn btn-primary disabled:btn-disabled disabled:overflow-visible disabled:bg-transparent flex-grow overflow-hidden text-center transition-all duration-200 ease-in-out'\n                    onClick={(): void => onBuyPackage(listingId)}\n                    disabled={isLoading || isNetworkMismatch}\n                    aria-disabled={isLoading}\n                  >\n                    {!isLoading ? 'Confirm' : <LoadingOrError isInline message=\"Transaction in progress...\" />}\n                  </button>\n                </>\n              ) : (\n                <span>Contact us</span>\n              )\n            ) : (\n              <div className=''>\n                <span className='text-purple-400 text-sm'>Connect to buy</span>\n                <ButtonWeb3Connect size='3xl' />\n              </div>\n            )}\n          </div>\n        </div>\n        <div\n          ref={overlayBg1Reference}\n          className='absolute -inset-1/2 h-[200%] w-[200%] text-center origin-center z-30 flex items-center content-center justify-center'\n        >\n          <div className='text-violet-50 dark:text-teal-300 opacity-[5%] text-[10rem] text-center font-black leading-tight tracking-tighter uppercase font-sans transform -rotate-45'>{name}</div>\n        </div>\n        <div className='absolute inset-px z-10 origin-top items-center justify-center bg-violet-900 dark:bg-slate-800' />\n      </div>\n\n      <Portal>\n        <div\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...apiToast.getGroupProps({ placement: 'bottom-end' })}\n          className='pointer-events-none fixed inset-0 h-full w-full'\n        >\n          {apiToast.toasts.map(actor => (\n            <Toast key={actor.id} actor={actor} id={actor.id} />\n          ))}\n        </div>\n\n      </Portal>\n    </>\n  )\n}\n\nexport interface IButtonBuyPackage {\n  pack: BuyPackOptions\n}\n\nexport function ButtonBuyPackage(properties: IButtonBuyPackage): JSX.Element {\n  const { pack } = properties\n  const connectMetamaskWallet = useMetamask()\n  // const { openPortal, closePortal, isOpen, Portal } = usePortal();\n  const reference = useRef<HTMLButtonElement>(null)\n  const address = useAddress()\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n\n  function onConnectMetamask(): void {\n    connectMetamaskWallet()\n      .then(() => {\n        console.log('connectMetamaskWallet', address)\n      })\n      .catch(error => {\n        console.log('connectMetamaskWallet error', { error })\n      })\n  }\n\n  const onToggleOpen = (): void => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <>\n      <button\n        ref={reference}\n        type='button'\n        aria-label='Buy Package'\n        className={`btn transition-colors ${!address\n          ? 'bg-teal-700 text-violet-100'\n          : 'bg-teal-400 text-slate-900'\n          }  flex-grow transition-all duration-200 ease-in-out`}\n        data-package={pack.listingId}\n        onClick={!address ? onConnectMetamask : onToggleOpen}\n      >\n        <Icon icon=\"emojione-monotone:rocket\" className=\"absolute text-teal-200 mr-2 h-20 w-20 opacity-10 -translate-x-8\" />\n        {!address ? 'Connect to buy' : 'Buy Package'}\n      </button>\n\n      <BuyPackackagePopUp\n        pack={pack}\n        forAddress={address}\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n      />\n    </>\n  )\n}\nexport default ButtonBuyPackage\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonDarkMode.tsx",["318","319"],[],"\nimport { Icon } from \"@iconify/react\";\nimport type { ButtonProps } from \"react-daisyui\";\nimport { Button } from \"react-daisyui\"\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\"\n\nimport type { UseDarkModeType } from \"~mb/lib/hooks\";\nimport { useDarkMode } from \"~mb/lib/hooks\"\n\n\n// eslint-disable-next-line @typescript-eslint/no-type-alias\nexport type DarkModeButtonProperties = ButtonProps & {\n  properties: ButtonProps\n}\n\n/**\n * DarkModeButton - *Toggle Dark Mode*\n *\n * Allows a user to toggle Dark Mode.\n *\n * @returns JSX.Element\n */\nexport function ButtonDarkMode(): JSX.Element {\n  const { theme, toggleTheme }: UseDarkModeType = useDarkMode()\n  const isDark: boolean = theme === 'dark'\n  const onHandleClick = (): void => toggleTheme()\n  const modeIcon = isDark ? 'ic:baseline-dark-mode' : 'ic:baseline-light-mode'\n  return (\n    <div className=\"tooltip tooltip-info tooltip-bottom\" role=\"tooltip\" data-tip=\"⚠️ Light mode is WIP\">\n    <Button\n      aria-label='Toggle dark/light mode'\n      onClick={onHandleClick}\n      variant='link'\n      className='border-0 bg-transparent hover:border-0 hover:bg-transparent'\n    >\n      <Icon icon={modeIcon} className='delay-0 text-2xl animate-spin scale-100 transition-all origin-[right_center] duration-500  text-teal-200 hover:text-orange-400 dark:text-violet-300 dark:hover:text-blue-500' />\n      </Button>\n      </div>\n  )\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonWeb3Connect.tsx",["320","321","322","323","324","325"],[],"\n\nimport { Icon } from '@iconify/react';\nimport {\n  useMetamask,\n  useNetwork,\n  useAddress,\n  useDisconnect, useNetworkMismatch\n} from '@thirdweb-dev/react'\n\nimport { shortenAddress } from '~mb/lib/helpers';\n\nexport type ButtonWeb3ConnectProps = {\n  size?: string;\n}\n\nexport function ButtonWeb3Connect(properties: ButtonWeb3ConnectProps): JSX.Element {\n  const { size } = properties;\n  // const connectCoinbaseWallet = useCoinbaseWallet();\n  const connectMetamaskWallet = useMetamask();\n  // const connectWalletConnectWallet = useWalletConnect();\n  const disconnectWallet = useDisconnect();\n  const address = useAddress();\n  const network = useNetwork();\n  const isNetworkMismatch = useNetworkMismatch();\n  function onClickDisconnect(): void {\n    disconnectWallet().then(() => {\n      console.log('disconnectWallet');\n    }).catch(error => {\n      console.log('disconnectWallet error', { error });\n    });\n  }\n\n  // function onClickConnectCoinbase(): void {\n  //   connectCoinbaseWallet().then(() => {\n  //     console.log('connectCoinbaseWallet');\n  //   }).catch(error => {\n  //     console.log('connectCoinbaseWallet error', { error });\n  //   });\n  // }\n\n  function onClickConnectMetamask(): void {\n    connectMetamaskWallet().then(() => {\n      console.log('connectMetamaskWallet', address, network);\n      if (isNetworkMismatch) {\n        console.log('connectMetamaskWallet isNetworkMismatch', network);\n        // TODO: show network mismatch toast and-or network switcher\n      }\n\n\n    }).catch(error => {\n      console.log('connectMetamaskWallet error', { error });\n    });\n  }\n\n  // function onClickConnectWalletConnect(): void {\n  //   connectWalletConnectWallet().then(() => {\n  //     console.log('connectWalletConnectWallet');\n  //   }).catch(error => {\n  //     console.log('connectWalletConnectWallet error', { error });\n  //   });\n  // }\n\n\n  if (address) {\n    return (\n      <div className='flex flex-row-reverse items-center justify-between content-between gap-0 lg:gap-1'>\n        {/* {isNetworkMismatch ? (\n          <div className='tooltip tooltip-bottom tooltip-warning' data-tip=\"Testnet only rn\">\n            <span className='text-orange-500 font-sans'>Change to Mumbai network</span>\n            </div>\n        ) : (\n          <> */}\n            <button\n              type=\"button\"\n              className=\"\n                btn\n                btn-link\n                p-0\"\n              aria-label='Web3 wallet disconnect'\n              onClick={onClickDisconnect}\n            >\n          <Icon icon=\"tabler:wallet\" className={`${size ?? 'text-2xl lg:text-2xl'} transition-colors duration-200  ${address && !isNetworkMismatch ? 'text-green-500 text-shadow-alt' : (isNetworkMismatch ? 'text-orange-500 font-sans' : 'text-teal-200 dark:text-violet-300')}`} />\n              <span className=\"sr-only\">Disconnect</span>\n              </button>\n              {isNetworkMismatch ? (\n                <div className='tooltip tooltip-bottom tooltip-warning' data-tip=\"Testnet only rn\">\n                  <span className='text-orange-500 font-sans text-xs lg:text-md'>Switch to Mumbai network</span>\n                </div>\n              ) : (\n                <span className='text-xs lg:text-md text-green-500 text-shadow-alt inline'>{shortenAddress(address)}</span>\n              )}\n          {/* </>\n        )\n        } */}\n      </div >\n    )\n  }\n  return (\n    <div className=\"flex flex-row items-center justify-center\">\n      <button\n        type='button'\n        className={`\n      btn\n      btn-link\n      p-0\n      `}\n        aria-label='Web3 wallet connect'\n        onClick={onClickConnectMetamask}\n      >\n        <Icon icon=\"tabler:wallet\" className={`${size ?? 'text-2xl lg:text-3xl'} transition-colors duration-200  ${address ? 'text-green-500 text-shadow-alt' : 'text-teal-200 dark:text-violet-300'}`} />\n        <span className=\"sr-only\">Connect</span>\n      </button>\n    </div>\n  )\n}\n\nexport default ButtonWeb3Connect;\n\nButtonWeb3Connect.defaultProps = {\n  size: 'text-2xl'\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PackageCard.tsx",["326","327","328","329"],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PartnersCard.tsx",["330"],[],"\n\n// import Imgix from 'react-imgix';\n\n// import { isDevelopment } from '~mb/lib/constants';\n// import { buildImgUrl } from '~mb/lib/helpers';\nimport type { IPartner } from '~mb/types';\n\nexport type PartnersCardProperties = IPartner\n\nexport function PartnersCard({ partner }: {partner: PartnersCardProperties}): JSX.Element {\n  const { name, bio, image, url } = partner;\n  const sizes = \"(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw\";\n  // eslint-disable-next-line unicorn/no-null\n  const partnerImage = image !== '' ? image : 'missing-image.png';\n\n  return (\n    <a className=\"partners-card group aspect-video leadIn flex-shrink\" href={url}>\n    <figure className=\"relative w-full h-full items-center text-center flex flex-row content-center justify-center\">\n        <picture\n          className={`\n          relative\n          w-auto\n          lg:w-auto\n          h-3/4\n          lg:h-full\n        `}\n        >\n          {/* {!isDevelopment ? (\n            <Imgix\n              className=\"object-cover w-full h-full transition-all duration-300 bg-cover group-hover:scale-110 group-hover:opacity-20 group-focus:scale-110 group-focus:opacity-20\"\n              src={buildImgUrl(partnerImage, 'assets/partners/images')}\n              width={300}\n              htmlAttributes={{\n                alt: `${name}'s logo`,\n                sizes,\n              }}\n              imgixParams={{\n\n            />\n          ) : ( */}\n            <img src={`/assets/partners/images/${partnerImage}`} alt={`${name}'s logo`} className=' object-contain w-auto h-full transition-all duration-300 bg-cover opacity-70 group-hover:scale-110 group-hover:opacity-50 group-focus:scale-110 group-focus:opacity-50 filter grayscale invert dark:invert-0 shadow-teal-400' loading=\"lazy\" />\n        {/* )} */}\n\n      </picture>\n        <figcaption className=\"absolute rounded-lg -bottom-8 flex flex-col items-start text-left justify-center content-center min-w-full md:w-[125%] flex-grow min-h-[150%] h-auto gap-2 transition-all duration-300 opacity-0 group-hover:opacity-100 group-focus:opacity-100 scale-50 group-hover:scale-100 group-focus:scale-100 group-hover:-translate-y-0 group-focus:translate-y-1/2 translate-y-10 origin-center z-50  filter backdrop-blur-xl\">\n          <div className=\"relative bio-content flex flex-col space-y-2 p-3 flex-grow z-10\">\n            <h4 className='text-lg font-bold gradient-text tracking-normal leading-none mb-0 '>{name}</h4>\n            {bio ? <p className=\"text-xs text-slate-500 dark:text-white leading-tight \">{bio}</p> : undefined}\n\n            {/* <div className=\"inline-flex gap-2 flex-row items-center translate-y-5 transition-transform  group-hover:translate-y-0 -translate-x-6 group-hover:translate-x-0 scale-0 group-hover:scale-100\">\n              {url ? <a href={url} title={`${name}'s website`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">Website</a> : undefined}\n            </div> */}\n          </div>\n          <div className='absolute inset-0 bg-slate-200 dark:bg-slate-900 opacity-80 filter backdrop-blur-xl  rounded-lg shadow-lg p-4 w-full h-full z-0'/>\n        </figcaption>\n    </figure>\n    </a>\n  )\n}\n\nexport default PartnersCard;","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/TeamMemberCard.tsx",["331","332","333","334"],[],"import Imgix from 'react-imgix';\n\nimport { isDevelopment } from '~mb/lib/constants';\nimport { buildImgUrl } from '~mb/lib/helpers';\nimport type { ITeamMember } from '~mb/types';\n\n\nexport type TeamMember = ITeamMember\n\nexport function TeamMemberCard({ member }: { member: TeamMember }): JSX.Element {\n  const { image, name, role, bio, twitter, linkedin, email } = member;\n  const sizes = \"(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw\";\n  // const siteUrl = import.meta.env.VITE_SITE_URL as string;\n  // const avatar = new URL(image ?? 'missing-image.png', `${siteUrl}/assets/team/images`);\n  const avatar = image !== '' ? image : 'missing-image.png';\n\n\n  return (\n    <div className=\"group relative hover:cursor-pointer pt-0\">\n      <figure className=\"flex flex-col space-y-3 items-center text-center \">\n        <div className=\"\n            avatar\n            flex\n            flex-row\n            items-center\n            justify-center\">\n          <picture\n            className={`\n            relative\n            rounded-full\n            w-3/4\n            lg:w-1/2\n            h-auto\n            lg:h-auto\n            overflow-hidden box-shadow-[0_0_10px_5px_rgba(0,0,0,0.8)_inset] text-center\n          `}\n          >\n            {/* {!isDevelopment ? (\n              <Imgix\n                className=\"object-cover w-full h-full transition-all duration-300 opacity-50 bg-cover group-hover:scale-110 group-hover:opacity-100 group-focus:scale-110 group-focus:opacity-100\"\n                src={buildImgUrl(image, 'assets/team/images')}\n                sizes={sizes}\n                htmlAttributes={{\n                  alt: `${name}'s avatar`,\n                  loading: 'lazy',\n                }}\n              />\n            ) : ( */}\n              <img src={`/assets/team/images/${avatar}`} alt={`${name}'s avatar`} className=\"object-cover w-full h-full transition-all duration-200 bg-cover group-hover:scale-110 group-hover:blur-0 group-focus:scale-110 group-focus:hue-rotate-0 self-center\" loading='lazy' />\n            {/* )} */}\n          </picture>\n        </div>\n        <figcaption className=\"text-center flex flex-col gap-0\">\n          <h3 className=\"text-sm 2xl:text-lg font-bold 2xl:font-normal text-slate-600 dark:text-slate-400 leadIn\">{name}</h3>\n          <p className=\"text-xs 2xl:text-sm \">{role}</p>\n        </figcaption>\n        <div className=\"absolute rounded-lg bottom-0 flex flex-col items-start text-left justify-start content-center min-w-full md:w-[135%] flex-grow min-h-[120%] h-auto gap-2 transition-all duration-300 opacity-0 group-hover:opacity-100 group-focus:opacity-100 scale-50 group-hover:scale-100 group-focus:scale-100 group-hover:-translate-y-[0%] group-focus:translate-y-0 translate-y-10 origin-center z-50  filter backdrop-blur-xl \">\n          <div className=\"relative bio-content flex flex-col gap-y-2 p-3 flex-grow-0 z-10 w-full\">\n            <h4 className='text-lg font-bold gradient-text tracking-normal'>{name}</h4>\n            {bio ? <p className=\"text-xs text-slate-500 dark:text-white leading-tight \">{bio}</p> : undefined}\n\n            <div className=\"flex gap-2 flex-row justify-self-end items-center flex-shrink-0 translate-y-5 transition-transform  group-hover:translate-y-0 -translate-x-6 group-hover:translate-x-0 scale-0 group-hover:scale-100\">\n              {twitter ? <a href={twitter} title={`${name} on Twitter`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">Twitter</a> : undefined}\n              {linkedin ? <a href={linkedin} title={`${name} on Twitter`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">LinkedIn</a> : undefined}\n              {email ? <a href={email} title={`${name} on Email`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">Email</a> : undefined}\n            </div>\n          </div>\n          <div className='absolute inset-0  bg-slate-100 dark:bg-slate-900 opacity-80 filter backdrop-blur-xl rounded-lg shadow-lg p-4 w-full h-full z-0'/>\n        </div>\n      </figure>\n    </div>\n  )\n}\nexport default TeamMemberCard;\n\n/** TODO: Make this into a component to share between partners & team cards. */\n// export type CardInfoPopOverProps = {\n//   name: string;\n//   bio?: string;\n//   role?: string;\n//   twitter?: string;\n//   linkedin?: string;\n//   email?: string;\n//   url?: string;\n// }\n\n// export function CardInfoPopOver(props: CardInfoPopOverProps): JSX.Element {\n\n//   return (\n//     <div className=\"absolute bottom-0 flex flex-col items-start text-left justify-center content-center min-w-full md:w-[125%] flex-grow min-h-[120%] h-auto gap-2 transition-all duration-300 opacity-0 group-hover:opacity-100 group-focus:opacity-100 scale-50 group-hover:scale-100 group-focus:scale-100 group-hover:-translate-y-[0%] group-focus:translate-y-0 translate-y-10 origin-center z-50  filter backdrop-blur-xl\">\n//     <div className=\"relative bio-content flex flex-col gap-y-2 p-3 flex-grow z-10\">\n//       <h4 className='text-md font-bold gradient-text'>{name}</h4>\n//       {bio ? <p className=\"text-xs text-white leading-tight \">{bio}</p> : undefined}\n\n//       <div className=\"inline-flex gap-2 flex-row items-center translate-y-5 transition-transform  group-hover:translate-y-0 -translate-x-6 group-hover:translate-x-0 scale-0 group-hover:scale-100\">\n//         {twitter ? <a href={twitter} title={`${name} on Twitter`} className=\"text-xs text-white badge badge-link\">Twitter</a> : undefined}\n//         {linkedin ? <a href={linkedin} title={`${name} on Twitter`} className=\"text-xs text-white badge badge-link\">LinkedIn</a> : undefined}\n//         {email ? <a href={email} title={`${name} on Email`} className=\"text-xs text-white badge badge-link\">Email</a> : undefined}\n//       </div>\n//     </div>\n//     <div className='absolute inset-0 bg-slate-900 dark:bg-slate-900 opacity-80 filter backdrop-blur-xl blur-md rounded-lg shadow-lg p-4 w-full h-full z-0'/>\n//   </div>\n//   )\n// }","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Footer.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Header.tsx",["335","336","337","338","339","340","341"],["342"],"import { useEffect, useRef, useState } from \"react\";\n\nimport { Icon } from \"@iconify/react\";\nimport gsap from \"gsap\";\nimport { HashLink } from \"react-router-hash-link\";\nimport {useEventListener, useMediaQuery, useIntersectionObserver } from 'usehooks-ts'\nimport { v4 as uuid } from \"uuid\";\n\nimport { ButtonWeb3Connect, ButtonDarkMode } from \"~mb/components/Buttons\";\nimport {links} from \"~mb/components/Default/Footer\";\n\nconst navItems = [\n  { title: \"Home\", url: \"#home\" },\n  { title: \"Services\", url: \"#services\" },\n  { title: \"Partners\", url: \"#partners\" },\n  { title: \"Team\", url: \"#team\" },\n  { title: \"Pricing\", url: \"#pricing\" },\n];\n\nexport default function Header(): JSX.Element {\n  const mobileMenuWrapper = useRef<HTMLDivElement>(null);\n  const desktopMenuWrapper = useRef<HTMLElement>(null);\n  const header = useRef<HTMLElement>(null);\n  const mobileMenu = useRef<HTMLUListElement>(null)\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\n  // const entry = useIntersectionObserver(header, {});\n  // const isVisible = !!entry?.isIntersecting;\n  // const [isFixed, setIsFixed] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const wrapper = mobileMenuWrapper.current;\n  // define the default for the timeline\n  const tl = gsap.timeline({ paused: true, reversed: true });\n\n  // Set defaults for the mobile menu\n  // gsap.set(mobileMenuWrapper.current,\n  //   {\n  //     opacity: 0,\n  //     scale: 0.9,\n  //     yPercent: 100,\n  //   }\n  // )\n\n\n  // gsap.set(header.current,\n  //   {\n  //     position: 'absolute',\n  //   }\n  // )\n  // setup, but don't play the timeline animations\n  // tl.to(mobileMenuWrapper.current,\n  //   {\n  //     opacity: 1,\n  //     scale: 1,\n  //     yPercent: 0,\n  //     duration: 0.5,\n  //     ease: \"power3.inOut\",\n  //     autoAlpha: 1,\n  //   }\n  // );\n\n  /**\n   * Use GSAP timeline to animate the menu open and closed\n   *\n   * Also adds the `aria-hidden` attribute to the menu wrapper for accessibility\n   */\n  function onToggleMobileMenu(): void {\n    // if (typeof window === \"undefined\") return;\n    console.log('toggleMobileMenu', { isOpen });\n    setIsOpen(!isOpen);\n    const body = document.querySelector(\"body\") as HTMLElement;\n    body.classList.toggle(\"menu-open\");\n\n    if (wrapper) {\n      wrapper.ariaHidden = wrapper.classList.contains(\"hidden\") ? 'true' : 'false';\n    }\n  }\n\n  /** Show `mobileMenuWrapper` when the `isOpen` const is set to true */\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n    if (wrapper) wrapper.ariaHidden = wrapper.classList.contains(\"hidden\") ? 'false' : 'true';\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n\n\n  /** Changes the header from `absolute` to `fixed` when the user first scrolls */\n  function onScroll(): void {\n    if (typeof window === \"undefined\") return;\n    const page = document.documentElement;\n    const offset = header.current?.offsetHeight ?? 0;\n    const d = page.clientHeight - page.scrollTop - offset;\n    header.current?.classList.toggle(\"fixed-header\", d < 0);\n  }\n\n  // Effect to give the header a bounce effect on page load.\n  // useEffect(() => {\n  //   const headerTl = gsap.timeline({ paused: true, reversed: true });\n  //   headerTl.from(header, {\n  //     duration: 1,\n  //     opacity: 0,\n  //     yPercent: -100,\n  //     ease: \"bounce\",\n  //   });\n  //   // if (headerTl.reversed()) {\n  //   //   headerTl.play()\n  //   // } else {\n  //     //   headerTl.reverse();\n  //     // }\n  //     // }\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   // if (isVisible) {\n  //       headerTl.play()\n\n  //   // }\n  // }, [isVisible]);\n\n  // Listener to close the mobile menu when the user clicks a menu item.\n  useEventListener(\"click\", (e: MouseEvent) => {\n    console.log('click');\n\n    const target = e.target as HTMLElement;\n    if (target.tagName === \"A\") {\n      onToggleMobileMenu();\n    }\n  }, mobileMenu)\n\n  // Listen for the scroll events for the header 👆\n  useEventListener(\"scroll\", onScroll);\n\n\n  return (\n    <>\n      <header\n        ref={header}\n        id=\"page-header\"\n        className=\"absolute bottom-0 z-[100] h-12 lg:h-20 flex items-center justify-between w-full p-4 md:px-8 text-white border-transparent overflow-visible\"\n      >\n        <HashLink\n          className=\"flex items-center gap-3 hover:text-default justify-start\"\n          to=\"/#home\"\n        >\n          <h1 className=\"sr-only\">Meta-Builders</h1>\n          <span\n            className=\"brand font-heading inline-flex items-center text-md 2xl:text-lg text-shadow-alt gradient-text tracking-tight font-bold hover:gradient-text capitalize dark:hover:text-shadow-alt-teal z-[100]\"\n          ><span>Meta-Builders</span></span>\n        </HashLink>\n\n        <div className=\"desktop-menu hidden sm:flex items-center self-end z-10 \">\n          <nav className=\"hidden sm:block\">\n            <ul className=\"flex items-center gap-6\">\n              {navItems.map(({ title, url }) => (\n                <li key={uuid()}>\n                  <HashLink\n                    className=\"text-md 2xl:text-lg font-normal 2xl:font-bold uppercase xl:font-heading \"\n                    to={`/${url}`}\n                  >\n                    {title}\n                  </HashLink>\n                </li>\n              ))}\n            </ul>\n          </nav>\n          <div className=\"flex items-center gap-0 px-0\">\n            <ButtonDarkMode />\n            <ButtonWeb3Connect />\n          </div>\n        </div>\n\n\n        <div\n          ref={mobileMenuWrapper}\n          className={`mobile-menu inset-0 top-0 fixed transition-all ${isOpen ? 'translate-y-0 opacity-100 scale-100' : 'translate-y-full opacity-0 scale-70'} md:hidden h-screen w-screen  bg-gradient-to-bl dark:from-glass-primary-700 dark:to-glass-primary-900 filter backdrop-blur-lg !z-100`}\n          aria-hidden=\"true\"\n        >\n          <div className=\"fixed flex flex-col items-center justify-between w-full h-full inset-0 px-3 pt-0\">\n            <div\n              className=\"flex flex-col justify-center space-y-4 w-full h-2/3\"\n              role=\"dialog\"\n              aria-modal=\"true\"\n            >\n              <nav className=\"flex flex-row flex-grow items-center justify-center\">\n                <ul ref={mobileMenu} className=\"flex flex-col items-center justify-center gap-6\">\n                  {navItems.map(({ title, url }) => (\n                    <li key={uuid()}>\n                      <HashLink\n                        className=\"text-lg font-bold font-heading text-slate-500 dark:text-violet-300 hover:text-slate-700 dark:hover:text-teal-400 text-shadow-alt dark:hover:text-shadow-alt-teal transition-colors\"\n                        smooth\n                        to={`/${url}`}\n                      >\n                        {title}\n                      </HashLink>\n                    </li>\n                  ))}\n                </ul>\n              </nav>\n            </div>\n            <div className=\"flex flex-col justify-start items-center space-y-4 w-full flex-grow\">\n            <ul className=\"relative grid grid-cols-4 w-full gap-6 md:gap-4 sm:grid-cols-4 lg:w-1/4\">\n              {links.map((link) => (\n                <li key={uuid()} className=\"text-center\">\n                  <a\n                    className=\"group p-3 border-2 border-violet-800 dark:border-teal-200 rounded-full inline-flex items-center justify-center text-shadow-alt-sm dark:text-shadow-alt-sm-teal hover:animate-pulse w-3/4 h-auto\"\n                    href={link.url}\n                  >\n                    <span className=\"sr-only\">{link.description}</span>\n                    <Icon className=\"h-full text-violet-800  transition-colors text-6xl dark:text-teal-300 \" icon={link.icon} />\n                  </a>\n                </li>\n              ))}\n            </ul>\n\n            </div>\n          </div>\n        </div>\n      </header>\n      <div\n        className=\"mobile-tools w-full h-12 fixed bottom-0 right-2 py-3 flex flex-row items-center justify-end gap-1 lg:gap-1 lg:hidden z-[1000]\"\n      >\n        <ButtonWeb3Connect size=\"text-2xl lg:text-3xl\" />\n        <ButtonDarkMode />\n        <button\n          type=\"button\"\n          className=\"open-nav-button btn btn-link sm:hidden p-0 text-slate-600 hover:text-slate-700 dark:text-violet-300 dark:hover:text-teal-400 text-shadow-alt dark:hover:text-shadow-alt-teal\"\n          aria-label=\"Open navigation\"\n          onClick={onToggleMobileMenu}\n        >\n          <Icon\n            icon={isOpen ? 'mdi:close' : 'heroicons-solid:menu'}\n            className=\"h-8 w-8\"\n          />\n        </button>\n      </div>\n    </>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/HeroImage.tsx",["343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359"],["360"],"import { CSSProperties, lazy } from 'react'\n\nimport Imgix from 'react-imgix'\nimport { useImageOnLoad, useMediaQuery } from 'usehooks-ts'\n\nimport { buildImgUrl } from '~mb/lib/helpers'\nimport { useDarkMode } from '~mb/lib/hooks'\n\nexport function HeroImage(): JSX.Element {\n  const { handleImageOnLoad, css } = useImageOnLoad()\n  const { isDarkMode } = useDarkMode()\n  const widths = [450, 768, 1366, 1920]\n  const sizes = '100vw'\n  const deviceXs = useMediaQuery('(min-width: 0px)')\n  const deviceSm = useMediaQuery('(min-width: 640px)')\n  const deviceMd = useMediaQuery('(min-width: 1024px)')\n  const deviceLg = useMediaQuery('(min-width: 1280px)')\n  const deviceXl = useMediaQuery('(min-width: 1536px)')\n\n\n  return (\n    <picture className=\"relative inset-0 w-screen h-screen m-auto opacity-100 dark:opacity-50\" >\n      {/* <Imgix\n        className='fixed inset-0 h-screen w-screen object-cover'\n        src={buildImgUrl('synthwave-outrun-1920.png', 'assets/images')}\n        sizes={sizes}\n        htmlAttributes={{\n          alt: 'Synthwave landscape with a Metaverse city in the distance',\n          loading: 'eager',\n        }}\n        imgixParams={{\n          fit: \"crop\",\n          fm: \"png\",\n          ar: '16:9',\n          sat: isDarkMode ? 0 : -100,\n        }}\n      /> */}\n\n      <img\n        className='fixed inset-0 h-full w-full object-cover filter blur-lg'\n        src='assets/images/synthwave-outrun-fallback.jpg'\n        alt='Thumbnail: Synthwave landscape with a Metaverse city in the distance'\n        loading='eager'\n        />\n\n      <img\n        className='fixed inset-0 h-screen w-full object-cover filter grayscale invert dark:grayscale-0 dark:invert-0'\n        // eslint-disable-next-line react/jsx-handler-names\n        onLoad={handleImageOnLoad}\n        src='assets/images/synthwave-outrun-1920.png'\n        alt='Synthwave landscape with a Metaverse city in the distance'\n        width={1920}\n        height={1080}\n      />\n    </picture>\n  )\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/LoadingOrError.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/MarketplaceListings.tsx",["361","362","363","364"],[],"import { useCallback, useEffect, useState } from \"react\";\n\nimport { useMarketplace, useNetwork } from \"@thirdweb-dev/react\";\nimport type { AuctionListing, DirectListing } from \"@thirdweb-dev/sdk\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { PackageCard } from \"../Cards\";\nimport LoadingOrError from \"../LoadingOrError\";\n\nimport type { IPackage } from \"~mb/types\";\n\n\ntype MarketplaceProperties = {\n  address: string;\n}\nexport function MarketplaceListings({ address }: MarketplaceProperties): JSX.Element {\n  const [marketplaceListings, setMarketplaceListings] = useState<AuctionListing[] | DirectListing[] | undefined>();\n  const marketplace = useMarketplace(address);\n  const [isLoading, setIsLoading] = useState(true);\n\n  /** A callback function  to `getActiveListings` from the `marketplace` and then store them in `marketplaceListings` */\n  const fetchListingsCallback = useCallback(async ():Promise<(AuctionListing | DirectListing)[] | undefined>  => {\n    try {\n      const listings = await marketplace?.getActiveListings();\n      console.log('listings', listings);\n\n      if (listings === undefined) {\n        setIsLoading(false);\n        throw new Error(\"Error fetching listings\");\n      }\n      setIsLoading(false);\n      listings.sort((a, b) => Number.parseFloat(a.buyoutCurrencyValuePerToken.displayValue) - Number.parseFloat(b.buyoutCurrencyValuePerToken.displayValue));\n      return listings;\n    } catch (error) {\n      console.error(\"Error fetching listings\", error);\n      return undefined;\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [marketplace]);\n\n  useEffect(() => {\n    fetchListingsCallback().then(\n      (listings) => {\n        setMarketplaceListings(listings as AuctionListing[] | DirectListing[]);\n      }\n    ).catch(error => console.error(error));\n  }, [fetchListingsCallback]);\n\n\n  if (isLoading) {\n    return <LoadingOrError isInline message=\"Loading NFTs...\" />;\n  }\n  return (\n    <div className=\"flex flex-col space-y-5 items-stretch justify-items-stretch sm:space-y-0 sm:grid sm:gap-4 md:grid-cols-2 lg:grid-cols-3\">\n      {(marketplaceListings && marketplaceListings.length > 0) ? (\n        marketplaceListings.map((listing: AuctionListing | DirectListing) => {\n          const {asset, id, assetContractAddress, buyoutCurrencyValuePerToken, currencyContractAddress} = listing;\n          const cardKey = uuid();\n          const pack = {\n            id,\n            name: asset.name,\n            description: asset.description,\n            displayPrice: buyoutCurrencyValuePerToken.displayValue,\n            value: buyoutCurrencyValuePerToken.value,\n            address: assetContractAddress,\n            currency: currencyContractAddress,\n            currencySymbol: buyoutCurrencyValuePerToken.symbol,\n            image: asset.image,\n            type: asset.type,\n            attributes: asset.attributes,\n            marketplace,\n          } as IPackage\n\n          return <PackageCard key={cardKey} pack={pack} />\n\n        })\n        ) : (\n          <div className=\"flex flex-col items-center justify-center\">\n            <p>No listings</p>\n          </div>\n      )}\n    </div>\n  )\n}\n\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/PriceDisplay.tsx",["365"],[],"import { Icon } from \"@iconify/react\";\nimport accounting from \"accounting\";\n\nexport type IPriceDisplayProperties = {\n  price: string;\n  currency: string;\n}\n\n/** Displays the price of an asset in a pretty way */\nexport function PriceDisplay({ price, currency }: IPriceDisplayProperties): JSX.Element {\n  const cost = Number.parseFloat(price);\n  const formatted = accounting.formatMoney(price, '', 2)\n  const symbol = currency.toLowerCase();\n  // switch (currency) {\n  //   case \"USDC\":\n  //     symbol = currency.toLowerCase();\n\n  //     break;\n\n  //   default:\n  //     break;\n  // }\n  return (\n      <span className=\"price inline-flex items-center gap-2 text-lg 2xl:text-xl font-normal relative\">\n      <Icon icon={`cryptocurrency:${symbol}`} className=\"h-8 w-8 text-violet-400 opacity-80\" />\n      {cost > 0 ? formatted : 'TBD'}\n      {cost > 0 ?\n        (\n          <span className=\"text-violet-400\">{currency}</span>\n        ) : undefined\n      }\n    </span>\n  )\n}\n\nexport default PriceDisplay;","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Buy.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/ContentSection.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Intro.tsx",["366","367","368","369"],[],"import { useEffect, useLayoutEffect } from \"react\";\n\nimport { Icon } from \"@iconify/react\";\nimport {useIsClient} from \"usehooks-ts\"\n\nimport { useSectionAnimation } from '~mb/hooks/animation'\nimport {ContentSection} from \"~mb/sections/index\";\n\n\nexport function IntroSectionLead(): JSX.Element {\n  return (\n    <>\n      <span className=\"text-primary text-shadow\">Our services help you</span> navigate this new paradigm\n      and <span className=\"text-primary text-shadow\">take your brand to new heights</span>.\n    </>\n  )\n}\n\nexport default function IntroSection(): JSX.Element {\n  const sectionId = 'intro';\n\n  return (\n    <ContentSection\n      title=\"The Metaverse\"\n      id={sectionId}\n      justify=\"center\" lead={<IntroSectionLead />}>\n      <div\n        className=\" grid gap-2 grid-cols-2\"\n      >\n        <a\n          href=\"#team\"\n          className=\"group flex items-center justify-center gap-3 px-3 md:px-6 py-2 md:py-4 border-2 border-violet-500 hover:border-teal-500 rounded-md\"\n        >\n          <Icon\n            icon=\"fa:group\"\n            className=\"text-6xl\"\n          />\n          <span className=\"gradient-text-alt text-md md:text-2xl group-hover:text-teal-500 transition-colors\">The Team</span>\n        </a>\n        <a\n          href=\"#services\"\n          className=\"group flex items-center justify-center gap-3 px-6 py-4 border-2 border-violet-500 hover:border-teal-500 rounded-md\"\n        >\n          <Icon\n            icon=\"mdi:rocket\"\n            className=\"text-6xl\"\n          />\n          <span className=\"gradient-text-alt text-md md:text-2xl group-hover:text-teal-500 transition-colors\">Services</span>\n        </a>\n      </div>\n    </ContentSection>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Partners.tsx",["370","371"],[],"import { useLayoutEffect } from \"react\";\n\nimport { v4 as uuid } from \"uuid\";\n\nimport { PartnersCard  } from  '~mb/cards/index';\nimport partners from \"~mb/data/partners/partners.json\";\nimport { useSectionAnimation } from \"~mb/hooks/animation\";\nimport {ContentSection} from \"~mb/sections/index\";\n\n\n\nexport function PartnerSectionLead(): JSX.Element {\n  return (\n    <>\n      <span className=\"text-primary\">Meta-Builders is a community</span> of developers and designers who are <span className=\"text-primary\">passionate about building software</span>.\n    </>\n  )\n}\n\nexport default function PartnersSection(): JSX.Element {\n  const sectionId = 'partners';\n\n  return (\n    <ContentSection title=\"MB Partners\" id={sectionId} lead={<PartnerSectionLead />}>\n      <div className=\"max-w-3/4 w-full xl:max-w-4xl 2xl:max-w-6xl space-y-2\">\n        <div className=\"grid grid-cols-3 gap-2 xl:gap-4 xl:grid-cols-4 text-center\">\n          {partners.map((partner) => <PartnersCard key={uuid()} partner={partner} />)}\n        </div>\n      </div>\n    </ContentSection>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Services.tsx",["372"],[],"import { Icon } from '@iconify/react'\nimport { v4 as uuid } from \"uuid\";\n\nimport services from \"~mb/data/services/services.json\";\nimport { useSectionAnimation } from '~mb/hooks/animation';\nimport { ContentSection } from \"~mb/sections/index\";\n\nexport function ServicesLead(): JSX.Element {\n  return (\n    <>\n      We provide <span className=\"text-primary\">end to end services</span> for curating <span className=\"text-primary\">Web3</span> and <span className=\"text-primary\">Metaverse </span> environments.\n    </>\n  )\n}\n\nexport default function ServicesSection(): JSX.Element {\n  const sectionId = 'services'\n\n  return (\n    <ContentSection title=\"Services\" id={sectionId} lead={<ServicesLead />}>\n      <ul className=\"grid max-w-6xl grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n        {services.map(({ title, description, icon }) => (\n          <li key={uuid()} className=\"flex flex-col items-center gap-4 p-6 border border-default bg-offset\">\n            <div className=\"w-16 h-16 p-3 border-2 border-teal-200 rounded-full inline-flex items-center justify-center text-shadow-alt-sm-teal\">\n              <Icon icon={icon} className=\"text-6xl text-teal-300 \" />\n            </div>\n            <h3 className=\"text-xl font-extrabold text-center text-teal-300\">{title}</h3>\n            <p className=\"text-sm text-center text-offset\">{description}</p>\n          </li>\n        ))}\n      </ul>\n    </ContentSection>\n  );\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Splash.tsx",["373"],[],"\nimport { useEffect, useRef } from \"react\";\n\n\nimport { HeroImage } from \"~mb/components/HeroImage\";\nimport { useSplashContentAnimation } from \"~mb/hooks/animation\";\n\nexport default function SplashSection(): JSX.Element {\n  const sectionReference = useRef<HTMLDivElement>(null);\n  // const widths = [450, 800];\n  const isDevelopment = import.meta.env.VITE_NODE_ENV === \"development\"; // this doesn't work\n\n  const elementSelector = \".leadIn\";\n  const triggerSelector = sectionReference;\n  // const charSelector = \"#splash-character .leadIn\";\n\n  useSplashContentAnimation(elementSelector, triggerSelector);\n  // useSplashCharacterAnimation(charSelector, triggerSelector);\n\n  useEffect(() => {\n    if (isDevelopment) {\n      console.log(\"SplashSection: useEffect\");\n    }\n  }, [isDevelopment]);\n\n  return (\n    <section\n      ref={sectionReference}\n      id=\"home\"\n      className=\"splash-wrapper relative h-screen w-full dark:bg-slate-900 overflow-x-hidden\"\n    >\n      {/* <Starfield /> */}\n      <div\n        id=\"splash-bg-fallback\"\n        className=\"absolute inset-0 w-screen h-screen z-0 \"\n      >\n        <HeroImage />\n      </div>\n      <div className=\"relative grid h-full grid-cols-1 sm:grid-cols-2 place-items-end lg:place-items-center splash-main pb-32 lg:pb-0\">\n        <div id=\"splash-content\" className=\"leadIn invisible justify-self-center self-end lg:self-center\">\n          <h1 className=\"flex flex-col self-start lg:self-end gap-2 sm:gap-4 xl:self-auto xl:justify-self-end\">\n            <div className=\"shadow-font-heading font-black tracking-tighter text-center text-5xl 2xl:text-8xl gradient-text text-shadow-alt-4xl-teal\">\n              Meta-Builders\n            </div>\n          </h1>\n          <p className=\"font-bold text-xl 2xl:text-3xl gradient-text-alt text-fill tracking-tight text-center xl:text-right -translate-y-4 lg:-translate-y-6 2xl:-translate-y-8 text-shadow\">\n            Welcome to The Metaverse.</p>\n        </div>\n\n        {/* <picture id=\"splash-character\" className=\"floating self-start w-2/3 max-w-3xl sm:w-10/12 sm:self-auto sm:justify-self-start\"> */}\n        {/* {!isDevelopment ? (\n          <Imgix\n            className=\"object-cover w-full h-full invisible leadIn\"\n            src={buildImgUrl('astronaut2.png', 'assets/images')}\n            width={450}\n            htmlAttributes={{\n              alt: \"A floating astronaut in a space suit\",\n              sizes\n            }}\n            />\n          ) : ( */}\n        {/* <img src=\"assets/images/astronaut2.png\" alt=\"A floating astronaut in a space suit\" width={450}\n                className=\"object-cover w-full h-full invisible leadIn\"\n              /> */}\n        {/* )} */}\n        {/* </picture> */}\n      </div>\n    </section>\n  )\n}\n\n/**  */\nexport const SplashGL = (): Error => { throw new Error(\"SplashSection: SplashGL component is not implemented\") };\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Team.tsx",["374","375"],[],"import { v4 as uuid } from \"uuid\";\n\nimport { TeamMemberCard } from '~mb/cards/index';\nimport members from \"~mb/data/team/members.json\";\nimport { useSectionAnimation } from '~mb/hooks/animation';\nimport {ContentSection} from \"~mb/sections/index\";\nimport { ITeamMember } from \"~mb/types\";\n\nexport function TeamSectionLead(): JSX.Element {\n  return (\n    <>\n      We are the <span className=\"text-primary\">Meta-Builders</span>! We have <span className=\"text-primary\">everything you need</span> to keep <span className=\"text-primary\">your content</span> afloat in this ever changing digital world\n    </>\n  )\n}\n\nexport default function TeamSection(): JSX.Element {\n  const sectionId = 'team';\n\n  return (\n    <ContentSection title=\"Meet your team\" id={sectionId} lead={<TeamSectionLead />}>\n      <div className=\"max-w-6xl space-y-2\">\n        <div className=\"grid grid-cols-2 gap-6 space-y-0 md:gap-5 md:grid-cols-2 lg:grid-cols-5\">\n          {members.map((member) => (\n            <TeamMemberCard key={uuid()} member={member} />\n          ))}\n        </div>\n      </div>\n    </ContentSection>\n\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/index.ts",["376"],[],"export * from \"./ContentSection\";\nexport * from \"./Intro\";\nexport * from \"./Partners\";\nexport * from \"./Services\";\nexport * from \"./Splash\";\nexport * from \"./Team\";\nexport * from \"./Buy\";","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Starfield.tsx",[],[],["377","378","379","380","381"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Toast/index.tsx",["382"],["383","384","385"],"\n/* eslint-disable react/jsx-props-no-spreading */\n\nimport { useEffect } from \"react\";\n\nimport { Icon } from \"@iconify/react\"\nimport { normalizeProps, useActor } from \"@zag-js/react\"\nimport * as toast from '@zag-js/toast'\nimport type { PropTypes } from '@zag-js/types'\nimport  \"~mb/styles/toast.css\";\n/**\n * Toast component for displaying messages to the user\n */\nfunction Toast({actor, id}: {actor: toast.Service, id: string}): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  const [state, send] = useActor(actor)\n  const toastApi = toast.connect<PropTypes>(state, send, normalizeProps)\n\n  function onToastDismiss(): void {\n    toastApi.dismiss()\n  }\n\n  return (\n    <div id={id} className=\"toast pointer-events-auto px-0\" {...toastApi.rootProps}>\n      <div className=\"toast-header inline-flex items-start justify-between px-5 z-10\">\n        <h3 className=\"m-0 font-normal\" {...toastApi.titleProps}>{toastApi.title}</h3>\n        <span>{toastApi.type === \"loading\" ? <Icon icon=\"mdi:spinner\" className=\"animate-spin\" /> : undefined}</span>\n        <button\n          type=\"button\"\n          className=\"group btn btn-link self-start -mr-3 p-0 hover:text-violet-500\"\n          onClick={onToastDismiss}>\n          <Icon icon=\"mdi:close\" className=\"text-lg group-hover:text-violet-500 transition-colors\"/>\n          <span className=\"sr-only\">Dismiss</span>\n        </button>\n      </div>\n      <div {...toastApi.progressbarProps} />\n        {/* {toastApi.description ? <p>{toastApi.description}</p> : undefined} */}\n\n        <div className=\"toast-bg\" />\n    </div>\n  )\n}\n\nexport default Toast\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/ThemeContext.tsx",[],["386"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/layouts/Default.tsx",["387","388","389","390","391","392","393","394","395","396","397","398","399"],[],"\n\nimport type React from 'react';\nimport { ReactElement, useEffect } from 'react';\n\nimport gsap from \"gsap\";\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\nimport { ButtonProps } from 'react-daisyui';\n\nimport Footer from '~mb/default/Footer';\nimport Header from '~mb/default/Header';\n\nimport \"~mb/styles/index.css\";\nimport { useEventListener } from 'usehooks-ts';\n\ngsap.registerPlugin(ScrollToPlugin);\n\nexport type LayoutProperties = {\n  title?: string;\n  description?: string;\n  permalink?: string;\n  previewImageSrc?: URL;\n};\n\nexport function scrollOnLoad(): void {\n  const tl = gsap.timeline();\n  console.log(\"useScrollOnLoad\");\n\n  // useEffect(() => {\n    if (typeof window === \"undefined\") return;\n\n    if (window.location.hash !== \"\") {\n      console.log('scroll to hash', window.location.hash);\n\n      const element = document.querySelector(window.location.hash);\n      if (element !== null) {\n        // TODO: not sure why the easing & timing are not working\n        tl.to(\n          window,\n          {\n            duration: 0.4,\n            delay: 0.1,\n            scrollTo: {\n              y: element,\n            },\n            ease: \"power3.inOut\",\n          },\n        );\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [window.location]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [window.location.hash]);\n}\n\nexport function Layout({ children, content }: {children: React.ReactNode, content: LayoutProperties}): JSX.Element {\n  const { title, description, permalink, previewImageSrc } = content\n  const metaTitle = `${title ?? 'Welcome to the Metaverse'} - Meta-Builders`\n  const metaLink = permalink ? `https://metabuilders.luxumbra.dev${permalink}` : ''\n\n\n  return (\n    <div className=\"wrapper bg-gradient-to-b dark:from-slate-900 dark:to-slate-800\">\n      <Header />\n      {children}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Layout;\n\n\n\nLayout.defaultProps = {\n  title: \"Meta-Builders\",\n  description: \"Meta-Builders is a digital agency that specializes in building in the Metaverse, from websites, apps, to digital products for brands and businesses.\",\n  permalink: \"/\",\n  previewImageSrc: 'https://metabuilders.luxumbra.dev/social.png',\n}\n/* <script>\nimport gsap from \"gsap\";\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\ngsap.registerPlugin(ScrollToPlugin);\n\n// scroll to the hash in the url if there is one\nfunction handleScrollOnLoad() {\n  const tl = gsap.timeline();\n  if (typeof window === \"undefined\") return;\n\n  if (window.location.hash) {\n    const element = document.querySelector(window.location.hash);\n    if (element && tl) {\n      // TODO: not sure why the easing & timing are not working\n      tl.to(\n        window,\n        {\n          duration: 0,\n          delay: 0.1,\n          scrollTo: {\n            y: element,\n          },\n          ease: \"power3.inOut\",\n        },\n      );\n    }\n  }\n}\nwindow.addEventListener(\"load\", handleScrollOnLoad);\n</script>\n<script>\nimport { client } from '~mb/config';\n</script>\n<style>\n:global(html) {\n  scroll-behavior: smooth;\n}\n@media (prefers-reduced-motion: reduce) {\n  :global(html) {\n    scroll-behavior: auto;\n  }\n}\n</style> */","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/animation/starfield.ts",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],["417","418","419","420","421","422","423","424"],"/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n\nexport function starfield(): void {\n  const COUNT = 800;\n  const SPEED = 0.1;\n\n  type IStar = {\n    x: number;\n    y: number;\n    z: number;\n    xPrev: number;\n    yPrev: number;\n  }\n  class Star {\n    x: number;\n\n    y: number;\n\n    z: number;\n\n    xPrev: number;\n\n    yPrev: number;\n\n    constructor(x: number, y: number, z: number) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.xPrev = x;\n      this.yPrev = y;\n    }\n\n    update(width: number, height: number, speed: number): void {\n      this.xPrev = this.x;\n      this.yPrev = this.y;\n      this.z += speed * 0.0675;\n      this.x += this.x * (speed * 0.0225) * this.z;\n      this.y += this.y * (speed * 0.0225) * this.z;\n      if (\n        this.x > width / 2 ||\n        this.x < -width / 2 ||\n        this.y > height / 2 ||\n        this.y < -height / 2\n      ) {\n        this.x = Math.random() * width - width / 2;\n        this.y = Math.random() * height - height / 2;\n        this.xPrev = this.x;\n        this.yPrev = this.y;\n        this.z = 0;\n      }\n    }\n\n    draw(context: CanvasRenderingContext2D): void {\n      context.lineWidth = this.z;\n      context.beginPath();\n      context.moveTo(this.x, this.y);\n      context.lineTo(this.xPrev, this.yPrev);\n      context.stroke();\n    }\n  }\n\n  const stars = Array.from({ length: COUNT }, () => new Star(0, 0, 0));\n  let rafId: number;\n\n  const canvas = document.querySelector(\"#starfield-canvas\") as HTMLCanvasElement;\n  const context = canvas.getContext(\"2d\");\n\n  const container = document.querySelector(\"#starfield\");\n  if (container === null) return\n\n  function frame(): void {\n    if (container === null) return\n    if (context === null) return\n    const { clientWidth: width, clientHeight: height } = container;\n\n    for (const star of stars) {\n      star.update(width, height, SPEED);\n      star.draw(context);\n    }\n\n    context.fillRect(-width / 2, -height / 2, width, height);\n    rafId = requestAnimationFrame(frame);\n  }\n\n  function setup(): void {\n    if (container === null) return\n    if (context === null) return\n    if (rafId) cancelAnimationFrame(rafId);\n    const { clientWidth: width, clientHeight: height } = container;\n\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    context.scale(dpr, dpr);\n\n    for (const star of stars) {\n      star.x = Math.random() * width - width / 2;\n      star.y = Math.random() * height - height / 2;\n      star.z = 0;\n    }\n\n    context.translate(width / 2, height / 2);\n    context.fillStyle = \"rgba(0, 0, 0, 0.4)\";\n    context.strokeStyle = \"white\";\n    rafId = requestAnimationFrame(frame);\n  }\n  const resizeObserver = new ResizeObserver(setup);\n  resizeObserver.observe(container);\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/constants.ts",["425"],[],"import type { Marketplace } from \"@thirdweb-dev/sdk\"\n\nexport const tokenId = 'ethereum'\nexport const coingeckoApiUrl = 'https://api.coingecko.com/api/v3/'\nexport const tokenQuery = '?localization=false&tickers=true&market_data=true'\nexport const packageContract = '0x3E7bD1a413D7f411C33A201A7e97b5680101a2e3'\nexport const marketPlaceContract = '0x98Cd691f8533359782B83BD3231348e39c553050'\nexport const officialUrl = import.meta.env.VITE_METABUILDERS_OFFICIAL_URL as string\nexport const imgixUrl = 'https://metabuilders.luxumbra.dev/'","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/helpers.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/useDarkMode.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/main.tsx",["426"],["427"],"import { StrictMode } from \"react\";\r\n\r\nimport { QueryClient, QueryClientProvider} from '@tanstack/react-query'\r\nimport { ChainId, ThirdwebProvider } from \"@thirdweb-dev/react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport App from \"./App\";\r\n\r\nimport { ThemeProvider } from \"~mb/contexts\";\r\n\r\n\r\nimport './styles/index.css'\r\n// import { registerSW } from 'virtual:pwa-register'\r\n// This is the chainId your dApp will work on.\r\nconst queryClient = new QueryClient()\r\n\r\nconst activeChainId = ChainId.Mumbai;\r\nconst alchemyRpc = \"https://polygon-mumbai.g.alchemy.com/v2/N6I1vMx2hiWVsQa7tsg68OqmvejSmj0m\"\r\n\r\nconst container = document.querySelector(\"#root\");\r\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\nconst root = createRoot(container!);\r\nroot.render(\r\n  <StrictMode>\r\n    <ThemeProvider>\r\n      <QueryClientProvider client={queryClient}>\r\n      <ThirdwebProvider\r\n        desiredChainId={activeChainId}\r\n      >\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n        </ThirdwebProvider>\r\n        </QueryClientProvider>\r\n    </ThemeProvider>\r\n  </StrictMode>\r\n);\r\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/404.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/Home.tsx",["428","429","430","431"],[],"import { lazy, Suspense } from 'react'\n\nimport LoadingOrError from '~mb/components/LoadingOrError'\nimport Layout from '~mb/layouts/Default'\nimport { imgixUrl } from '~mb/lib/constants'\n\nimport '~mb/styles/index.css'\nimport { useLocation } from 'react-router-dom'\n\nconst BuySection = lazy(async () => import('~mb/sections/Buy'))\nconst IntroSection = lazy(async () => import('~mb/sections/Intro'))\nconst SplashSection = lazy(async () => import('~mb/sections/Splash'))\nconst PartnersSection = lazy(async () => import('~mb/sections/Partners'))\nconst TeamSection = lazy(async () => import('~mb/sections/Team'))\nconst ServicesSection = lazy(async () => import('~mb/sections/Services'))\n\n\n\n\nexport function Home(): JSX.Element {\n  const meta = {\n    title: 'Welcome to the Metaverse',\n    description:\n      'We the Meta-Builders will help you navigate this new paradigm, and take your brand to new heights',\n    previewImageSrc: new URL('social.png', imgixUrl)\n  }\n\n  return (\n    <Layout content={meta}>\n      <SplashSection />\n      <IntroSection />\n      <ServicesSection />\n      <PartnersSection />\n      <TeamSection />\n      <BuySection />\n    </Layout>\n  )\n}\n\nexport default Home\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/types/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/vite-env.d.ts",["432"],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/animation.ts",["433","434","435","436","437","438","439"],["440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482"],"/* eslint-disable @typescript-eslint/no-magic-numbers */\nimport type { MutableRefObject, RefObject} from 'react';\nimport { useEffect, useRef } from 'react'\n\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\nimport { useIntersectionObserver, useIsClient, useSsr } from 'usehooks-ts'\n\ngsap.registerPlugin(ScrollTrigger)\n\nexport * from '../animation/starfield'\n\n/** Handle the scroll triggers for page sections */\nexport function useSectionAnimation(\n  section: string,\n  clear?: boolean | undefined\n): void {\n  // if (section.length === 0) return ;\n  const { isBrowser } = useSsr()\n\n\n  const wrapper = document.querySelector(section)\n  console.log('useSectionAnimation', wrapper);\n\n  // const entry = useIntersectionObserver(section, {})\n  const tl = gsap.timeline({\n    paused: true,\n    reversed: true,\n    defaults: {\n      duration: 0.3,\n      delay: 0.3,\n      ease: 'power3.inOut'\n    },\n    scrollTrigger: {\n      trigger: wrapper,\n      start: 'top center',\n      end: '+=200',\n      scrub: 1,\n    }\n  })\n\n  if (clear) {\n    tl.clear()\n  }\n\n  function init(): void {\n    tl.fromTo(\n      `${section} .leadIn`,\n      {\n        opacity: 0,\n        y: 20,\n        stagger: 0.2\n      },\n      {\n        opacity: 1,\n        y: 0,\n        stagger: 0.2\n      }\n    )\n\n    // tl.to(\n    //   `${section} .leadIn`,\n    //   {\n    //     opacity: 0,\n    //     stagger: 0.5,\n    //     scrollTrigger: {\n    //       trigger: `${section} + section`,\n    //       start: \"top center\",\n    //       end: \"+=200\",\n    //       scrub: 1,\n    //       markers: true,\n    //     }\n    //   }\n    // )\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    tl.play()\n  }\n\n  useEffect(() => {\n    // if (!isBrowser) return ;\n      init()\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isBrowser])\n}\n\n/**\n * Reveals the CTA for buying a package\n *\n * Takes a `string` containing the selector for the CTA element and one for the trigger\n * @param element string\n * @param trigger string\n */\nexport function useBuyCtaAnimation(\n  element: string,\n  trigger: string,\n): void {\n  const { isBrowser } = useSsr()\n  const tl = gsap.timeline({\n    defaults: {\n      duration: 2,\n      delay: 0.5,\n      ease: 'power3.inOut'\n    },\n    scrollTrigger: {\n      trigger,\n      start: 'top top',\n      end: 'bottom center',\n      scrub: 1,\n      // markers: true,\n      pin: true\n    }\n  })\n\n  function init(): void {\n    if (element.length === 0) return\n    tl.fromTo(\n      element,\n      {\n        opacity: 0,\n        scale: 0.5,\n        x: '100%'\n      },\n      {\n        opacity: 1,\n        scale: 1,\n        x: 25\n      }\n    )\n  }\n\n  useEffect(() => {\n    if (isBrowser) init()\n    return () => {\n      tl.clear()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isBrowser]);\n}\n\n/** Animations & triggers for the extra content (rhs) on the splash screen */\nexport function useSplashCharacterAnimation(\n  element: string,\n  triggerReference: RefObject<HTMLElement>,\n): void {\n  const {isBrowser} = useSsr()\n  const trigger = triggerReference.current\n  // const entry = useIntersectionObserver(triggerReference, {})\n  const tl = gsap.timeline({\n    defaults: {\n      duration: 0.5,\n      opacity: 0,\n      delay: 0,\n      ease: 'power3.inOut'\n    }\n  })\n\n  function init(): void {\n    tl.from(element, { autoAlpha: 0 })\n\n    tl.fromTo(\n      element,\n      {\n        opacity: 1,\n        scale: 1,\n        rotate: 0,\n        x: 0,\n        y: 0,\n        stagger: 0.5\n      },\n      {\n        opacity: 1,\n        rotate: 90,\n        scale: 0.5,\n        y: '15%',\n        x: '2%',\n        stagger: 0.5,\n        scrollTrigger: {\n          trigger,\n          start: 'top top',\n          end: '+=500',\n          scrub: 1\n          // markers: true,\n        }\n      }\n    )\n  }\n\n  useEffect(() => {\n    if (isBrowser) init()\n  });\n\n}\n\n/** Animations for the splash screen content */\nexport function useSplashContentAnimation(\n  element: string,\n  triggerReference: RefObject<HTMLElement>,\n): void {\n  const {isBrowser} = useSsr()\n  const trigger = triggerReference.current\n  const entry = useIntersectionObserver(triggerReference, {})\n  const isVisible = !!entry?.isIntersecting\n\n  const tl = gsap.timeline({\n    paused: true,\n    reversed: true,\n    defaults: {\n      duration: 1.5,\n      delay: 0,\n      ease: 'power3.inOut'\n    }\n  })\n\n  function init(): void {\n    tl.from(element, {\n      autoAlpha: 0,\n      // y: 0,\n      xPercent: 0,\n      scale: 1,\n      transformOrigin: 'center',\n      stagger: 0.1,\n    })\n\n    // tl.fromTo(\n    //   element,\n    //   {\n    //     opacity: 1,\n    //     xPercent: 0,\n    //     scale: 1\n    //   },\n    //   {\n    //     opacity: 0,\n    //     scale: 0.5,\n    //     transformOrigin: 'center',\n    //     xPercent: -10,\n    //     scrollTrigger: {\n    //       trigger,\n    //       start: '15% center',\n    //       end: '+=1000',\n    //       scrub: 1,\n    //     }\n    //   }\n    // )\n\n    // if (isVisible) {\n      if (tl.reversed()) {\n        tl.play()\n      } else {\n        tl.reverse()\n      }\n\n    // }\n  }\n\n  useEffect(() => {\n    if (isBrowser && isVisible) init()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isBrowser, isVisible]);\n}\n\nexport function useScrollReveal(element: string, trigger: string): void {\n\n  function init(): void {\n    if (typeof window === 'undefined') return\n    console.log('init scroll reveal', {trigger, element});\n\n    const tl = gsap.timeline({\n      defaults: {\n        duration: 0.3,\n        delay: 0.5,\n        ease: 'power3.inOut'\n      }\n    })\n    tl.fromTo(\n      `${trigger} ${element}`,\n      {\n        opacity: 0,\n        y: 10,\n        stagger: 0.2,\n        autoAlpha: 1\n      },\n      {\n        opacity: 1,\n        y: 0,\n        stagger: 0.2,\n        scrollTrigger: {\n          trigger,\n          start: 'top 85%',\n          end: '+=25px',\n          scrub: 1,\n          }\n        }\n      )\n\n    }\n\n\n\n  useEffect(() => {\n    if (element.length === 0) return\n    init()\n  })\n}\n\nexport function useHeaderAnimation(): void {\n  if (typeof window === 'undefined') return\n\n  const mobileMenuId = 'mobile-menu'\n  const mobileMenuWrapper = document.querySelector(\n    `#${mobileMenuId}`\n  ) as HTMLElement\n  const header = document.querySelector('#page-header') as HTMLElement\n  const page = document.documentElement\n  const menu = document.querySelector(`#${mobileMenuId} ul`) as HTMLElement\n  const openNavButton = document.querySelector(\n    '#open-nav-button'\n  ) as HTMLButtonElement\n  const closeNavButton = document.querySelector(\n    '#close-nav-button'\n  ) as HTMLButtonElement\n\n  const openMenu = (): void => {\n    console.log('openMenu')\n    mobileMenuWrapper.classList.remove('hidden')\n    gsap.to(mobileMenuWrapper, {\n      duration: 0.5,\n      opacity: 1,\n      y: 0,\n      ease: 'power2.inOut'\n    })\n  }\n\n  const closeMenu = (): void => {\n    mobileMenuWrapper.classList.add('hidden')\n    gsap.to(mobileMenuWrapper, {\n      duration: 0.5,\n      opacity: 0,\n      y: -100,\n      ease: 'power2.inOut'\n    })\n  }\n\n  function init(): void {\n    gsap.from(header, {\n      duration: 1,\n      opacity: 0,\n      y: '-100%',\n      ease: 'bounce'\n    })\n    openNavButton.addEventListener('click', openMenu)\n    closeNavButton.addEventListener('click', closeMenu)\n\n    document.addEventListener('scroll', () => {\n      const d = page.clientHeight - page.scrollTop - header.offsetHeight\n      header.classList.toggle('fixed-header', d < 0)\n      gsap.from(header, {\n        duration: 0.5,\n        // opacity: d < 0 ? 1 : 0.5,\n        ease: 'power3.inOut'\n      })\n    })\n\n    menu.addEventListener('click', event => {\n      const target = event.target as HTMLElement\n      if (target.tagName === 'A') {\n        closeMenu()\n      }\n    })\n  }\n\n  if (typeof window !== 'undefined') {\n    window.addEventListener('load', () => {\n      init()\n    })\n  }\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Portal.tsx",["483","484","485","486"],[],"import type React from 'react'\n\nimport usePortal from 'react-useportal'\n\n\nexport function Portal({ children }: { children: JSX.Element }): JSX.Element {\n  const { openPortal, closePortal, isOpen, Portal: ZagPortal, ref } = usePortal({\n    bindTo: document.querySelector('#portal-root') as HTMLElement,\n    closeOnOutsideClick: true,\n  })\n\n  return (\n    <ZagPortal forwardRef={ref}>\n      {children}\n    </ZagPortal>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Seo.tsx",[],[],["487","488","489","490","491"],{"ruleId":"492","severity":1,"message":"493","line":34,"column":11,"nodeType":"494","messageId":"495","endLine":34,"endColumn":13},{"ruleId":"496","severity":1,"message":"497","line":50,"column":18,"nodeType":"498","messageId":"499","endLine":50,"endColumn":22},{"ruleId":"492","severity":1,"message":"500","line":63,"column":11,"nodeType":"494","messageId":"495","endLine":63,"endColumn":19},{"ruleId":"496","severity":1,"message":"501","line":72,"column":21,"nodeType":"498","messageId":"499","endLine":72,"endColumn":22},{"ruleId":"502","severity":2,"message":"503","line":2,"column":24,"nodeType":"498","messageId":"504","endLine":2,"endColumn":32,"fix":"505","suppressions":"506"},{"ruleId":"507","severity":2,"message":"508","line":82,"column":5,"nodeType":"509","messageId":"510","endLine":82,"endColumn":46,"suppressions":"511"},{"ruleId":"512","severity":2,"message":"513","line":88,"column":6,"nodeType":"514","endLine":88,"endColumn":40,"suggestions":"515","suppressions":"516"},{"ruleId":"517","replacedBy":"518"},{"ruleId":"519","replacedBy":"520"},{"ruleId":"521","replacedBy":"522"},{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","replacedBy":"526"},{"ruleId":"527","severity":2,"message":"528","line":18,"column":7,"nodeType":"529","messageId":"530","endLine":18,"endColumn":16,"suppressions":"531"},{"ruleId":"492","severity":1,"message":"532","line":4,"column":22,"nodeType":"494","messageId":"495","endLine":4,"endColumn":32},{"ruleId":"492","severity":1,"message":"533","line":4,"column":79,"nodeType":"494","messageId":"495","endLine":4,"endColumn":87},{"ruleId":"534","severity":2,"message":"535","line":5,"column":1,"nodeType":"536","messageId":"537","endLine":5,"endColumn":80,"fix":"538"},{"ruleId":"492","severity":1,"message":"539","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":17},{"ruleId":"492","severity":1,"message":"540","line":5,"column":19,"nodeType":"494","messageId":"495","endLine":5,"endColumn":32},{"ruleId":"492","severity":1,"message":"541","line":5,"column":47,"nodeType":"494","messageId":"495","endLine":5,"endColumn":52},{"ruleId":"492","severity":1,"message":"542","line":8,"column":8,"nodeType":"494","messageId":"495","endLine":8,"endColumn":18},{"ruleId":"543","severity":1,"message":"544","line":20,"column":1,"nodeType":"536","endLine":20,"endColumn":49,"fix":"545"},{"ruleId":"543","severity":1,"message":"544","line":21,"column":1,"nodeType":"536","endLine":21,"endColumn":39,"fix":"546"},{"ruleId":"543","severity":1,"message":"547","line":21,"column":1,"nodeType":"536","endLine":21,"endColumn":39,"fix":"548"},{"ruleId":"543","severity":1,"message":"544","line":22,"column":1,"nodeType":"536","endLine":22,"endColumn":60,"fix":"549"},{"ruleId":"543","severity":1,"message":"550","line":22,"column":1,"nodeType":"536","endLine":22,"endColumn":60,"fix":"551"},{"ruleId":"552","severity":2,"message":"553","line":23,"column":1,"nodeType":null,"fix":"554"},{"ruleId":"543","severity":1,"message":"555","line":23,"column":1,"nodeType":"536","endLine":23,"endColumn":44,"fix":"556"},{"ruleId":"557","severity":2,"message":"558","line":23,"column":8,"nodeType":"559","endLine":23,"endColumn":20},{"ruleId":"492","severity":1,"message":"560","line":82,"column":9,"nodeType":"494","messageId":"495","endLine":82,"endColumn":19},{"ruleId":"496","severity":1,"message":"501","line":83,"column":14,"nodeType":"498","messageId":"499","endLine":83,"endColumn":15},{"ruleId":"496","severity":1,"message":"561","line":85,"column":12,"nodeType":"498","messageId":"499","endLine":85,"endColumn":15},{"ruleId":"496","severity":1,"message":"562","line":86,"column":15,"nodeType":"498","messageId":"499","endLine":86,"endColumn":18},{"ruleId":"496","severity":1,"message":"501","line":88,"column":16,"nodeType":"498","messageId":"499","endLine":88,"endColumn":17},{"ruleId":"563","severity":2,"message":"564","line":103,"column":41,"nodeType":"565","messageId":"566","endLine":103,"endColumn":52},{"ruleId":"567","severity":1,"message":"568","line":103,"column":41,"nodeType":"565","messageId":"569","endLine":103,"endColumn":52},{"ruleId":"567","severity":1,"message":"568","line":104,"column":31,"nodeType":"565","messageId":"569","endLine":104,"endColumn":42},{"ruleId":"570","severity":1,"message":"571","line":111,"column":7,"nodeType":"565","messageId":"572","endLine":111,"endColumn":18},{"ruleId":"492","severity":1,"message":"573","line":119,"column":13,"nodeType":"494","messageId":"495","endLine":119,"endColumn":24},{"ruleId":"496","severity":1,"message":"574","line":124,"column":19,"nodeType":"498","messageId":"499","endLine":124,"endColumn":23},{"ruleId":"492","severity":1,"message":"575","line":126,"column":15,"nodeType":"494","messageId":"495","endLine":126,"endColumn":30},{"ruleId":"496","severity":1,"message":"574","line":130,"column":19,"nodeType":"498","messageId":"499","endLine":130,"endColumn":23},{"ruleId":"492","severity":1,"message":"576","line":143,"column":15,"nodeType":"494","messageId":"495","endLine":143,"endColumn":25},{"ruleId":"496","severity":1,"message":"577","line":149,"column":21,"nodeType":"498","messageId":"499","endLine":149,"endColumn":25},{"ruleId":"496","severity":1,"message":"574","line":156,"column":21,"nodeType":"498","messageId":"499","endLine":156,"endColumn":25},{"ruleId":"496","severity":1,"message":"574","line":169,"column":27,"nodeType":"498","messageId":"499","endLine":169,"endColumn":31},{"ruleId":"578","severity":2,"message":"579","line":174,"column":23,"nodeType":"494","messageId":"580","endLine":174,"endColumn":27},{"ruleId":"581","severity":2,"message":"582","line":179,"column":71,"nodeType":"565","messageId":"583","endLine":179,"endColumn":83},{"ruleId":"581","severity":2,"message":"582","line":180,"column":125,"nodeType":"565","messageId":"583","endLine":180,"endColumn":137},{"ruleId":"496","severity":1,"message":"577","line":181,"column":31,"nodeType":"498","messageId":"499","endLine":181,"endColumn":35},{"ruleId":"584","severity":1,"message":"585","line":186,"column":32,"nodeType":"586","messageId":"587","endLine":186,"endColumn":35,"suggestions":"588"},{"ruleId":"570","severity":1,"message":"571","line":187,"column":19,"nodeType":"565","messageId":"572","endLine":187,"endColumn":30},{"ruleId":"567","severity":1,"message":"589","line":189,"column":22,"nodeType":"565","messageId":"569","endLine":189,"endColumn":35},{"ruleId":"567","severity":1,"message":"590","line":189,"column":51,"nodeType":"565","messageId":"569","endLine":189,"endColumn":65},{"ruleId":"492","severity":1,"message":"591","line":190,"column":25,"nodeType":"494","messageId":"495","endLine":190,"endColumn":37},{"ruleId":"496","severity":1,"message":"577","line":194,"column":31,"nodeType":"498","messageId":"499","endLine":194,"endColumn":35},{"ruleId":"496","severity":1,"message":"574","line":206,"column":27,"nodeType":"498","messageId":"499","endLine":206,"endColumn":31},{"ruleId":"570","severity":1,"message":"571","line":214,"column":11,"nodeType":"565","messageId":"572","endLine":214,"endColumn":24},{"ruleId":"496","severity":1,"message":"574","line":219,"column":23,"nodeType":"498","messageId":"499","endLine":219,"endColumn":27},{"ruleId":"512","severity":2,"message":"592","line":226,"column":5,"nodeType":"514","endLine":226,"endColumn":135,"suggestions":"593"},{"ruleId":"496","severity":1,"message":"594","line":235,"column":50,"nodeType":"498","messageId":"499","endLine":235,"endColumn":53},{"ruleId":"496","severity":1,"message":"501","line":239,"column":18,"nodeType":"498","messageId":"499","endLine":239,"endColumn":19},{"ruleId":"496","severity":1,"message":"595","line":242,"column":19,"nodeType":"498","messageId":"499","endLine":242,"endColumn":22},{"ruleId":"496","severity":1,"message":"501","line":247,"column":18,"nodeType":"498","messageId":"499","endLine":247,"endColumn":19},{"ruleId":"496","severity":1,"message":"501","line":248,"column":16,"nodeType":"498","messageId":"499","endLine":248,"endColumn":17},{"ruleId":"496","severity":1,"message":"596","line":249,"column":16,"nodeType":"498","messageId":"499","endLine":249,"endColumn":20},{"ruleId":"496","severity":1,"message":"597","line":250,"column":19,"nodeType":"498","messageId":"499","endLine":250,"endColumn":22},{"ruleId":"496","severity":1,"message":"501","line":253,"column":18,"nodeType":"498","messageId":"499","endLine":253,"endColumn":19},{"ruleId":"570","severity":1,"message":"571","line":259,"column":26,"nodeType":"565","messageId":"572","endLine":259,"endColumn":37},{"ruleId":"496","severity":1,"message":"598","line":259,"column":50,"nodeType":"498","messageId":"499","endLine":259,"endColumn":53},{"ruleId":"570","severity":1,"message":"571","line":371,"column":9,"nodeType":"565","messageId":"572","endLine":371,"endColumn":20},{"ruleId":"570","severity":1,"message":"571","line":374,"column":9,"nodeType":"565","messageId":"572","endLine":374,"endColumn":20},{"ruleId":"599","severity":1,"message":"600","line":393,"column":9,"nodeType":"601","messageId":"602","endLine":393,"endColumn":62},{"ruleId":"527","severity":2,"message":"528","line":343,"column":11,"nodeType":"529","messageId":"530","endLine":343,"endColumn":67,"suppressions":"603"},{"ruleId":"492","severity":1,"message":"604","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":20},{"ruleId":"492","severity":1,"message":"605","line":5,"column":22,"nodeType":"494","messageId":"495","endLine":5,"endColumn":33},{"ruleId":"606","severity":1,"message":"607","line":13,"column":13,"nodeType":"494","messageId":"608","endLine":13,"endColumn":35},{"ruleId":"570","severity":1,"message":"571","line":28,"column":7,"nodeType":"565","messageId":"572","endLine":28,"endColumn":18},{"ruleId":"570","severity":1,"message":"571","line":30,"column":7,"nodeType":"565","messageId":"572","endLine":30,"endColumn":18},{"ruleId":"570","severity":1,"message":"571","line":44,"column":7,"nodeType":"565","messageId":"572","endLine":44,"endColumn":18},{"ruleId":"570","severity":1,"message":"571","line":46,"column":9,"nodeType":"565","messageId":"572","endLine":46,"endColumn":20},{"ruleId":"570","severity":1,"message":"571","line":52,"column":7,"nodeType":"565","messageId":"572","endLine":52,"endColumn":18},{"ruleId":"492","severity":1,"message":"609","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":36},{"ruleId":"492","severity":1,"message":"610","line":4,"column":15,"nodeType":"494","messageId":"495","endLine":4,"endColumn":19},{"ruleId":"567","severity":1,"message":"611","line":33,"column":11,"nodeType":"565","messageId":"569","endLine":33,"endColumn":29},{"ruleId":"492","severity":1,"message":"612","line":46,"column":81,"nodeType":"494","messageId":"495","endLine":46,"endColumn":85},{"ruleId":"492","severity":1,"message":"613","line":13,"column":9,"nodeType":"494","messageId":"495","endLine":13,"endColumn":14},{"ruleId":"492","severity":1,"message":"614","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"615","line":3,"column":10,"nodeType":"494","messageId":"495","endLine":3,"endColumn":23},{"ruleId":"492","severity":1,"message":"616","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":21},{"ruleId":"492","severity":1,"message":"613","line":12,"column":9,"nodeType":"494","messageId":"495","endLine":12,"endColumn":14},{"ruleId":"492","severity":1,"message":"617","line":6,"column":42,"nodeType":"494","messageId":"495","endLine":6,"endColumn":65},{"ruleId":"492","severity":1,"message":"618","line":22,"column":9,"nodeType":"494","messageId":"495","endLine":22,"endColumn":27},{"ruleId":"492","severity":1,"message":"619","line":25,"column":9,"nodeType":"494","messageId":"495","endLine":25,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":32,"column":9,"nodeType":"494","messageId":"495","endLine":32,"endColumn":11},{"ruleId":"570","severity":1,"message":"571","line":68,"column":5,"nodeType":"565","messageId":"572","endLine":68,"endColumn":16},{"ruleId":"606","severity":1,"message":"620","line":119,"column":30,"nodeType":"494","messageId":"621","endLine":119,"endColumn":43},{"ruleId":"570","severity":1,"message":"571","line":120,"column":5,"nodeType":"565","messageId":"572","endLine":120,"endColumn":16},{"ruleId":"512","severity":2,"message":"622","line":83,"column":6,"nodeType":"514","endLine":83,"endColumn":14,"suggestions":"623","suppressions":"624"},{"ruleId":"492","severity":1,"message":"625","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":23},{"ruleId":"492","severity":1,"message":"626","line":1,"column":25,"nodeType":"494","messageId":"495","endLine":1,"endColumn":29},{"ruleId":"492","severity":1,"message":"614","line":3,"column":8,"nodeType":"494","messageId":"495","endLine":3,"endColumn":13},{"ruleId":"492","severity":1,"message":"616","line":6,"column":10,"nodeType":"494","messageId":"495","endLine":6,"endColumn":21},{"ruleId":"492","severity":1,"message":"627","line":10,"column":30,"nodeType":"494","messageId":"495","endLine":10,"endColumn":33},{"ruleId":"492","severity":1,"message":"628","line":11,"column":11,"nodeType":"494","messageId":"495","endLine":11,"endColumn":21},{"ruleId":"492","severity":1,"message":"629","line":12,"column":9,"nodeType":"494","messageId":"495","endLine":12,"endColumn":15},{"ruleId":"496","severity":1,"message":"630","line":12,"column":19,"nodeType":"498","messageId":"499","endLine":12,"endColumn":22},{"ruleId":"496","severity":1,"message":"631","line":12,"column":24,"nodeType":"498","messageId":"499","endLine":12,"endColumn":27},{"ruleId":"496","severity":1,"message":"632","line":12,"column":29,"nodeType":"498","messageId":"499","endLine":12,"endColumn":33},{"ruleId":"496","severity":1,"message":"633","line":12,"column":35,"nodeType":"498","messageId":"499","endLine":12,"endColumn":39},{"ruleId":"492","severity":1,"message":"613","line":13,"column":9,"nodeType":"494","messageId":"495","endLine":13,"endColumn":14},{"ruleId":"492","severity":1,"message":"634","line":14,"column":9,"nodeType":"494","messageId":"495","endLine":14,"endColumn":17},{"ruleId":"492","severity":1,"message":"635","line":15,"column":9,"nodeType":"494","messageId":"495","endLine":15,"endColumn":17},{"ruleId":"492","severity":1,"message":"636","line":16,"column":9,"nodeType":"494","messageId":"495","endLine":16,"endColumn":17},{"ruleId":"492","severity":1,"message":"637","line":17,"column":9,"nodeType":"494","messageId":"495","endLine":17,"endColumn":17},{"ruleId":"492","severity":1,"message":"638","line":18,"column":9,"nodeType":"494","messageId":"495","endLine":18,"endColumn":17},{"ruleId":"599","severity":1,"message":"639","line":49,"column":9,"nodeType":"601","messageId":"602","endLine":49,"endColumn":35,"suppressions":"640"},{"ruleId":"492","severity":1,"message":"609","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":36},{"ruleId":"570","severity":1,"message":"571","line":25,"column":7,"nodeType":"565","messageId":"572","endLine":25,"endColumn":18},{"ruleId":"570","severity":1,"message":"571","line":35,"column":7,"nodeType":"565","messageId":"572","endLine":35,"endColumn":20},{"ruleId":"570","severity":1,"message":"571","line":46,"column":22,"nodeType":"565","messageId":"572","endLine":46,"endColumn":35},{"ruleId":"496","severity":1,"message":"641","line":12,"column":55,"nodeType":"498","messageId":"499","endLine":12,"endColumn":56},{"ruleId":"492","severity":1,"message":"642","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":19},{"ruleId":"492","severity":1,"message":"643","line":1,"column":21,"nodeType":"494","messageId":"495","endLine":1,"endColumn":36},{"ruleId":"492","severity":1,"message":"644","line":4,"column":9,"nodeType":"494","messageId":"495","endLine":4,"endColumn":20},{"ruleId":"492","severity":1,"message":"645","line":6,"column":10,"nodeType":"494","messageId":"495","endLine":6,"endColumn":29},{"ruleId":"492","severity":1,"message":"643","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":25},{"ruleId":"492","severity":1,"message":"645","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":29},{"ruleId":"492","severity":1,"message":"645","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":29},{"ruleId":"570","severity":1,"message":"571","line":22,"column":7,"nodeType":"565","messageId":"572","endLine":22,"endColumn":18},{"ruleId":"492","severity":1,"message":"645","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":29},{"ruleId":"492","severity":1,"message":"646","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":21},{"ruleId":"647","severity":2,"message":"648","line":5,"column":15,"nodeType":"498","endLine":5,"endColumn":25},{"ruleId":"517","replacedBy":"649"},{"ruleId":"519","replacedBy":"650"},{"ruleId":"521","replacedBy":"651"},{"ruleId":"523","replacedBy":"652"},{"ruleId":"525","replacedBy":"653"},{"ruleId":"492","severity":1,"message":"642","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":19},{"ruleId":"527","severity":2,"message":"528","line":24,"column":61,"nodeType":"529","messageId":"530","endLine":24,"endColumn":84,"suppressions":"654"},{"ruleId":"527","severity":2,"message":"528","line":26,"column":41,"nodeType":"529","messageId":"530","endLine":26,"endColumn":65,"suppressions":"655"},{"ruleId":"527","severity":2,"message":"528","line":36,"column":12,"nodeType":"529","messageId":"530","endLine":36,"endColumn":42,"suppressions":"656"},{"ruleId":"657","severity":2,"message":"658","line":66,"column":35,"nodeType":"659","messageId":"660","endLine":66,"endColumn":54,"suppressions":"661"},{"ruleId":"492","severity":1,"message":"662","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":22},{"ruleId":"492","severity":1,"message":"642","line":4,"column":24,"nodeType":"494","messageId":"495","endLine":4,"endColumn":33},{"ruleId":"492","severity":1,"message":"663","line":8,"column":10,"nodeType":"494","messageId":"495","endLine":8,"endColumn":21},{"ruleId":"543","severity":1,"message":"664","line":14,"column":1,"nodeType":"536","endLine":14,"endColumn":48},{"ruleId":"492","severity":1,"message":"665","line":14,"column":10,"nodeType":"494","messageId":"495","endLine":14,"endColumn":26},{"ruleId":"570","severity":1,"message":"571","line":27,"column":3,"nodeType":"565","messageId":"572","endLine":27,"endColumn":14},{"ruleId":"570","severity":1,"message":"571","line":33,"column":7,"nodeType":"565","messageId":"572","endLine":33,"endColumn":18},{"ruleId":"496","severity":1,"message":"666","line":41,"column":23,"nodeType":"498","messageId":"499","endLine":41,"endColumn":26},{"ruleId":"496","severity":1,"message":"561","line":42,"column":20,"nodeType":"498","messageId":"499","endLine":42,"endColumn":23},{"ruleId":"492","severity":1,"message":"667","line":59,"column":18,"nodeType":"494","messageId":"495","endLine":59,"endColumn":29},{"ruleId":"492","severity":1,"message":"668","line":59,"column":42,"nodeType":"494","messageId":"495","endLine":59,"endColumn":57},{"ruleId":"492","severity":1,"message":"669","line":60,"column":9,"nodeType":"494","messageId":"495","endLine":60,"endColumn":18},{"ruleId":"492","severity":1,"message":"670","line":61,"column":9,"nodeType":"494","messageId":"495","endLine":61,"endColumn":17},{"ruleId":"492","severity":1,"message":"671","line":7,"column":8,"nodeType":"494","messageId":"495","endLine":7,"endColumn":13},{"ruleId":"496","severity":1,"message":"672","line":36,"column":25,"nodeType":"498","messageId":"499","endLine":36,"endColumn":31},{"ruleId":"496","severity":1,"message":"673","line":37,"column":35,"nodeType":"498","messageId":"499","endLine":37,"endColumn":41},{"ruleId":"496","severity":1,"message":"673","line":38,"column":35,"nodeType":"498","messageId":"499","endLine":38,"endColumn":41},{"ruleId":"496","severity":1,"message":"641","line":40,"column":26,"nodeType":"498","messageId":"499","endLine":40,"endColumn":27},{"ruleId":"496","severity":1,"message":"641","line":41,"column":27,"nodeType":"498","messageId":"499","endLine":41,"endColumn":28},{"ruleId":"496","severity":1,"message":"641","line":42,"column":27,"nodeType":"498","messageId":"499","endLine":42,"endColumn":28},{"ruleId":"496","severity":1,"message":"641","line":43,"column":28,"nodeType":"498","messageId":"499","endLine":43,"endColumn":29},{"ruleId":"496","severity":1,"message":"641","line":45,"column":50,"nodeType":"498","messageId":"499","endLine":45,"endColumn":51},{"ruleId":"496","severity":1,"message":"641","line":46,"column":52,"nodeType":"498","messageId":"499","endLine":46,"endColumn":53},{"ruleId":"496","severity":1,"message":"641","line":81,"column":31,"nodeType":"498","messageId":"499","endLine":81,"endColumn":32},{"ruleId":"496","severity":1,"message":"641","line":81,"column":44,"nodeType":"498","messageId":"499","endLine":81,"endColumn":45},{"ruleId":"496","severity":1,"message":"501","line":91,"column":44,"nodeType":"498","messageId":"499","endLine":91,"endColumn":45},{"ruleId":"496","severity":1,"message":"641","line":99,"column":48,"nodeType":"498","messageId":"499","endLine":99,"endColumn":49},{"ruleId":"496","severity":1,"message":"641","line":100,"column":50,"nodeType":"498","messageId":"499","endLine":100,"endColumn":51},{"ruleId":"496","severity":1,"message":"641","line":104,"column":31,"nodeType":"498","messageId":"499","endLine":104,"endColumn":32},{"ruleId":"496","severity":1,"message":"641","line":104,"column":43,"nodeType":"498","messageId":"499","endLine":104,"endColumn":44},{"ruleId":"674","severity":2,"message":"675","line":15,"column":5,"nodeType":"676","messageId":"677","endLine":15,"endColumn":15,"suppressions":"678"},{"ruleId":"674","severity":2,"message":"679","line":17,"column":5,"nodeType":"676","messageId":"677","endLine":17,"endColumn":15,"suppressions":"680"},{"ruleId":"674","severity":2,"message":"681","line":19,"column":5,"nodeType":"676","messageId":"677","endLine":19,"endColumn":15,"suppressions":"682"},{"ruleId":"674","severity":2,"message":"683","line":21,"column":5,"nodeType":"676","messageId":"677","endLine":21,"endColumn":19,"suppressions":"684"},{"ruleId":"674","severity":2,"message":"685","line":23,"column":5,"nodeType":"676","messageId":"677","endLine":23,"endColumn":19,"suppressions":"686"},{"ruleId":"674","severity":2,"message":"687","line":25,"column":5,"nodeType":"688","messageId":"677","endLine":31,"endColumn":6,"suppressions":"689"},{"ruleId":"674","severity":2,"message":"690","line":33,"column":5,"nodeType":"688","messageId":"677","endLine":51,"endColumn":6,"suppressions":"691"},{"ruleId":"674","severity":2,"message":"692","line":53,"column":5,"nodeType":"688","messageId":"677","endLine":59,"endColumn":6,"suppressions":"693"},{"ruleId":"492","severity":1,"message":"694","line":1,"column":15,"nodeType":"494","messageId":"495","endLine":1,"endColumn":26},{"ruleId":"492","severity":1,"message":"695","line":19,"column":7,"nodeType":"494","messageId":"495","endLine":19,"endColumn":17},{"ruleId":"696","severity":2,"message":"697","line":23,"column":25,"nodeType":"698","messageId":"699","endLine":23,"endColumn":35,"suppressions":"700"},{"ruleId":"492","severity":1,"message":"701","line":1,"column":16,"nodeType":"494","messageId":"495","endLine":1,"endColumn":24},{"ruleId":"492","severity":1,"message":"702","line":3,"column":8,"nodeType":"494","messageId":"495","endLine":3,"endColumn":22},{"ruleId":"543","severity":1,"message":"703","line":8,"column":1,"nodeType":"536","endLine":8,"endColumn":47},{"ruleId":"492","severity":1,"message":"704","line":8,"column":10,"nodeType":"494","messageId":"495","endLine":8,"endColumn":21},{"ruleId":"606","severity":1,"message":"705","line":2,"column":1,"nodeType":"706","messageId":"608","endLine":2,"endColumn":1},{"ruleId":"492","severity":1,"message":"707","line":2,"column":15,"nodeType":"494","messageId":"495","endLine":2,"endColumn":31},{"ruleId":"492","severity":1,"message":"708","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":27},{"ruleId":"492","severity":1,"message":"644","line":7,"column":35,"nodeType":"494","messageId":"495","endLine":7,"endColumn":46},{"ruleId":"570","severity":1,"message":"571","line":23,"column":3,"nodeType":"565","messageId":"572","endLine":23,"endColumn":14},{"ruleId":"492","severity":1,"message":"709","line":201,"column":9,"nodeType":"494","messageId":"495","endLine":201,"endColumn":16},{"ruleId":"570","severity":1,"message":"571","line":268,"column":5,"nodeType":"565","messageId":"572","endLine":268,"endColumn":16},{"ruleId":"570","severity":1,"message":"571","line":326,"column":5,"nodeType":"565","messageId":"572","endLine":326,"endColumn":16},{"ruleId":"496","severity":1,"message":"595","line":30,"column":17,"nodeType":"498","messageId":"499","endLine":30,"endColumn":20,"suppressions":"710"},{"ruleId":"496","severity":1,"message":"595","line":31,"column":14,"nodeType":"498","messageId":"499","endLine":31,"endColumn":17,"suppressions":"711"},{"ruleId":"496","severity":1,"message":"501","line":38,"column":14,"nodeType":"498","messageId":"499","endLine":38,"endColumn":15,"suppressions":"712"},{"ruleId":"496","severity":1,"message":"713","line":51,"column":12,"nodeType":"498","messageId":"499","endLine":51,"endColumn":14,"suppressions":"714"},{"ruleId":"496","severity":1,"message":"715","line":52,"column":18,"nodeType":"498","messageId":"499","endLine":52,"endColumn":21,"suppressions":"716"},{"ruleId":"496","severity":1,"message":"501","line":55,"column":18,"nodeType":"498","messageId":"499","endLine":55,"endColumn":19,"suppressions":"717"},{"ruleId":"496","severity":1,"message":"715","line":57,"column":18,"nodeType":"498","messageId":"499","endLine":57,"endColumn":21,"suppressions":"718"},{"ruleId":"512","severity":2,"message":"719","line":84,"column":6,"nodeType":"514","endLine":84,"endColumn":17,"suggestions":"720","suppressions":"721"},{"ruleId":"496","severity":1,"message":"641","line":101,"column":17,"nodeType":"498","messageId":"499","endLine":101,"endColumn":18,"suppressions":"722"},{"ruleId":"496","severity":1,"message":"562","line":102,"column":14,"nodeType":"498","messageId":"499","endLine":102,"endColumn":17,"suppressions":"723"},{"ruleId":"496","severity":1,"message":"501","line":109,"column":14,"nodeType":"498","messageId":"499","endLine":109,"endColumn":15,"suppressions":"724"},{"ruleId":"496","severity":1,"message":"562","line":121,"column":16,"nodeType":"498","messageId":"499","endLine":121,"endColumn":19,"suppressions":"725"},{"ruleId":"496","severity":1,"message":"501","line":125,"column":18,"nodeType":"498","messageId":"499","endLine":125,"endColumn":19,"suppressions":"726"},{"ruleId":"496","severity":1,"message":"501","line":126,"column":16,"nodeType":"498","messageId":"499","endLine":126,"endColumn":17,"suppressions":"727"},{"ruleId":"496","severity":1,"message":"728","line":127,"column":12,"nodeType":"498","messageId":"499","endLine":127,"endColumn":14,"suppressions":"729"},{"ruleId":"512","severity":2,"message":"730","line":138,"column":6,"nodeType":"514","endLine":138,"endColumn":17,"suggestions":"731","suppressions":"732"},{"ruleId":"496","severity":1,"message":"562","line":151,"column":17,"nodeType":"498","messageId":"499","endLine":151,"endColumn":20,"suppressions":"733"},{"ruleId":"496","severity":1,"message":"501","line":164,"column":18,"nodeType":"498","messageId":"499","endLine":164,"endColumn":19,"suppressions":"734"},{"ruleId":"496","severity":1,"message":"501","line":165,"column":16,"nodeType":"498","messageId":"499","endLine":165,"endColumn":17,"suppressions":"735"},{"ruleId":"496","severity":1,"message":"562","line":169,"column":18,"nodeType":"498","messageId":"499","endLine":169,"endColumn":21,"suppressions":"736"},{"ruleId":"496","severity":1,"message":"501","line":172,"column":18,"nodeType":"498","messageId":"499","endLine":172,"endColumn":19,"suppressions":"737"},{"ruleId":"496","severity":1,"message":"738","line":173,"column":17,"nodeType":"498","messageId":"499","endLine":173,"endColumn":19,"suppressions":"739"},{"ruleId":"496","severity":1,"message":"562","line":174,"column":16,"nodeType":"498","messageId":"499","endLine":174,"endColumn":19,"suppressions":"740"},{"ruleId":"496","severity":1,"message":"562","line":177,"column":18,"nodeType":"498","messageId":"499","endLine":177,"endColumn":21,"suppressions":"741"},{"ruleId":"496","severity":1,"message":"501","line":182,"column":18,"nodeType":"498","messageId":"499","endLine":182,"endColumn":19,"suppressions":"742"},{"ruleId":"496","severity":1,"message":"743","line":209,"column":17,"nodeType":"498","messageId":"499","endLine":209,"endColumn":20,"suppressions":"744"},{"ruleId":"496","severity":1,"message":"501","line":220,"column":14,"nodeType":"498","messageId":"499","endLine":220,"endColumn":15,"suppressions":"745"},{"ruleId":"496","severity":1,"message":"561","line":222,"column":16,"nodeType":"498","messageId":"499","endLine":222,"endColumn":19,"suppressions":"746"},{"ruleId":"512","severity":2,"message":"719","line":261,"column":6,"nodeType":"514","endLine":261,"endColumn":28,"suggestions":"747","suppressions":"748"},{"ruleId":"496","severity":1,"message":"595","line":272,"column":19,"nodeType":"498","messageId":"499","endLine":272,"endColumn":22,"suppressions":"749"},{"ruleId":"496","severity":1,"message":"562","line":273,"column":16,"nodeType":"498","messageId":"499","endLine":273,"endColumn":19,"suppressions":"750"},{"ruleId":"496","severity":1,"message":"751","line":281,"column":12,"nodeType":"498","messageId":"499","endLine":281,"endColumn":14,"suppressions":"752"},{"ruleId":"496","severity":1,"message":"715","line":282,"column":18,"nodeType":"498","messageId":"499","endLine":282,"endColumn":21,"suppressions":"753"},{"ruleId":"496","severity":1,"message":"501","line":283,"column":20,"nodeType":"498","messageId":"499","endLine":283,"endColumn":21,"suppressions":"754"},{"ruleId":"496","severity":1,"message":"501","line":286,"column":18,"nodeType":"498","messageId":"499","endLine":286,"endColumn":19,"suppressions":"755"},{"ruleId":"496","severity":1,"message":"715","line":288,"column":18,"nodeType":"498","messageId":"499","endLine":288,"endColumn":21,"suppressions":"756"},{"ruleId":"496","severity":1,"message":"501","line":293,"column":18,"nodeType":"498","messageId":"499","endLine":293,"endColumn":19,"suppressions":"757"},{"ruleId":"496","severity":1,"message":"562","line":329,"column":17,"nodeType":"498","messageId":"499","endLine":329,"endColumn":20,"suppressions":"758"},{"ruleId":"496","severity":1,"message":"501","line":330,"column":16,"nodeType":"498","messageId":"499","endLine":330,"endColumn":17,"suppressions":"759"},{"ruleId":"496","severity":1,"message":"562","line":339,"column":17,"nodeType":"498","messageId":"499","endLine":339,"endColumn":20,"suppressions":"760"},{"ruleId":"496","severity":1,"message":"761","line":341,"column":10,"nodeType":"762","messageId":"499","endLine":341,"endColumn":14,"suppressions":"763"},{"ruleId":"496","severity":1,"message":"501","line":348,"column":17,"nodeType":"498","messageId":"499","endLine":348,"endColumn":18,"suppressions":"764"},{"ruleId":"496","severity":1,"message":"562","line":360,"column":19,"nodeType":"498","messageId":"499","endLine":360,"endColumn":22,"suppressions":"765"},{"ruleId":"492","severity":1,"message":"766","line":1,"column":13,"nodeType":"494","messageId":"495","endLine":1,"endColumn":18},{"ruleId":"492","severity":1,"message":"767","line":7,"column":11,"nodeType":"494","messageId":"495","endLine":7,"endColumn":21},{"ruleId":"492","severity":1,"message":"768","line":7,"column":23,"nodeType":"494","messageId":"495","endLine":7,"endColumn":34},{"ruleId":"492","severity":1,"message":"769","line":7,"column":36,"nodeType":"494","messageId":"495","endLine":7,"endColumn":42},{"ruleId":"517","replacedBy":"770"},{"ruleId":"519","replacedBy":"771"},{"ruleId":"521","replacedBy":"772"},{"ruleId":"523","replacedBy":"773"},{"ruleId":"525","replacedBy":"774"},"@typescript-eslint/no-unused-vars","'tl' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-magic-numbers","No magic number: 1200.","Literal","noMagic","'fallback' is assigned a value but never used.","No magic number: 1.","unicorn/prefer-node-protocol","Prefer `node:buffer` over `buffer`.","prefer-node-protocol",{"range":"775","text":"776"},["777"],"@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["778"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLocation'. Either include it or remove the dependency array.","ArrayExpression",["779"],["780"],"lines-around-directive",["781"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/jsx-props-no-spreading","Prop spreading is forbidden","JSXSpreadAttribute","noSpreading",["782"],"'useBalance' is defined but never used.","'useToken' is defined but never used.","@typescript-eslint/consistent-type-imports","Import \"Marketplace\" is only used as types.","ImportDeclaration","aImportIsOnlyTypes",{"range":"783","text":"784"},"'ChainId' is defined but never used.","'CurrencyValue' is defined but never used.","'Token' is defined but never used.","'accounting' is defined but never used.","import/order","There should be at least one empty line between import groups",{"range":"785","text":"786"},{"range":"787","text":"786"},"`@iconify/react` import should occur before import of `@thirdweb-dev/react`",{"range":"788","text":"789"},{"range":"790","text":"786"},"`~mb/lib/constants` import should occur before import of `~mb/lib/helpers`",{"range":"791","text":"792"},"import/newline-after-import","Expected 1 empty line after import statement not followed by another import.",{"range":"793","text":"786"},"`../PriceDisplay` import should occur before import of `./ButtonWeb3Connect`",{"range":"794","text":"795"},"import/no-named-as-default","Using exported name 'PriceDisplay' as identifier for default export.","ImportDefaultSpecifier","'popupTween' is assigned a value but never used.","No magic number: 0.1.","No magic number: 0.5.","@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any` assigned to a parameter of type `BigNumberish`.","MemberExpression","unsafeArgument","@typescript-eslint/no-unsafe-member-access","Unsafe member access .result on an `any` value.","unsafeMemberExpression","no-console","Unexpected console statement.","unexpected","'copyToastId' is assigned a value but never used.","No magic number: 3000.","'_error' is defined but never used.","'buyToastId' is assigned a value but never used.","No magic number: 7000.","@typescript-eslint/no-shadow","'data' is already declared in the upper scope on line 159 column 68.","noShadow","unicorn/consistent-destructuring","Use destructured variables over properties.","consistentDestructuring","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["796","797"],"Unsafe member access .message on an `any` value.","Unsafe member access .toString on an `any` value.","'errorToastId' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'getTokenBalance'. Either include it or remove the dependency array.",["798"],"No magic number: 101.","No magic number: 0.3.","No magic number: 0.05.","No magic number: 0.7.","No magic number: 300.","react/jsx-handler-names","Handler function for onClick prop key must be a camelCase name beginning with 'on' only","JSXAttribute","badHandlerName",["799"],"'MdDarkMode' is defined but never used.","'MdLightMode' is defined but never used.","unicorn/prevent-abbreviations","The variable `ButtonWeb3ConnectProps` should be named `ButtonWeb3ConnectProperties`. A more descriptive name will do too.","replace","'useNetwork' is defined but never used.","'Json' is defined but never used.","Unsafe member access .trait_type on an `any` value.","'type' is assigned a value but never used.","'sizes' is assigned a value but never used.","'Imgix' is defined but never used.","'isDevelopment' is defined but never used.","'buildImgUrl' is defined but never used.","'useIntersectionObserver' is defined but never used.","'desktopMenuWrapper' is assigned a value but never used.","'isMobile' is assigned a value but never used.","Please rename the variable `e`. Suggested names are: `error`, `event_`. A more descriptive name will do too.","suggestion","React Hook useEffect has a missing dependency: 'wrapper'. Either include it or remove the dependency array.",["800"],["801"],"'CSSProperties' is defined but never used.","'lazy' is defined but never used.","'css' is assigned a value but never used.","'isDarkMode' is assigned a value but never used.","'widths' is assigned a value but never used.","No magic number: 450.","No magic number: 768.","No magic number: 1366.","No magic number: 1920.","'deviceXs' is assigned a value but never used.","'deviceSm' is assigned a value but never used.","'deviceMd' is assigned a value but never used.","'deviceLg' is assigned a value but never used.","'deviceXl' is assigned a value but never used.","Handler function for onLoad prop key must be a camelCase name beginning with 'on' only",["802"],"No magic number: 2.","'useEffect' is defined but never used.","'useLayoutEffect' is defined but never used.","'useIsClient' is defined but never used.","'useSectionAnimation' is defined but never used.","'ITeamMember' is defined but never used.","import/export","No named exports found in module './Splash'.",["781"],[],[],[],[],["803"],["804"],["805"],"react/jsx-no-constructed-context-values","The object passed as the value prop to the Context provider (at line 66) changes every render. To fix this consider wrapping it in a useMemo hook.","ObjectExpression","defaultMsg",["806"],"'ReactElement' is defined but never used.","'ButtonProps' is defined but never used.","`usehooks-ts` import should occur before import of `~mb/default/Footer`","'useEventListener' is defined but never used.","No magic number: 0.4.","'description' is assigned a value but never used.","'previewImageSrc' is assigned a value but never used.","'metaTitle' is assigned a value but never used.","'metaLink' is assigned a value but never used.","'IStar' is defined but never used.","No magic number: 0.0675.","No magic number: 0.0225.","@typescript-eslint/explicit-member-accessibility","Missing accessibility modifier on class property x.","PropertyDefinition","missingAccessibility",["807"],"Missing accessibility modifier on class property y.",["808"],"Missing accessibility modifier on class property z.",["809"],"Missing accessibility modifier on class property xPrev.",["810"],"Missing accessibility modifier on class property yPrev.",["811"],"Missing accessibility modifier on method definition constructor.","MethodDefinition",["812"],"Missing accessibility modifier on method definition update.",["813"],"Missing accessibility modifier on method definition draw.",["814"],"'Marketplace' is defined but never used.","'alchemyRpc' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["815"],"'Suspense' is defined but never used.","'LoadingOrError' is defined but never used.","`react-router-dom` import should occur before import of `~mb/components/LoadingOrError`","'useLocation' is defined but never used.","The filename `vite-env.d.ts` should be named `vite-environment.d.ts`. A more descriptive name will do too.","Program","'MutableRefObject' is defined but never used.","'useRef' is defined but never used.","'trigger' is assigned a value but never used.",["816"],["817"],["818"],"No magic number: 20.",["819"],"No magic number: 0.2.",["820"],["821"],["822"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["823"],["824"],["825"],["826"],["827"],["828"],["829"],["830"],"No magic number: 25.",["831"],"React Hook useEffect has missing dependencies: 'init' and 'tl'. Either include them or remove the dependency array.",["832"],["833"],["834"],["835"],["836"],["837"],["838"],"No magic number: 90.",["839"],["840"],["841"],["842"],"No magic number: 1.5.",["843"],["844"],["845"],["846"],["847"],["848"],["849"],"No magic number: 10.",["850"],["851"],["852"],["853"],["854"],["855"],["856"],["857"],["858"],"No magic number: -100.","UnaryExpression",["859"],["860"],["861"],"'React' is defined but never used.","'openPortal' is assigned a value but never used.","'closePortal' is assigned a value but never used.","'isOpen' is assigned a value but never used.",["781"],[],[],[],[],[81,81],"node:",{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"desc":"864","fix":"865"},{"kind":"862","justification":"863"},"padding-line-between-statements",{"kind":"862","justification":"863"},[236,280],"import type { Marketplace} from '@thirdweb-dev/sdk';\nimport { ChainId, CurrencyValue",[861,861],"\n",[900,900],[120,901],"import { Icon } from '@iconify/react';\nimport { useAddress, useBalance, useMetamask, useNetwork, useNetworkMismatch, useToken } from '@thirdweb-dev/react'\nimport { ChainId, CurrencyValue, Marketplace, Token } from '@thirdweb-dev/sdk';\nimport { useMachine, normalizeProps } from '@zag-js/react'\nimport * as toast from '@zag-js/toast'\nimport accounting from 'accounting'\nimport { BigNumber, utils } from 'ethers';\nimport gsap from 'gsap'\nimport { useOnClickOutside, useCopyToClipboard } from 'usehooks-ts'\nimport { v4 as uuid } from 'uuid'\n\nimport LoadingOrError from '../LoadingOrError'\n\nimport { ButtonWeb3Connect } from './ButtonWeb3Connect'\n\nimport { Portal } from '~mb/components/Portal'\nimport Toast from '~mb/components/Toast'\nimport { shortenAddress } from '~mb/lib/helpers'\n",[960,960],[813,961],"import { polygonScanApiEndpoint } from '~mb/lib/constants';\nimport { shortenAddress } from '~mb/lib/helpers'\nimport { Icon } from '@iconify/react';\n",[1004,1004],[668,1005],"import PriceDisplay from '../PriceDisplay';\nimport { ButtonWeb3Connect } from './ButtonWeb3Connect'\n\nimport { Portal } from '~mb/components/Portal'\nimport Toast from '~mb/components/Toast'\nimport { shortenAddress } from '~mb/lib/helpers'\nimport { Icon } from '@iconify/react';\nimport { polygonScanApiEndpoint } from '~mb/lib/constants';\n",{"messageId":"866","fix":"867","desc":"868"},{"messageId":"869","fix":"870","desc":"871"},{"desc":"872","fix":"873"},{"kind":"862","justification":"863"},{"desc":"874","fix":"875"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"desc":"876","fix":"877"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"desc":"878","fix":"879"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"desc":"880","fix":"881"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},{"kind":"862","justification":"863"},"directive","","Update the dependencies array to be: [location.hash, location.pathname, onLocation]",{"range":"882","text":"883"},"suggestUnknown",{"range":"884","text":"885"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"884","text":"886"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [forAddress, apiToast, name, price, currencySymbol, getTokenBalance, currency, packValue, marketplace, quantityToBuy]",{"range":"887","text":"888"},"Update the dependencies array to be: [isOpen, wrapper]",{"range":"889","text":"890"},"Update the dependencies array to be: [init, isBrowser]",{"range":"891","text":"892"},"Update the dependencies array to be: [init, isBrowser, tl]",{"range":"893","text":"894"},"Update the dependencies array to be: [init, isBrowser, isVisible]",{"range":"895","text":"896"},[2494,2528],"[location.hash, location.pathname, onLocation]",[6376,6379],"unknown","never",[7637,7767],"[forAddress, apiToast, name, price, currencySymbol, getTokenBalance, currency, packValue, marketplace, quantityToBuy]",[2658,2666],"[isOpen, wrapper]",[1846,1857],"[init, isBrowser]",[2840,2851],"[init, isBrowser, tl]",[5312,5334],"[init, isBrowser, isVisible]"]