[{"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/App.tsx":"1","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/Button.tsx":"2","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonBuyPackage.tsx":"3","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonDarkMode.tsx":"4","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonWeb3Connect.tsx":"5","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/index.ts":"6","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PackageCard.tsx":"7","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PartnersCard.tsx":"8","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/TeamMemberCard.tsx":"9","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/index.ts":"10","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Footer.tsx":"11","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Header.tsx":"12","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/HeroImage.tsx":"13","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/LoadingOrError.tsx":"14","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/MarketplaceListings.tsx":"15","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/index.ts":"16","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/PriceDisplay.tsx":"17","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Buy.tsx":"18","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/ContentSection.tsx":"19","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Intro.tsx":"20","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Partners.tsx":"21","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Services.tsx":"22","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Splash.tsx":"23","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Team.tsx":"24","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/index.ts":"25","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Starfield.tsx":"26","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Toast/index.tsx":"27","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/ThemeContext.tsx":"28","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/index.ts":"29","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/layouts/Default.tsx":"30","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/animation/starfield.ts":"31","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/constants.ts":"32","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/helpers.ts":"33","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/index.ts":"34","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/useDarkMode.ts":"35","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/main.tsx":"36","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/404.tsx":"37","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/Home.tsx":"38","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/types/index.ts":"39","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/vite-env.d.ts":"40","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/animation.ts":"41","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Portal.tsx":"42","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Seo.tsx":"43"},{"size":2838,"mtime":1659290187394,"results":"44","hashOfConfig":"45"},{"size":799,"mtime":1658784457710,"results":"46","hashOfConfig":"45"},{"size":13412,"mtime":1659365397782,"results":"47","hashOfConfig":"45"},{"size":1391,"mtime":1659276243280,"results":"48","hashOfConfig":"45"},{"size":4010,"mtime":1659287833325,"results":"49","hashOfConfig":"45"},{"size":128,"mtime":1658419996773,"results":"50","hashOfConfig":"45"},{"size":3856,"mtime":1659358032357,"results":"51","hashOfConfig":"45"},{"size":3201,"mtime":1659278113453,"results":"52","hashOfConfig":"45"},{"size":5945,"mtime":1659289318570,"results":"53","hashOfConfig":"45"},{"size":93,"mtime":1658752942521,"results":"54","hashOfConfig":"45"},{"size":2810,"mtime":1659206346707,"results":"55","hashOfConfig":"45"},{"size":8621,"mtime":1659288596290,"results":"56","hashOfConfig":"45"},{"size":1971,"mtime":1659283392603,"results":"57","hashOfConfig":"45"},{"size":1941,"mtime":1659114945074,"results":"58","hashOfConfig":"45"},{"size":3074,"mtime":1659195815488,"results":"59","hashOfConfig":"45"},{"size":39,"mtime":1658754522173,"results":"60","hashOfConfig":"45"},{"size":640,"mtime":1658926042503,"results":"61","hashOfConfig":"45"},{"size":1366,"mtime":1659269306740,"results":"62","hashOfConfig":"45"},{"size":2226,"mtime":1659297775896,"results":"63","hashOfConfig":"45"},{"size":1685,"mtime":1659198570549,"results":"64","hashOfConfig":"45"},{"size":1057,"mtime":1659297431138,"results":"65","hashOfConfig":"45"},{"size":1416,"mtime":1659129799609,"results":"66","hashOfConfig":"45"},{"size":2863,"mtime":1659298226031,"results":"67","hashOfConfig":"45"},{"size":1096,"mtime":1659197444234,"results":"68","hashOfConfig":"45"},{"size":187,"mtime":1658413735966,"results":"69","hashOfConfig":"45"},{"size":398,"mtime":1658881794487,"results":"70","hashOfConfig":"71"},{"size":1580,"mtime":1659313756073,"results":"72","hashOfConfig":"45"},{"size":1936,"mtime":1658968904769,"results":"73","hashOfConfig":"45"},{"size":31,"mtime":1658417079218,"results":"74","hashOfConfig":"45"},{"size":3437,"mtime":1659301319423,"results":"75","hashOfConfig":"45"},{"size":2885,"mtime":1658785604543,"results":"76","hashOfConfig":"45"},{"size":582,"mtime":1659204216822,"results":"77","hashOfConfig":"45"},{"size":972,"mtime":1659036520205,"results":"78","hashOfConfig":"45"},{"size":29,"mtime":1658782954774,"results":"79","hashOfConfig":"45"},{"size":588,"mtime":1659137409618,"results":"80","hashOfConfig":"45"},{"size":1208,"mtime":1659367694044,"results":"81","hashOfConfig":"45"},{"size":1065,"mtime":1659040419116,"results":"82","hashOfConfig":"45"},{"size":1182,"mtime":1659301329251,"results":"83","hashOfConfig":"45"},{"size":562,"mtime":1658781223626,"results":"84","hashOfConfig":"71"},{"size":38,"mtime":1657237072000,"results":"85","hashOfConfig":"71"},{"size":7993,"mtime":1659136048961,"results":"86","hashOfConfig":"45"},{"size":422,"mtime":1659016632052,"results":"87","hashOfConfig":"45"},{"size":1743,"mtime":1659300843327,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"x0gch6",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":1,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"93"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"93"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"14vr6xm",{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"93"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"93"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"93"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"93"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"93"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"93"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"93"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/App.tsx",["245","246","247","248"],["249","250","251"],"// eslint-disable-next-line unicorn/prefer-node-protocol\nimport { Buffer } from 'buffer';\n\nimport type { ReactElement } from 'react';\nimport { useEffect } from 'react';\n\nimport gsap from 'gsap';\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport { useEventListener } from 'usehooks-ts';\n\nimport PageNotFound from '~mb/routes/404';\nimport Home from '~mb/routes/Home';\n\n// const Home = lazy(async () => import('~mb/routes/Home'));\n// const PageNotFound = lazy(async () => import('~mb/routes/404'));\ngsap.registerPlugin(ScrollToPlugin);\n\nfunction App(): ReactElement {\n  const location = useLocation();\n\n  /**\n   * Effect to set the Buffer global variable due to a Coinbase Wallet bug (a dep of ThirdWeb sdk)\n   * See: https://stackoverflow.com/a/71953677/5721585\n    */\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      window.Buffer = Buffer;\n    }\n  });\n\n  useEventListener('scroll', () => {\n    if (typeof window === 'undefined') return;\n    const tl = gsap.timeline({paused: true, reversed: true});\n    const page = document.documentElement;\n    const offset = page.scrollTop;\n    const backToTop = document.querySelector('.back-to-top') as HTMLElement;\n    // gsap.set(backToTop, {opacity: 0, xPercent: 125});\n    // tl.from(backToTop, {\n    //   opacity: 0,\n    //   xPercent: 125,\n    //   duration: 0.4,\n    //   ease: 'elastic',\n    // }).to(backToTop, {\n    //   opacity: 1,\n    //   xPercent: 0,\n    //   duration: 0.4,\n    // })\n\n    if (offset > 1200) {\n      backToTop.classList.remove('invisible');\n    } else {\n      backToTop.classList.add('invisible');\n    }\n    // tl.play();\n  });\n\n\n  function onLocation(): void {\n    if (typeof window === 'undefined') return;\n    if (location.hash === '') return;\n    const tl = gsap.timeline({ paused: true, reversed: true });\n    const fallback = document.documentElement;\n    const element = document.querySelector(location.hash);\n    // eslint-disable-next-line no-debugger\n    // debugger;\n\n    if (element !== null) {\n      tl.to(\n        window,\n        {\n          duration: 1,\n          delay: 0,\n          scrollTo: {\n            y: element,\n          },\n          ease: \"power4.inOut\",\n        },\n      );\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    tl.reversed() ? tl.play() : tl.reverse();\n  }\n\n  useEffect(() => {\n    onLocation();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.hash, location.pathname]);\n\n\n  return (\n    // <Suspense fallback={<LoadingOrError message=\"Loading Meta-Builders\" />}>\n    <Routes location={location} key={location.pathname}>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"*\" element={<PageNotFound />} />\n    </Routes>\n    // </Suspense>\n  );\n}\n\nexport default App;\n",["252","253","254","255","256"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/Button.tsx",[],["257"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonBuyPackage.tsx",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],["295"],"import type { Dispatch, SetStateAction } from 'react'\nimport { useEffect, useCallback, useRef, useState } from 'react'\n\nimport { useAddress, useBalance, useMetamask, useNetworkMismatch, useToken } from '@thirdweb-dev/react'\nimport type { CurrencyValue, Marketplace, Token } from '@thirdweb-dev/sdk';\nimport { useMachine, normalizeProps } from '@zag-js/react'\nimport * as toast from '@zag-js/toast'\nimport accounting from 'accounting'\nimport type { BigNumber } from 'ethers';\nimport gsap from 'gsap'\nimport { useOnClickOutside, useCopyToClipboard } from 'usehooks-ts'\nimport { v4 as uuid } from 'uuid'\n\nimport LoadingOrError from '../LoadingOrError'\n\nimport { ButtonWeb3Connect } from './ButtonWeb3Connect'\n\nimport { Portal } from '~mb/components/Portal'\nimport Toast from '~mb/components/Toast'\nimport { shortenAddress } from '~mb/lib/helpers'\n\nexport type BuyPackOptions = {\n  name: string\n  currencySymbol: string\n  listingId: string\n  quantityToBuy: number\n  currency: string\n  contract: string\n  price: string\n  value: BigNumber\n  marketplace: Marketplace\n}\n\nexport type ButtonBuyPackagePopUp = {\n  pack: BuyPackOptions\n  forAddress: string | undefined\n  isOpen: boolean\n  setIsOpen: Dispatch<SetStateAction<boolean>>\n}\n\nexport function BuyPackackagePopUp(\n  properties: ButtonBuyPackagePopUp\n): JSX.Element {\n  const popUpReference = useRef<HTMLDivElement>(null)\n  const contentReference = useRef<HTMLDivElement>(null)\n  const overlayBg1Reference = useRef<HTMLDivElement>(null)\n  const isNetworkMismatch = useNetworkMismatch()\n  const { forAddress, pack, isOpen, setIsOpen } = properties\n  const { marketplace, name, price, currency, quantityToBuy, currencySymbol, listingId, value: packValue } = pack\n  const [isLoading, setIsLoading] = useState(false)\n\n  // const { data: balance, isLoading: balanceLoading, error: balanceError } = useTokenBalance(currency, forAddress);\n  const token = useToken(currency);\n  // const tokenBalance = useBalance(currency);\n  const nativeBalance = useBalance();\n  const [value, copy] = useCopyToClipboard()\n  const [state, send] = useMachine(\n    toast.group.machine({\n      id: uuid(),\n      pauseOnInteraction: true,\n      pauseOnPageIdle: true,\n      gutter: '1rem',\n      offsets: {\n        top: '2rem',\n        right: '2rem',\n        bottom: '2rem',\n        left: '2rem'\n      },\n    })\n  )\n  const apiToast = toast.group.connect(state, send, normalizeProps)\n\n  const popupTween = gsap.to(popUpReference.current, {\n    opacity: 1,\n    y: 0,\n    delay: 0.1,\n    duration: 0.5,\n    ease: 'power2.out',\n    autoAlpha: 1\n  })\n\n\n\n  function onCopy(toCopy: string): void {\n    copy(toCopy).then(() => {\n\n      const copyToastId = apiToast.upsert({\n        id: uuid(),\n        type: 'success',\n        title: `Copied to clipboard: ${toCopy}`,\n        placement: 'bottom-start',\n        duration: 3000,\n      })\n    }).catch((_error: unknown) => {\n      apiToast.create({\n        type: 'error',\n        title: `Failed to copy to clipboard: ${value as string}`,\n        duration: 3000\n      })\n    })\n  }\n\n  /** function to call the `buyNow` method of `useBuyNow`  */\n  const onBuyPackage = useCallback(\n    (id: string) => {\n      if (isNetworkMismatch) return\n\n      setIsLoading(true)\n      const buyToastId = apiToast.create({\n        id: uuid(),\n        type: 'info',\n        title: `Buying ${name} package for ${price} ${currencySymbol}`,\n        description: 'Please sign the transaction in your wallet.',\n        placement: 'bottom-end',\n        duration: 7000\n      })\n      apiToast.pause()\n\n      console.log('token', {token, nativeBalance});\n\n      // if (token !== undefined) {\n\n      //   getBalance(token).then((balance) => {\n\n      //     if (balance !== undefined) {\n      //       apiToast.resume()\n      //       console.log('currencyBalance', balance.displayValue, price);\n      //       apiToast.create({\n      //         id: uuid(),\n      //         type: 'info',\n      //         title: `You have ${balance.displayValue} ${currencySymbol}`,\n      //         duration: 5000\n      //       })\n\n      //       const v = balance.value;\n      //       console.log({ v, packValue });\n      //       const enoughDosh = v.gte(packValue);\n      //       if (enoughDosh) {\n      //         setHasEnough(enoughDosh)\n      //         apiToast.resume()\n      //         apiToast.create({\n      //           id: uuid(),\n      //           type: 'success',\n      //           title: `You have enough ${currencySymbol} to buy this package`,\n      //           duration: 3000\n      //         })\n      //       } else {\n      //         throw new Error(\"You don't have enough funds to buy this package\");\n      //       }\n      //     }\n      //     // const bigBal = new BigNumber(balance?.value._hex, balance.decimals.toString())\n      //     // const enoughBalance = balance?.value._hex.gt(new BigNumber(price, balance.decimals.toString()))\n\n      //   }).catch((error: Error) => {\n      //     console.error(error)\n      //     apiToast.resume()\n      //     apiToast.create({\n      //       id: uuid(),\n      //       type: 'error',\n      //       title: `${error.message}`,\n      //       duration: 3000\n      //     })\n      //     setIsLoading(false)\n\n      //   });\n      // } else {\n      //   console.log('no token');\n      // }\n\n\n      // if (!hasEnough) {\n      //   setIsLoading(false)\n      //   return\n      // }\n\n      marketplace\n        .buyoutListing(id, quantityToBuy)\n        .then(data => {\n          apiToast.resume()\n          apiToast.create({\n            id: uuid(),\n            type: 'success',\n            title: `W00t! You bought ${name}! Your receipt: ${data.receipt.transactionHash}`,\n            description: `You have successfully bought ${name} for ${price} ${currencySymbol}. \\n\\n Your receipt: ${data.receipt.transactionHash}`,\n            duration: 7000\n          })\n\n          setIsLoading(false)\n          // setTimeout(() => { apiToast.dismiss() }, 7000)\n        })\n        .catch((error: any) => {\n          console.log('buyPackage error', { error })\n          const errorMessage =\n            (error.message as string) || (error.toString() as string)\n          setIsLoading(false)\n          // if (buyToastId !== undefined) {\n          apiToast.resume()\n          const errorToastId = apiToast.create({\n            id: uuid(),\n            type: 'error',\n            title: `Something went wrong!\\n ${errorMessage}`,\n            duration: 7000\n          })\n          // }\n        }).finally(() => {\n          setIsLoading(false)\n        })\n    },\n    [apiToast, currencySymbol, isNetworkMismatch, marketplace, name, price, token]\n  )\n\n  const onOpenBuyCallback = useCallback((open: boolean) => {\n    // gsap.set(popUpReference.current, { yPercent: 100, opacity: 0 });\n    // gsap.set(contentReference.current, { opacity: 0, scale: 0.8 });\n    // gsap.set(overlayBg1Reference.current, { opacity: 0, yPercent: -100, xPercent: -100 });\n\n    const tl = gsap.timeline({ paused: true, reversed: true })\n    gsap.set(popUpReference.current, { yPercent: 101, opacity: 0 })\n    tl.to(\n      popUpReference.current,\n      {\n        opacity: 1,\n        display: 'flex',\n        yPercent: 0,\n        duration: 0.3,\n        ease: 'power3',\n      }\n    )\n      .to(contentReference.current, {\n        opacity: 1,\n        scale: 1,\n        delay: 0.05,\n        duration: 0.7\n      })\n      .to(overlayBg1Reference.current, {\n        opacity: 1\n      })\n    if (tl.reversed()) {\n      if (open) tl.play()\n    } else {\n      if (!open) tl.reverse()\n      setTimeout(() => { console.log('close') }, 300)\n    }\n  }, [])\n\n  useEffect(() => {\n    onOpenBuyCallback(isOpen)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, onOpenBuyCallback])\n\n  useOnClickOutside(popUpReference, () => setIsOpen(false))\n\n  return (\n    <>\n      <div\n        ref={popUpReference}\n        className='buy-popup l-0 r-0 b-0 hidden fixed inset-0 h-full w-full origin-top items-center justify-center overflow-hidden border-2 border-violet-300 p-5 shadow-violet-400 z-30 text-slate-50'\n      >\n        <div\n          ref={contentReference}\n          className='relative flex flex-col items-center justify-center text-left z-[100]'\n        >\n          <div className='flex-grow'>\n            <h3 className='text-teal-400 uppercase font-bold text-md text-left inline-flex flex-wrap flex-col space-0 gap-0 mb-3'>\n              <span className='badge badge-outline text-xs leading-3 uppercase text-violet-400 font-normal'>Edition {`#${listingId}`}</span>\n              <strong className='text-lg leading-3'>{name}</strong>\n            </h3>\n            <p>Let&apos;s do this! Hit &apos;Confirm&apos; below to buy this NFT, and the <span className='gradient-text font-bold'>Meta-Builders</span> services locked up inside it.</p>\n            <div className='flex flex-col items-start justify-center space-y-2 my-3'>\n              <p className='inline-flex flex-col gap-0 space-0'>\n                <span className='text-sm'>Price:</span> <span className='text-xl'> {accounting.formatMoney(price, '$', 2)} <span className='text-violet-400'>{currencySymbol}</span></span>\n              </p>\n              {forAddress ? (\n                <p className='mb-3 text-sm'>\n                    <span className='text-md'>Active wallet</span>\n                  <span className='tooltip tooltip-primary' data-tip='Click to copy'>\n                    <span className='text-violet-400 ml-3'\n                      tabIndex={0}\n                      role=\"button\"\n                      onClick={(): void => onCopy(forAddress)}\n                      onKeyPress={(): void => onCopy(forAddress)}\n                    >{shortenAddress(forAddress)}</span>\n                  </span>\n                </p>\n              ) : undefined}\n            </div>\n          </div>\n          <div className='z-10 flex-shrink text-center'>\n            {forAddress ? (\n              Number.parseFloat(price) > 0 ? (\n                <>\n                  <span className={`text-md text-orange-500 ${isNetworkMismatch ? 'block' : 'hidden'}`}>Switch to <strong>Polygon Mumbai</strong>.</span>\n                  <button\n                    type='button'\n                    className='btn btn-primary disabled:btn-disabled disabled:overflow-visible disabled:bg-transparent flex-grow overflow-hidden text-center transition-all duration-200 ease-in-out'\n                    onClick={(): void => onBuyPackage(listingId)}\n                    disabled={isLoading || isNetworkMismatch}\n                    aria-disabled={isLoading}\n                  >\n                    {!isLoading ? 'Confirm' : <LoadingOrError isInline message=\"Transaction in progress...\" />}\n                  </button>\n                </>\n              ) : (\n                <span>Contact us</span>\n              )\n            ) : (\n              <div className=''>\n                <span className='text-purple-400 text-sm'>Connect to buy</span>\n                <ButtonWeb3Connect size='3xl' />\n              </div>\n            )}\n          </div>\n        </div>\n        <div\n          ref={overlayBg1Reference}\n          className='absolute -inset-1/2 h-[200%] w-[200%] text-center origin-center z-30 flex items-center content-center justify-center'\n        >\n          <div className='text-violet-50 dark:text-teal-300 opacity-[5%] text-[10rem] text-center font-black leading-tight tracking-tighter uppercase font-sans transform -rotate-45'>{name}</div>\n        </div>\n        <div className='absolute inset-px z-10 origin-top items-center justify-center bg-violet-900 dark:bg-slate-800' />\n      </div>\n\n      <Portal>\n        <div\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...apiToast.getGroupProps({ placement: 'bottom-end' })}\n          className='pointer-events-none fixed inset-0 h-full w-full'\n        >\n          {apiToast.toasts.map(actor => (\n            <Toast key={actor.id} actor={actor} id={actor.id} />\n          ))}\n        </div>\n\n      </Portal>\n    </>\n  )\n}\n\nexport interface IButtonBuyPackage {\n  pack: BuyPackOptions\n}\n\nexport function ButtonBuyPackage(properties: IButtonBuyPackage): JSX.Element {\n  const { pack } = properties\n  const connectMetamaskWallet = useMetamask()\n  // const { openPortal, closePortal, isOpen, Portal } = usePortal();\n  const reference = useRef<HTMLButtonElement>(null)\n  const address = useAddress()\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n\n  function onConnectMetamask(): void {\n    connectMetamaskWallet()\n      .then(() => {\n        console.log('connectMetamaskWallet', address)\n      })\n      .catch(error => {\n        console.log('connectMetamaskWallet error', { error })\n      })\n  }\n\n  const onToggleOpen = (): void => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <>\n      <button\n        ref={reference}\n        type='button'\n        aria-label='Buy Package'\n        className={`btn transition-colors ${!address\n          ? 'bg-teal-700 text-violet-100'\n          : 'bg-teal-400 text-slate-900'\n          }  flex-grow transition-all duration-200 ease-in-out`}\n        data-package={pack.listingId}\n        onClick={!address ? onConnectMetamask : onToggleOpen}\n      >\n        {!address ? 'Connect to buy' : 'Buy Package'}\n      </button>\n\n      <BuyPackackagePopUp\n        pack={pack}\n        forAddress={address}\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n      />\n    </>\n  )\n}\nexport default ButtonBuyPackage\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonDarkMode.tsx",["296","297"],[],"\nimport { Icon } from \"@iconify/react\";\nimport type { ButtonProps } from \"react-daisyui\";\nimport { Button } from \"react-daisyui\"\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\"\n\nimport type { UseDarkModeType } from \"~mb/lib/hooks\";\nimport { useDarkMode } from \"~mb/lib/hooks\"\n\n\n// eslint-disable-next-line @typescript-eslint/no-type-alias\nexport type DarkModeButtonProperties = ButtonProps & {\n  properties: ButtonProps\n}\n\n/**\n * DarkModeButton - *Toggle Dark Mode*\n *\n * Allows a user to toggle Dark Mode.\n *\n * @returns JSX.Element\n */\nexport function ButtonDarkMode(): JSX.Element {\n  const { theme, toggleTheme }: UseDarkModeType = useDarkMode()\n  const isDark: boolean = theme === 'dark'\n  const onHandleClick = (): void => toggleTheme()\n  const modeIcon = isDark ? 'ic:baseline-dark-mode' : 'ic:baseline-light-mode'\n  return (\n    <div className=\"tooltip tooltip-info tooltip-bottom\" role=\"tooltip\" data-tip=\"⚠️ Light mode is WIP\">\n    <Button\n      aria-label='Toggle dark/light mode'\n      onClick={onHandleClick}\n      variant='link'\n      className='border-0 bg-transparent hover:border-0 hover:bg-transparent'\n    >\n      <Icon icon={modeIcon} className='delay-0 text-2xl animate-spin scale-100 transition-all origin-[right_center] duration-500  text-teal-200 hover:text-orange-400 dark:text-violet-300 dark:hover:text-blue-500' />\n      </Button>\n      </div>\n  )\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/ButtonWeb3Connect.tsx",["298","299","300","301","302","303"],[],"\n\nimport { Icon } from '@iconify/react';\nimport {\n  useMetamask,\n  useNetwork,\n  useAddress,\n  useDisconnect, useNetworkMismatch\n} from '@thirdweb-dev/react'\n\nimport { shortenAddress } from '~mb/lib/helpers';\n\nexport type ButtonWeb3ConnectProps = {\n  size?: string;\n}\n\nexport function ButtonWeb3Connect(properties: ButtonWeb3ConnectProps): JSX.Element {\n  const { size } = properties;\n  // const connectCoinbaseWallet = useCoinbaseWallet();\n  const connectMetamaskWallet = useMetamask();\n  // const connectWalletConnectWallet = useWalletConnect();\n  const disconnectWallet = useDisconnect();\n  const address = useAddress();\n  const network = useNetwork();\n  const isNetworkMismatch = useNetworkMismatch();\n  function onClickDisconnect(): void {\n    disconnectWallet().then(() => {\n      console.log('disconnectWallet');\n    }).catch(error => {\n      console.log('disconnectWallet error', { error });\n    });\n  }\n\n  // function onClickConnectCoinbase(): void {\n  //   connectCoinbaseWallet().then(() => {\n  //     console.log('connectCoinbaseWallet');\n  //   }).catch(error => {\n  //     console.log('connectCoinbaseWallet error', { error });\n  //   });\n  // }\n\n  function onClickConnectMetamask(): void {\n    connectMetamaskWallet().then(() => {\n      console.log('connectMetamaskWallet', address, network);\n      if (isNetworkMismatch) {\n        console.log('connectMetamaskWallet isNetworkMismatch', network);\n        // TODO: show network mismatch toast and-or network switcher\n      }\n\n\n    }).catch(error => {\n      console.log('connectMetamaskWallet error', { error });\n    });\n  }\n\n  // function onClickConnectWalletConnect(): void {\n  //   connectWalletConnectWallet().then(() => {\n  //     console.log('connectWalletConnectWallet');\n  //   }).catch(error => {\n  //     console.log('connectWalletConnectWallet error', { error });\n  //   });\n  // }\n\n\n  if (address) {\n    return (\n      <div className='flex flex-row-reverse items-center justify-between content-between gap-0 lg:gap-1'>\n        {/* {isNetworkMismatch ? (\n          <div className='tooltip tooltip-bottom tooltip-warning' data-tip=\"Testnet only rn\">\n            <span className='text-orange-500 font-sans'>Change to Mumbai network</span>\n            </div>\n        ) : (\n          <> */}\n            <button\n              type=\"button\"\n              className=\"\n                btn\n                btn-link\n                p-0\"\n              aria-label='Web3 wallet disconnect'\n              onClick={onClickDisconnect}\n            >\n          <Icon icon=\"tabler:wallet\" className={`${size ?? 'text-2xl lg:text-2xl'} transition-colors duration-200  ${address && !isNetworkMismatch ? 'text-green-500 text-shadow-alt' : (isNetworkMismatch ? 'text-orange-500 font-sans' : 'text-teal-200 dark:text-violet-300')}`} />\n              <span className=\"sr-only\">Disconnect</span>\n              </button>\n              {isNetworkMismatch ? (\n                <div className='tooltip tooltip-bottom tooltip-warning' data-tip=\"Testnet only rn\">\n                  <span className='text-orange-500 font-sans text-xs lg:text-md'>Switch to Mumbai network</span>\n                </div>\n              ) : (\n                <span className='text-xs lg:text-md text-green-500 text-shadow-alt inline'>{shortenAddress(address)}</span>\n              )}\n          {/* </>\n        )\n        } */}\n      </div >\n    )\n  }\n  return (\n    <div className=\"flex flex-row items-center justify-center\">\n      <button\n        type='button'\n        className={`\n      btn\n      btn-link\n      p-0\n      `}\n        aria-label='Web3 wallet connect'\n        onClick={onClickConnectMetamask}\n      >\n        <Icon icon=\"tabler:wallet\" className={`${size ?? 'text-2xl lg:text-3xl'} transition-colors duration-200  ${address ? 'text-green-500 text-shadow-alt' : 'text-teal-200 dark:text-violet-300'}`} />\n        <span className=\"sr-only\">Connect</span>\n      </button>\n    </div>\n  )\n}\n\nexport default ButtonWeb3Connect;\n\nButtonWeb3Connect.defaultProps = {\n  size: 'text-2xl'\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Buttons/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PackageCard.tsx",["304","305","306","307"],[],"\nimport { Icon } from \"@iconify/react\";\nimport { useMarketplace } from \"@thirdweb-dev/react\";\nimport type { Json } from \"@thirdweb-dev/sdk\";\nimport Imgix from \"react-imgix\";\nimport { v4 as uuid } from \"uuid\";\n\nimport type { BuyPackOptions } from \"~mb/buttons/index\";\nimport { ButtonBuyPackage } from \"~mb/buttons/index\";\nimport { PriceDisplay } from \"~mb/components/PriceDisplay\"\nimport { marketPlaceContract } from \"~mb/lib/constants\";\nimport type { IPackage } from \"~mb/types\";\n\nexport interface PackageCardProperties {\n  pack: IPackage;\n}\nexport interface PackTrait {\n  value: string;\n  trait_type: string;\n}\n\nexport type PackageService = {\n  value: number | string;\n  trait_type: string;\n}\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nconst includedServices = (traits: IPackage['attributes']):\n  PackageService[] => {\n    const services: PackageService[] = [];\n\n  if (traits) {\n    for (const element of traits) {\n      if (element.trait_type.includes('service')) {\n        services.push(element as PackageService);\n      }\n    }\n\n    return services;\n  }\n  return services\n}\n\n\nexport function PackageCard(properties: PackageCardProperties): JSX.Element {\n  const { pack } = properties;\n  const { id, name, description, displayPrice, currency, currencySymbol, image, type, attributes, value } = pack;\n  const marketplace = useMarketplace(marketPlaceContract);\n  const services = includedServices(attributes);\n  // const attributeJson = JSON.parse(attributes);\n  const qty = 1\n  const buyPackInfo = {\n    listingId: id,\n    name,\n    price: displayPrice,\n    value,\n    currency,\n    currencySymbol,\n    marketplace,\n    quantityToBuy: qty,\n    contract: marketPlaceContract,\n  } as BuyPackOptions\n\n  console.log('buyPackInfo', buyPackInfo);\n\n  return (\n    <div\n      className=\"package-card group relative flex flex-col items-center justify-start h-full space-y-2 md:space-y-5 p-2 md:p-5  overflow-hidden  z-10\"\n    >\n      <Imgix\n        src={image}\n        width={300}\n        height={300}\n        className=\"absolute top-0 left-0 w-full h-full object-cover z-0\"\n        imgixParams={{\n          fit: \"crop\",\n          crop: \"edges\",\n          auto: \"format\",\n          \"blend-mode\": \"burn\",\n          q: \"80\",\n        }}\n        htmlAttributes={{\n          alt: name,\n          loading: \"lazy\",\n        }}\n      />\n      <div className=\"absolute inset-0 bg-slate-800 opacity-[97%] border-violet-500 border-2 rounded-t-2xl rounded-b-md backdrop-blur-lg !mt-0 pt-0 z-0\" />\n      <div className=\"relative flex flex-col space-x-2 2xl:space-x-5 space-y-2 2xl:space-y-3 flex-grow w-full px-0 text-violet-50 mb-5 z-[1]\">\n        <h3 className=\"text-md 2xl:text-lg font-extrabold text-center uppercase text-violet-50\">\n          {name}\n        </h3>\n        <PriceDisplay price={displayPrice} currency={currencySymbol} />\n        <p className=\"text-xs 2xl:text-sm leading-tight\">{description}</p>\n        <ul className=\"flex flex-col space-y-3\">\n          {services.length > 0 ? services.map(service => (\n              <li key={uuid()} className=\"flex items-center space-x-3 \">\n              <Icon icon=\"ic:baseline-check\" className=\"text-teal-400 text-xs 2xl:text-sm w-5 h-5\" />\n              <span className=\"text-xs 2xl:text-md text-violet-100 font-normal text-left\">\n                {service.value}\n              </span>\n              </li>\n            )) : undefined}\n        </ul>\n      </div>\n      <div className=\"items-center justify-center flex-shrink min-w-full w-full text-center z-10\">\n        <div className=\"flex justify-between gap-3\">\n          <button\n            type=\"button\"\n\n            className=\"btn bg-violet-700 text-violet-200 flex-grow transition-all duration-200 ease-in-out\"\n          >Talk to us</button>\n          <ButtonBuyPackage pack={buyPackInfo} />\n        </div>\n      </div>\n    </div>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/PartnersCard.tsx",["308"],[],"\n\n// import Imgix from 'react-imgix';\n\n// import { isDevelopment } from '~mb/lib/constants';\n// import { buildImgUrl } from '~mb/lib/helpers';\nimport type { IPartner } from '~mb/types';\n\nexport type PartnersCardProperties = IPartner\n\nexport function PartnersCard({ partner }: {partner: PartnersCardProperties}): JSX.Element {\n  const { name, bio, image, url } = partner;\n  const sizes = \"(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw\";\n  // eslint-disable-next-line unicorn/no-null\n  const partnerImage = image !== '' ? image : 'missing-image.png';\n\n  return (\n    <a className=\"partners-card group aspect-video leadIn flex-shrink\" href={url}>\n    <figure className=\"relative w-full h-full items-center text-center flex flex-row content-center justify-center\">\n        <picture\n          className={`\n          relative\n          w-auto\n          lg:w-auto\n          h-3/4\n          lg:h-full\n        `}\n        >\n          {/* {!isDevelopment ? (\n            <Imgix\n              className=\"object-cover w-full h-full transition-all duration-300 bg-cover group-hover:scale-110 group-hover:opacity-20 group-focus:scale-110 group-focus:opacity-20\"\n              src={buildImgUrl(partnerImage, 'assets/partners/images')}\n              width={300}\n              htmlAttributes={{\n                alt: `${name}'s logo`,\n                sizes,\n              }}\n              imgixParams={{\n\n            />\n          ) : ( */}\n            <img src={`/assets/partners/images/${partnerImage}`} alt={`${name}'s logo`} className=' object-contain w-auto h-full transition-all duration-300 bg-cover opacity-70 group-hover:scale-110 group-hover:opacity-50 group-focus:scale-110 group-focus:opacity-50 filter grayscale invert dark:invert-0 shadow-teal-400' loading=\"lazy\" />\n        {/* )} */}\n\n      </picture>\n        <figcaption className=\"absolute rounded-lg -bottom-8 flex flex-col items-start text-left justify-center content-center min-w-full md:w-[125%] flex-grow min-h-[150%] h-auto gap-2 transition-all duration-300 opacity-0 group-hover:opacity-100 group-focus:opacity-100 scale-50 group-hover:scale-100 group-focus:scale-100 group-hover:-translate-y-0 group-focus:translate-y-1/2 translate-y-10 origin-center z-50  filter backdrop-blur-xl\">\n          <div className=\"relative bio-content flex flex-col space-y-2 p-3 flex-grow z-10\">\n            <h4 className='text-lg font-bold gradient-text tracking-normal leading-none mb-0 '>{name}</h4>\n            {bio ? <p className=\"text-xs text-slate-500 dark:text-white leading-tight \">{bio}</p> : undefined}\n\n            {/* <div className=\"inline-flex gap-2 flex-row items-center translate-y-5 transition-transform  group-hover:translate-y-0 -translate-x-6 group-hover:translate-x-0 scale-0 group-hover:scale-100\">\n              {url ? <a href={url} title={`${name}'s website`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">Website</a> : undefined}\n            </div> */}\n          </div>\n          <div className='absolute inset-0 bg-slate-200 dark:bg-slate-900 opacity-80 filter backdrop-blur-xl  rounded-lg shadow-lg p-4 w-full h-full z-0'/>\n        </figcaption>\n    </figure>\n    </a>\n  )\n}\n\nexport default PartnersCard;","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/TeamMemberCard.tsx",["309","310","311","312"],[],"import Imgix from 'react-imgix';\n\nimport { isDevelopment } from '~mb/lib/constants';\nimport { buildImgUrl } from '~mb/lib/helpers';\nimport type { ITeamMember } from '~mb/types';\n\n\nexport type TeamMember = ITeamMember\n\nexport function TeamMemberCard({ member }: { member: TeamMember }): JSX.Element {\n  const { image, name, role, bio, twitter, linkedin, email } = member;\n  const sizes = \"(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw\";\n  // const siteUrl = import.meta.env.VITE_SITE_URL as string;\n  // const avatar = new URL(image ?? 'missing-image.png', `${siteUrl}/assets/team/images`);\n  const avatar = image !== '' ? image : 'missing-image.png';\n\n\n  return (\n    <div className=\"group relative hover:cursor-pointer pt-0\">\n      <figure className=\"flex flex-col space-y-3 items-center text-center \">\n        <div className=\"\n            avatar\n            flex\n            flex-row\n            items-center\n            justify-center\">\n          <picture\n            className={`\n            relative\n            rounded-full\n            w-3/4\n            lg:w-1/2\n            h-auto\n            lg:h-auto\n            overflow-hidden box-shadow-[0_0_10px_5px_rgba(0,0,0,0.8)_inset] text-center\n          `}\n          >\n            {/* {!isDevelopment ? (\n              <Imgix\n                className=\"object-cover w-full h-full transition-all duration-300 opacity-50 bg-cover group-hover:scale-110 group-hover:opacity-100 group-focus:scale-110 group-focus:opacity-100\"\n                src={buildImgUrl(image, 'assets/team/images')}\n                sizes={sizes}\n                htmlAttributes={{\n                  alt: `${name}'s avatar`,\n                  loading: 'lazy',\n                }}\n              />\n            ) : ( */}\n              <img src={`/assets/team/images/${avatar}`} alt={`${name}'s avatar`} className=\"object-cover w-full h-full transition-all duration-200 bg-cover group-hover:scale-110 group-hover:blur-0 group-focus:scale-110 group-focus:hue-rotate-0 self-center\" loading='lazy' />\n            {/* )} */}\n          </picture>\n        </div>\n        <figcaption className=\"text-center flex flex-col gap-0\">\n          <h3 className=\"text-sm 2xl:text-lg font-bold 2xl:font-normal text-slate-600 dark:text-slate-400 leadIn\">{name}</h3>\n          <p className=\"text-xs 2xl:text-sm \">{role}</p>\n        </figcaption>\n        <div className=\"absolute rounded-lg bottom-0 flex flex-col items-start text-left justify-start content-center min-w-full md:w-[135%] flex-grow min-h-[120%] h-auto gap-2 transition-all duration-300 opacity-0 group-hover:opacity-100 group-focus:opacity-100 scale-50 group-hover:scale-100 group-focus:scale-100 group-hover:-translate-y-[0%] group-focus:translate-y-0 translate-y-10 origin-center z-50  filter backdrop-blur-xl \">\n          <div className=\"relative bio-content flex flex-col gap-y-2 p-3 flex-grow-0 z-10 w-full\">\n            <h4 className='text-lg font-bold gradient-text tracking-normal'>{name}</h4>\n            {bio ? <p className=\"text-xs text-slate-500 dark:text-white leading-tight \">{bio}</p> : undefined}\n\n            <div className=\"flex gap-2 flex-row justify-self-end items-center flex-shrink-0 translate-y-5 transition-transform  group-hover:translate-y-0 -translate-x-6 group-hover:translate-x-0 scale-0 group-hover:scale-100\">\n              {twitter ? <a href={twitter} title={`${name} on Twitter`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">Twitter</a> : undefined}\n              {linkedin ? <a href={linkedin} title={`${name} on Twitter`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">LinkedIn</a> : undefined}\n              {email ? <a href={email} title={`${name} on Email`} className=\"text-xs text-violet-700 dark:text-white badge badge-link\">Email</a> : undefined}\n            </div>\n          </div>\n          <div className='absolute inset-0  bg-slate-100 dark:bg-slate-900 opacity-80 filter backdrop-blur-xl rounded-lg shadow-lg p-4 w-full h-full z-0'/>\n        </div>\n      </figure>\n    </div>\n  )\n}\nexport default TeamMemberCard;\n\n/** TODO: Make this into a component to share between partners & team cards. */\n// export type CardInfoPopOverProps = {\n//   name: string;\n//   bio?: string;\n//   role?: string;\n//   twitter?: string;\n//   linkedin?: string;\n//   email?: string;\n//   url?: string;\n// }\n\n// export function CardInfoPopOver(props: CardInfoPopOverProps): JSX.Element {\n\n//   return (\n//     <div className=\"absolute bottom-0 flex flex-col items-start text-left justify-center content-center min-w-full md:w-[125%] flex-grow min-h-[120%] h-auto gap-2 transition-all duration-300 opacity-0 group-hover:opacity-100 group-focus:opacity-100 scale-50 group-hover:scale-100 group-focus:scale-100 group-hover:-translate-y-[0%] group-focus:translate-y-0 translate-y-10 origin-center z-50  filter backdrop-blur-xl\">\n//     <div className=\"relative bio-content flex flex-col gap-y-2 p-3 flex-grow z-10\">\n//       <h4 className='text-md font-bold gradient-text'>{name}</h4>\n//       {bio ? <p className=\"text-xs text-white leading-tight \">{bio}</p> : undefined}\n\n//       <div className=\"inline-flex gap-2 flex-row items-center translate-y-5 transition-transform  group-hover:translate-y-0 -translate-x-6 group-hover:translate-x-0 scale-0 group-hover:scale-100\">\n//         {twitter ? <a href={twitter} title={`${name} on Twitter`} className=\"text-xs text-white badge badge-link\">Twitter</a> : undefined}\n//         {linkedin ? <a href={linkedin} title={`${name} on Twitter`} className=\"text-xs text-white badge badge-link\">LinkedIn</a> : undefined}\n//         {email ? <a href={email} title={`${name} on Email`} className=\"text-xs text-white badge badge-link\">Email</a> : undefined}\n//       </div>\n//     </div>\n//     <div className='absolute inset-0 bg-slate-900 dark:bg-slate-900 opacity-80 filter backdrop-blur-xl blur-md rounded-lg shadow-lg p-4 w-full h-full z-0'/>\n//   </div>\n//   )\n// }","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Cards/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Footer.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Default/Header.tsx",["313","314","315","316","317","318","319"],["320"],"import { useEffect, useRef, useState } from \"react\";\n\nimport { Icon } from \"@iconify/react\";\nimport gsap from \"gsap\";\nimport { HashLink } from \"react-router-hash-link\";\nimport {useEventListener, useMediaQuery, useIntersectionObserver } from 'usehooks-ts'\nimport { v4 as uuid } from \"uuid\";\n\nimport { ButtonWeb3Connect, ButtonDarkMode } from \"~mb/components/Buttons\";\nimport {links} from \"~mb/components/Default/Footer\";\n\nconst navItems = [\n  { title: \"Home\", url: \"#home\" },\n  { title: \"Services\", url: \"#services\" },\n  { title: \"Partners\", url: \"#partners\" },\n  { title: \"Team\", url: \"#team\" },\n  { title: \"Pricing\", url: \"#pricing\" },\n];\n\nexport default function Header(): JSX.Element {\n  const mobileMenuWrapper = useRef<HTMLDivElement>(null);\n  const desktopMenuWrapper = useRef<HTMLElement>(null);\n  const header = useRef<HTMLElement>(null);\n  const mobileMenu = useRef<HTMLUListElement>(null)\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\n  // const entry = useIntersectionObserver(header, {});\n  // const isVisible = !!entry?.isIntersecting;\n  // const [isFixed, setIsFixed] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const wrapper = mobileMenuWrapper.current;\n  // define the default for the timeline\n  const tl = gsap.timeline({ paused: true, reversed: true });\n\n  // Set defaults for the mobile menu\n  // gsap.set(mobileMenuWrapper.current,\n  //   {\n  //     opacity: 0,\n  //     scale: 0.9,\n  //     yPercent: 100,\n  //   }\n  // )\n\n\n  // gsap.set(header.current,\n  //   {\n  //     position: 'absolute',\n  //   }\n  // )\n  // setup, but don't play the timeline animations\n  // tl.to(mobileMenuWrapper.current,\n  //   {\n  //     opacity: 1,\n  //     scale: 1,\n  //     yPercent: 0,\n  //     duration: 0.5,\n  //     ease: \"power3.inOut\",\n  //     autoAlpha: 1,\n  //   }\n  // );\n\n  /**\n   * Use GSAP timeline to animate the menu open and closed\n   *\n   * Also adds the `aria-hidden` attribute to the menu wrapper for accessibility\n   */\n  function onToggleMobileMenu(): void {\n    // if (typeof window === \"undefined\") return;\n    console.log('toggleMobileMenu', { isOpen });\n    setIsOpen(!isOpen);\n    const body = document.querySelector(\"body\") as HTMLElement;\n    body.classList.toggle(\"menu-open\");\n\n    if (wrapper) {\n      wrapper.ariaHidden = wrapper.classList.contains(\"hidden\") ? 'true' : 'false';\n    }\n  }\n\n  /** Show `mobileMenuWrapper` when the `isOpen` const is set to true */\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n    if (wrapper) wrapper.ariaHidden = wrapper.classList.contains(\"hidden\") ? 'false' : 'true';\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n\n\n  /** Changes the header from `absolute` to `fixed` when the user first scrolls */\n  function onScroll(): void {\n    if (typeof window === \"undefined\") return;\n    const page = document.documentElement;\n    const offset = header.current?.offsetHeight ?? 0;\n    const d = page.clientHeight - page.scrollTop - offset;\n    header.current?.classList.toggle(\"fixed-header\", d < 0);\n  }\n\n  // Effect to give the header a bounce effect on page load.\n  // useEffect(() => {\n  //   const headerTl = gsap.timeline({ paused: true, reversed: true });\n  //   headerTl.from(header, {\n  //     duration: 1,\n  //     opacity: 0,\n  //     yPercent: -100,\n  //     ease: \"bounce\",\n  //   });\n  //   // if (headerTl.reversed()) {\n  //   //   headerTl.play()\n  //   // } else {\n  //     //   headerTl.reverse();\n  //     // }\n  //     // }\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   // if (isVisible) {\n  //       headerTl.play()\n\n  //   // }\n  // }, [isVisible]);\n\n  // Listener to close the mobile menu when the user clicks a menu item.\n  useEventListener(\"click\", (e: MouseEvent) => {\n    console.log('click');\n\n    const target = e.target as HTMLElement;\n    if (target.tagName === \"A\") {\n      onToggleMobileMenu();\n    }\n  }, mobileMenu)\n\n  // Listen for the scroll events for the header 👆\n  useEventListener(\"scroll\", onScroll);\n\n\n  return (\n    <>\n      <header\n        ref={header}\n        id=\"page-header\"\n        className=\"absolute bottom-0 z-[100] h-12 lg:h-20 flex items-center justify-between w-full p-4 md:px-8 text-white border-transparent overflow-visible\"\n      >\n        <HashLink\n          className=\"flex items-center gap-3 hover:text-default justify-start\"\n          to=\"/#home\"\n        >\n          <h1 className=\"sr-only\">Meta-Builders</h1>\n          <span\n            className=\"brand font-heading inline-flex items-center text-md 2xl:text-lg text-shadow-alt gradient-text tracking-tight font-bold hover:gradient-text capitalize dark:hover:text-shadow-alt-teal z-[100]\"\n          ><span>Meta-Builders</span></span>\n        </HashLink>\n\n        <div className=\"desktop-menu hidden sm:flex items-center self-end z-10 \">\n          <nav className=\"hidden sm:block\">\n            <ul className=\"flex items-center gap-6\">\n              {navItems.map(({ title, url }) => (\n                <li key={uuid()}>\n                  <HashLink\n                    className=\"text-md 2xl:text-lg font-normal 2xl:font-bold uppercase xl:font-heading \"\n                    to={`/${url}`}\n                  >\n                    {title}\n                  </HashLink>\n                </li>\n              ))}\n            </ul>\n          </nav>\n          <div className=\"flex items-center gap-0 px-0\">\n            <ButtonDarkMode />\n            <ButtonWeb3Connect />\n          </div>\n        </div>\n\n\n        <div\n          ref={mobileMenuWrapper}\n          className={`mobile-menu inset-0 top-0 fixed transition-all ${isOpen ? 'translate-y-0 opacity-100 scale-100' : 'translate-y-full opacity-0 scale-70'} md:hidden h-screen w-screen  bg-gradient-to-bl dark:from-glass-primary-700 dark:to-glass-primary-900 filter backdrop-blur-lg !z-100`}\n          aria-hidden=\"true\"\n        >\n          <div className=\"fixed flex flex-col items-center justify-between w-full h-full inset-0 px-3 pt-0\">\n            <div\n              className=\"flex flex-col justify-center space-y-4 w-full h-2/3\"\n              role=\"dialog\"\n              aria-modal=\"true\"\n            >\n              <nav className=\"flex flex-row flex-grow items-center justify-center\">\n                <ul ref={mobileMenu} className=\"flex flex-col items-center justify-center gap-6\">\n                  {navItems.map(({ title, url }) => (\n                    <li key={uuid()}>\n                      <HashLink\n                        className=\"text-lg font-bold font-heading text-slate-500 dark:text-violet-300 hover:text-slate-700 dark:hover:text-teal-400 text-shadow-alt dark:hover:text-shadow-alt-teal transition-colors\"\n                        smooth\n                        to={`/${url}`}\n                      >\n                        {title}\n                      </HashLink>\n                    </li>\n                  ))}\n                </ul>\n              </nav>\n            </div>\n            <div className=\"flex flex-col justify-start items-center space-y-4 w-full flex-grow\">\n            <ul className=\"relative grid grid-cols-4 w-full gap-6 md:gap-4 sm:grid-cols-4 lg:w-1/4\">\n              {links.map((link) => (\n                <li key={uuid()} className=\"text-center\">\n                  <a\n                    className=\"group p-3 border-2 border-violet-800 dark:border-teal-200 rounded-full inline-flex items-center justify-center text-shadow-alt-sm dark:text-shadow-alt-sm-teal hover:animate-pulse w-3/4 h-auto\"\n                    href={link.url}\n                  >\n                    <span className=\"sr-only\">{link.description}</span>\n                    <Icon className=\"h-full text-violet-800  transition-colors text-6xl dark:text-teal-300 \" icon={link.icon} />\n                  </a>\n                </li>\n              ))}\n            </ul>\n\n            </div>\n          </div>\n        </div>\n      </header>\n      <div\n        className=\"mobile-tools w-full h-12 fixed bottom-0 right-2 py-3 flex flex-row items-center justify-end gap-1 lg:gap-1 lg:hidden z-[1000]\"\n      >\n        <ButtonWeb3Connect size=\"text-2xl lg:text-3xl\" />\n        <ButtonDarkMode />\n        <button\n          type=\"button\"\n          className=\"open-nav-button btn btn-link sm:hidden p-0 text-slate-600 hover:text-slate-700 dark:text-violet-300 dark:hover:text-teal-400 text-shadow-alt dark:hover:text-shadow-alt-teal\"\n          aria-label=\"Open navigation\"\n          onClick={onToggleMobileMenu}\n        >\n          <Icon\n            icon={isOpen ? 'mdi:close' : 'heroicons-solid:menu'}\n            className=\"h-8 w-8\"\n          />\n        </button>\n      </div>\n    </>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/HeroImage.tsx",["321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],["338"],"import { CSSProperties, lazy } from 'react'\n\nimport Imgix from 'react-imgix'\nimport { useImageOnLoad, useMediaQuery } from 'usehooks-ts'\n\nimport { buildImgUrl } from '~mb/lib/helpers'\nimport { useDarkMode } from '~mb/lib/hooks'\n\nexport function HeroImage(): JSX.Element {\n  const { handleImageOnLoad, css } = useImageOnLoad()\n  const { isDarkMode } = useDarkMode()\n  const widths = [450, 768, 1366, 1920]\n  const sizes = '100vw'\n  const deviceXs = useMediaQuery('(min-width: 0px)')\n  const deviceSm = useMediaQuery('(min-width: 640px)')\n  const deviceMd = useMediaQuery('(min-width: 1024px)')\n  const deviceLg = useMediaQuery('(min-width: 1280px)')\n  const deviceXl = useMediaQuery('(min-width: 1536px)')\n\n\n  return (\n    <picture className=\"relative inset-0 w-screen h-screen m-auto opacity-100 dark:opacity-50\" >\n      {/* <Imgix\n        className='fixed inset-0 h-screen w-screen object-cover'\n        src={buildImgUrl('synthwave-outrun-1920.png', 'assets/images')}\n        sizes={sizes}\n        htmlAttributes={{\n          alt: 'Synthwave landscape with a Metaverse city in the distance',\n          loading: 'eager',\n        }}\n        imgixParams={{\n          fit: \"crop\",\n          fm: \"png\",\n          ar: '16:9',\n          sat: isDarkMode ? 0 : -100,\n        }}\n      /> */}\n\n      <img\n        className='fixed inset-0 h-full w-full object-cover filter blur-lg'\n        src='assets/images/synthwave-outrun-fallback.jpg'\n        alt='Thumbnail: Synthwave landscape with a Metaverse city in the distance'\n        loading='eager'\n        />\n\n      <img\n        className='fixed inset-0 h-screen w-full object-cover filter grayscale invert dark:grayscale-0 dark:invert-0'\n        // eslint-disable-next-line react/jsx-handler-names\n        onLoad={handleImageOnLoad}\n        src='assets/images/synthwave-outrun-1920.png'\n        alt='Synthwave landscape with a Metaverse city in the distance'\n        width={1920}\n        height={1080}\n      />\n    </picture>\n  )\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/LoadingOrError.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/MarketplaceListings.tsx",["339","340","341"],[],"import { useCallback, useEffect, useState } from \"react\";\n\nimport { useMarketplace } from \"@thirdweb-dev/react\";\nimport type { AuctionListing, DirectListing } from \"@thirdweb-dev/sdk\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { PackageCard } from \"../Cards\";\nimport LoadingOrError from \"../LoadingOrError\";\n\nimport type { IPackage } from \"~mb/types\";\n\n\ntype MarketplaceProperties = {\n  address: string;\n}\nexport function MarketplaceListings({ address }: MarketplaceProperties): JSX.Element {\n  const [marketplaceListings, setMarketplaceListings] = useState<AuctionListing[] | DirectListing[] | undefined>();\n  const marketplace = useMarketplace(address);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  /** A callback function  to `getActiveListings` from the `marketplace` and then store them in `marketplaceListings` */\n  const fetchListingsCallback = useCallback(async ():Promise<(AuctionListing | DirectListing)[] | undefined>  => {\n    try {\n      const listings = await marketplace?.getActiveListings();\n      console.log('listings', listings);\n\n      if (listings === undefined) {\n        setIsLoading(false);\n        throw new Error(\"Error fetching listings\");\n      }\n      setIsLoading(false);\n      listings.sort((a, b) => Number.parseFloat(a.buyoutCurrencyValuePerToken.displayValue) - Number.parseFloat(b.buyoutCurrencyValuePerToken.displayValue));\n      return listings;\n    } catch (error) {\n      console.error(\"Error fetching listings\", error);\n      return undefined;\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [marketplace]);\n\n  useEffect(() => {\n    fetchListingsCallback().then(\n      (listings) => {\n        setMarketplaceListings(listings as AuctionListing[] | DirectListing[]);\n      }\n    ).catch(error => console.error(error));\n  }, [fetchListingsCallback]);\n\n\n  if (isLoading) {\n    return <LoadingOrError isInline message=\"Loading NFTs...\" />;\n  }\n  return (\n    <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\n      {(marketplaceListings && marketplaceListings.length > 0) ? (\n        marketplaceListings.map((listing: AuctionListing | DirectListing) => {\n          const {asset, id, assetContractAddress, buyoutCurrencyValuePerToken, currencyContractAddress} = listing;\n          const cardKey = uuid();\n          const pack = {\n            id,\n            name: asset.name,\n            description: asset.description,\n            displayPrice: buyoutCurrencyValuePerToken.displayValue,\n            value: buyoutCurrencyValuePerToken.value,\n            address: assetContractAddress,\n            currency: currencyContractAddress,\n            currencySymbol: buyoutCurrencyValuePerToken.symbol,\n            image: asset.image,\n            type: asset.type,\n            attributes: asset.attributes,\n            marketplace,\n          } as IPackage\n\n          return <PackageCard key={cardKey} pack={pack} />\n\n        })\n        ) : (\n          <div className=\"flex flex-col items-center justify-center\">\n            <span>No listings</span>\n          </div>\n      )}\n    </div>\n  )\n}\n\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Marketplace/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/PriceDisplay.tsx",["342"],[],"import accounting from \"accounting\";\n\nexport type IPriceDisplayProperties = {\n  price: string;\n  currency: string;\n}\n\n/** Displays the price of an asset in a pretty way */\nexport function PriceDisplay({ price, currency }: IPriceDisplayProperties): JSX.Element {\n  const cost = Number.parseFloat(price);\n  const formatted = accounting.formatMoney(price, '$', 2)\n\n  return (\n      <p className=\"price inline-flex gap-3 text-lg font-normal\">\n      {cost > 0 ? formatted : 'TBD'}\n      {cost > 0 ?\n        (\n          <span className=\"text-violet-400\">{currency}</span>\n        ) : undefined\n      }\n    </p>\n  )\n}\n\nexport default PriceDisplay;","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Buy.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/ContentSection.tsx",["343"],["344"],"import { useEffect, useRef } from 'react'\n\nimport { useIntersectionObserver } from 'usehooks-ts'\n\nexport interface IContentSectionProperties {\n  title?: string\n  id?: string\n  justify?: string\n  children: React.ReactNode\n  lead?: React.ReactNode\n}\n/**\n * **ContentSection** - Wraps each page section in a `section` element\n * @param param0 {title: string, id: string, justify?: string, children: React.ReactNode, lead: React.ReactNode}\n * @returns JSX.Element\n */\nexport function ContentSection({\n  title,\n  id,\n  justify,\n  children,\n  lead\n}: IContentSectionProperties): JSX.Element {\n  const sectionReference = useRef<HTMLDivElement>(null)\n  const animatedElementReference = useRef<HTMLDivElement>(null)\n  const entry = useIntersectionObserver(animatedElementReference, {})\n  const isVisible = !!entry?.isIntersecting\n\n  useEffect(() => {\n    console.log(`Render section ${title ?? 'undefined'}`, { isVisible })\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isVisible]);\n\n\n\n\n  return (\n    <section\n      id={id}\n      ref={sectionReference}\n      className={`\n      flex\n      flex-col\n      items-center\n      justify-${justify ?? 'start'}\n      min-h-screen\n      w-full\n      scroll-mt-24\n      overflow-x-hidden\n      overflow-y-hidden\n      bg-transparent\n      dark:bg-blue-900\n      transition-colors duration-300\n      `}\n    >\n      <div\n        ref={animatedElementReference}\n        className='\n          relative\n          my-20\n          xl:my-24\n          flex\n          w-full\n          flex-col\n          items-center space-y-7\n          2xl:space-y-8\n          px-3\n          md:px-0\n          '\n      >\n        <div className='flex flex-col items-center'>\n          <h2 className='gradient-text text-shadow dark:text-shadow-alt text-center font-extrabold tracking-tight text-4xl 2xl:text-6xl'>\n            {title}\n          </h2>\n        </div>\n        <p className='max-w-xl 2xl:max-w-3xl text-center font-extrabold text-xl 2xl:text-2xl dark:text-slate-50'>\n          {lead}\n        </p>\n        {children}\n      </div>\n    </section>\n  )\n}\n\nexport default ContentSection\n\nContentSection.defaultProps = {\n  title: '',\n  id: '',\n  justify: 'start',\n  lead: <div className='hidden' />\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Intro.tsx",["345","346","347","348"],[],"import { useEffect, useLayoutEffect } from \"react\";\n\nimport { Icon } from \"@iconify/react\";\nimport {useIsClient} from \"usehooks-ts\"\n\nimport { useSectionAnimation } from '~mb/hooks/animation'\nimport {ContentSection} from \"~mb/sections/index\";\n\n\nexport function IntroSectionLead(): JSX.Element {\n  return (\n    <>\n      <span className=\"text-primary text-shadow\">Our services help you</span> navigate this new paradigm\n      and <span className=\"text-primary text-shadow\">take your brand to new heights</span>.\n    </>\n  )\n}\n\nexport default function IntroSection(): JSX.Element {\n  const sectionId = 'intro';\n\n  return (\n    <ContentSection\n      title=\"The Metaverse\"\n      id={sectionId}\n      justify=\"center\" lead={<IntroSectionLead />}>\n      <div\n        className=\" grid gap-2 grid-cols-2\"\n      >\n        <a\n          href=\"#team\"\n          className=\"group flex items-center justify-center gap-3 px-3 md:px-6 py-2 md:py-4 border-2 border-violet-500 hover:border-teal-500 rounded-md\"\n        >\n          <Icon\n            icon=\"fa:group\"\n            className=\"text-6xl\"\n          />\n          <span className=\"gradient-text-alt text-md md:text-2xl group-hover:text-teal-500 transition-colors\">The Team</span>\n        </a>\n        <a\n          href=\"#services\"\n          className=\"group flex items-center justify-center gap-3 px-6 py-4 border-2 border-violet-500 hover:border-teal-500 rounded-md\"\n        >\n          <Icon\n            icon=\"mdi:rocket\"\n            className=\"text-6xl\"\n          />\n          <span className=\"gradient-text-alt text-md md:text-2xl group-hover:text-teal-500 transition-colors\">Services</span>\n        </a>\n      </div>\n    </ContentSection>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Partners.tsx",["349","350"],[],"import { useLayoutEffect } from \"react\";\n\nimport { v4 as uuid } from \"uuid\";\n\nimport { PartnersCard  } from  '~mb/cards/index';\nimport partners from \"~mb/data/partners/partners.json\";\nimport { useSectionAnimation } from \"~mb/hooks/animation\";\nimport {ContentSection} from \"~mb/sections/index\";\n\n\n\nexport function PartnerSectionLead(): JSX.Element {\n  return (\n    <>\n      <span className=\"text-primary\">Meta-Builders is a community</span> of developers and designers who are <span className=\"text-primary\">passionate about building software</span>.\n    </>\n  )\n}\n\nexport default function PartnersSection(): JSX.Element {\n  const sectionId = 'partners';\n\n  return (\n    <ContentSection title=\"MB Partners\" id={sectionId} lead={<PartnerSectionLead />}>\n      <div className=\"max-w-3/4 w-full xl:max-w-4xl 2xl:max-w-6xl space-y-2\">\n        <div className=\"grid grid-cols-3 gap-2 xl:gap-4 xl:grid-cols-4 text-center\">\n          {partners.map((partner) => <PartnersCard key={uuid()} partner={partner} />)}\n        </div>\n      </div>\n    </ContentSection>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Services.tsx",["351"],[],"import { Icon } from '@iconify/react'\nimport { v4 as uuid } from \"uuid\";\n\nimport services from \"~mb/data/services/services.json\";\nimport { useSectionAnimation } from '~mb/hooks/animation';\nimport { ContentSection } from \"~mb/sections/index\";\n\nexport function ServicesLead(): JSX.Element {\n  return (\n    <>\n      We provide <span className=\"text-primary\">end to end services</span> for curating <span className=\"text-primary\">Web3</span> and <span className=\"text-primary\">Metaverse </span> environments.\n    </>\n  )\n}\n\nexport default function ServicesSection(): JSX.Element {\n  const sectionId = 'services'\n\n  return (\n    <ContentSection title=\"Services\" id={sectionId} lead={<ServicesLead />}>\n      <ul className=\"grid max-w-6xl grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n        {services.map(({ title, description, icon }) => (\n          <li key={uuid()} className=\"flex flex-col items-center gap-4 p-6 border border-default bg-offset\">\n            <div className=\"w-16 h-16 p-3 border-2 border-teal-200 rounded-full inline-flex items-center justify-center text-shadow-alt-sm-teal\">\n              <Icon icon={icon} className=\"text-6xl text-teal-300 \" />\n            </div>\n            <h3 className=\"text-xl font-extrabold text-center text-teal-300\">{title}</h3>\n            <p className=\"text-sm text-center text-offset\">{description}</p>\n          </li>\n        ))}\n      </ul>\n    </ContentSection>\n  );\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Splash.tsx",["352"],[],"\nimport { useEffect, useRef } from \"react\";\n\n\nimport { HeroImage } from \"~mb/components/HeroImage\";\nimport { useSplashContentAnimation } from \"~mb/hooks/animation\";\n\nexport default function SplashSection(): JSX.Element {\n  const sectionReference = useRef<HTMLDivElement>(null);\n  // const widths = [450, 800];\n  const isDevelopment = import.meta.env.VITE_NODE_ENV === \"development\"; // this doesn't work\n\n  const elementSelector = \".leadIn\";\n  const triggerSelector = sectionReference;\n  // const charSelector = \"#splash-character .leadIn\";\n\n  useSplashContentAnimation(elementSelector, triggerSelector);\n  // useSplashCharacterAnimation(charSelector, triggerSelector);\n\n  useEffect(() => {\n    if (isDevelopment) {\n      console.log(\"SplashSection: useEffect\");\n    }\n  }, [isDevelopment]);\n\n  return (\n    <section\n      ref={sectionReference}\n      id=\"home\"\n      className=\"splash-wrapper relative h-screen w-full dark:bg-slate-900 overflow-x-hidden\"\n    >\n      {/* <Starfield /> */}\n      <div\n        id=\"splash-bg-fallback\"\n        className=\"absolute inset-0 w-screen h-screen z-0 \"\n      >\n        <HeroImage />\n      </div>\n      <div className=\"relative grid h-full grid-cols-1 sm:grid-cols-2 place-items-end lg:place-items-center splash-main pb-32 lg:pb-0\">\n        <div id=\"splash-content\" className=\"leadIn invisible justify-self-center self-end lg:self-center\">\n          <h1 className=\"flex flex-col self-start lg:self-end gap-2 sm:gap-4 xl:self-auto xl:justify-self-end\">\n            <div className=\"shadow-font-heading font-black tracking-tighter text-center text-5xl 2xl:text-8xl gradient-text text-shadow-alt-4xl-teal\">\n              Meta-Builders\n            </div>\n          </h1>\n          <p className=\"font-bold text-xl 2xl:text-3xl gradient-text-alt text-fill tracking-tight text-center xl:text-right -translate-y-4 lg:-translate-y-6 2xl:-translate-y-8 text-shadow\">\n            Welcome to The Metaverse.</p>\n        </div>\n\n        {/* <picture id=\"splash-character\" className=\"floating self-start w-2/3 max-w-3xl sm:w-10/12 sm:self-auto sm:justify-self-start\"> */}\n        {/* {!isDevelopment ? (\n          <Imgix\n            className=\"object-cover w-full h-full invisible leadIn\"\n            src={buildImgUrl('astronaut2.png', 'assets/images')}\n            width={450}\n            htmlAttributes={{\n              alt: \"A floating astronaut in a space suit\",\n              sizes\n            }}\n            />\n          ) : ( */}\n        {/* <img src=\"assets/images/astronaut2.png\" alt=\"A floating astronaut in a space suit\" width={450}\n                className=\"object-cover w-full h-full invisible leadIn\"\n              /> */}\n        {/* )} */}\n        {/* </picture> */}\n      </div>\n    </section>\n  )\n}\n\n/**  */\nexport const SplashGL = (): Error => { throw new Error(\"SplashSection: SplashGL component is not implemented\") };\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/Team.tsx",["353","354"],[],"import { v4 as uuid } from \"uuid\";\n\nimport { TeamMemberCard } from '~mb/cards/index';\nimport members from \"~mb/data/team/members.json\";\nimport { useSectionAnimation } from '~mb/hooks/animation';\nimport {ContentSection} from \"~mb/sections/index\";\nimport { ITeamMember } from \"~mb/types\";\n\nexport function TeamSectionLead(): JSX.Element {\n  return (\n    <>\n      We are the <span className=\"text-primary\">Meta-Builders</span>! We have <span className=\"text-primary\">everything you need</span> to keep <span className=\"text-primary\">your content</span> afloat in this ever changing digital world\n    </>\n  )\n}\n\nexport default function TeamSection(): JSX.Element {\n  const sectionId = 'team';\n\n  return (\n    <ContentSection title=\"Meet your team\" id={sectionId} lead={<TeamSectionLead />}>\n      <div className=\"max-w-6xl space-y-2\">\n        <div className=\"grid grid-cols-2 gap-6 space-y-0 md:gap-5 md:grid-cols-2 lg:grid-cols-5\">\n          {members.map((member) => (\n            <TeamMemberCard key={uuid()} member={member} />\n          ))}\n        </div>\n      </div>\n    </ContentSection>\n\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Sections/index.ts",["355"],[],"export * from \"./ContentSection\";\nexport * from \"./Intro\";\nexport * from \"./Partners\";\nexport * from \"./Services\";\nexport * from \"./Splash\";\nexport * from \"./Team\";\nexport * from \"./Buy\";","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Starfield.tsx",[],[],["356","357","358","359","360"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Toast/index.tsx",["361"],["362","363","364"],"\n/* eslint-disable react/jsx-props-no-spreading */\n\nimport { useEffect } from \"react\";\n\nimport { Icon } from \"@iconify/react\"\nimport { normalizeProps, useActor } from \"@zag-js/react\"\nimport * as toast from '@zag-js/toast'\nimport type { PropTypes } from '@zag-js/types'\nimport  \"~mb/styles/toast.css\";\n/**\n * Toast component for displaying messages to the user\n */\nfunction Toast({actor, id}: {actor: toast.Service, id: string}): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  const [state, send] = useActor(actor)\n  const toastApi = toast.connect<PropTypes>(state, send, normalizeProps)\n\n  function onToastDismiss(): void {\n    toastApi.dismiss()\n  }\n\n  return (\n    <div id={id} className=\"toast pointer-events-auto px-0\" {...toastApi.rootProps}>\n      <div className=\"toast-header inline-flex items-start justify-between px-5\">\n        <h3 className=\"m-0 font-normal\" {...toastApi.titleProps}>{toastApi.title}</h3>\n        <span>{toastApi.type === \"loading\" ? <Icon icon=\"mdi:spinner\" className=\"animate-spin\" /> : undefined}</span>\n        <button\n          type=\"button\"\n          className=\"group btn btn-link self-start -mr-3 p-0 hover:text-violet-500\"\n          onClick={onToastDismiss}>\n          <Icon icon=\"mdi:close\" className=\"text-lg group-hover:text-violet-500 transition-colors\"/>\n          <span className=\"sr-only\">Dismiss</span>\n        </button>\n      </div>\n      <div {...toastApi.progressbarProps} />\n      {/* {toastApi.description ? <p>{toastApi.description}</p> : undefined} */}\n    </div>\n  )\n}\n\nexport default Toast\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/ThemeContext.tsx",[],["365"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/contexts/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/layouts/Default.tsx",["366","367","368","369","370","371","372","373","374","375","376","377","378"],[],"\n\nimport type React from 'react';\nimport { ReactElement, useEffect } from 'react';\n\nimport gsap from \"gsap\";\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\nimport { ButtonProps } from 'react-daisyui';\n\nimport Footer from '~mb/default/Footer';\nimport Header from '~mb/default/Header';\n\nimport \"~mb/styles/index.css\";\nimport { useEventListener } from 'usehooks-ts';\n\ngsap.registerPlugin(ScrollToPlugin);\n\nexport type LayoutProperties = {\n  title?: string;\n  description?: string;\n  permalink?: string;\n  previewImageSrc?: URL;\n};\n\nexport function scrollOnLoad(): void {\n  const tl = gsap.timeline();\n  console.log(\"useScrollOnLoad\");\n\n  // useEffect(() => {\n    if (typeof window === \"undefined\") return;\n\n    if (window.location.hash !== \"\") {\n      console.log('scroll to hash', window.location.hash);\n\n      const element = document.querySelector(window.location.hash);\n      if (element !== null) {\n        // TODO: not sure why the easing & timing are not working\n        tl.to(\n          window,\n          {\n            duration: 0.4,\n            delay: 0.1,\n            scrollTo: {\n              y: element,\n            },\n            ease: \"power3.inOut\",\n          },\n        );\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [window.location]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [window.location.hash]);\n}\n\nexport function Layout({ children, content }: {children: React.ReactNode, content: LayoutProperties}): JSX.Element {\n  const { title, description, permalink, previewImageSrc } = content\n  const metaTitle = `${title ?? 'Welcome to the Metaverse'} - Meta-Builders`\n  const metaLink = permalink ? `https://metabuilders.luxumbra.dev${permalink}` : ''\n\n\n  return (\n    <div className=\"wrapper bg-gradient-to-b dark:from-slate-900 dark:to-slate-800\">\n      <Header />\n      {children}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Layout;\n\n\n\nLayout.defaultProps = {\n  title: \"Meta-Builders\",\n  description: \"Meta-Builders is a digital agency that specializes in building in the Metaverse, from websites, apps, to digital products for brands and businesses.\",\n  permalink: \"/\",\n  previewImageSrc: 'https://metabuilders.luxumbra.dev/social.png',\n}\n/* <script>\nimport gsap from \"gsap\";\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\ngsap.registerPlugin(ScrollToPlugin);\n\n// scroll to the hash in the url if there is one\nfunction handleScrollOnLoad() {\n  const tl = gsap.timeline();\n  if (typeof window === \"undefined\") return;\n\n  if (window.location.hash) {\n    const element = document.querySelector(window.location.hash);\n    if (element && tl) {\n      // TODO: not sure why the easing & timing are not working\n      tl.to(\n        window,\n        {\n          duration: 0,\n          delay: 0.1,\n          scrollTo: {\n            y: element,\n          },\n          ease: \"power3.inOut\",\n        },\n      );\n    }\n  }\n}\nwindow.addEventListener(\"load\", handleScrollOnLoad);\n</script>\n<script>\nimport { client } from '~mb/config';\n</script>\n<style>\n:global(html) {\n  scroll-behavior: smooth;\n}\n@media (prefers-reduced-motion: reduce) {\n  :global(html) {\n    scroll-behavior: auto;\n  }\n}\n</style> */","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/animation/starfield.ts",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],["396","397","398","399","400","401","402","403"],"/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n\nexport function starfield(): void {\n  const COUNT = 800;\n  const SPEED = 0.1;\n\n  type IStar = {\n    x: number;\n    y: number;\n    z: number;\n    xPrev: number;\n    yPrev: number;\n  }\n  class Star {\n    x: number;\n\n    y: number;\n\n    z: number;\n\n    xPrev: number;\n\n    yPrev: number;\n\n    constructor(x: number, y: number, z: number) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.xPrev = x;\n      this.yPrev = y;\n    }\n\n    update(width: number, height: number, speed: number): void {\n      this.xPrev = this.x;\n      this.yPrev = this.y;\n      this.z += speed * 0.0675;\n      this.x += this.x * (speed * 0.0225) * this.z;\n      this.y += this.y * (speed * 0.0225) * this.z;\n      if (\n        this.x > width / 2 ||\n        this.x < -width / 2 ||\n        this.y > height / 2 ||\n        this.y < -height / 2\n      ) {\n        this.x = Math.random() * width - width / 2;\n        this.y = Math.random() * height - height / 2;\n        this.xPrev = this.x;\n        this.yPrev = this.y;\n        this.z = 0;\n      }\n    }\n\n    draw(context: CanvasRenderingContext2D): void {\n      context.lineWidth = this.z;\n      context.beginPath();\n      context.moveTo(this.x, this.y);\n      context.lineTo(this.xPrev, this.yPrev);\n      context.stroke();\n    }\n  }\n\n  const stars = Array.from({ length: COUNT }, () => new Star(0, 0, 0));\n  let rafId: number;\n\n  const canvas = document.querySelector(\"#starfield-canvas\") as HTMLCanvasElement;\n  const context = canvas.getContext(\"2d\");\n\n  const container = document.querySelector(\"#starfield\");\n  if (container === null) return\n\n  function frame(): void {\n    if (container === null) return\n    if (context === null) return\n    const { clientWidth: width, clientHeight: height } = container;\n\n    for (const star of stars) {\n      star.update(width, height, SPEED);\n      star.draw(context);\n    }\n\n    context.fillRect(-width / 2, -height / 2, width, height);\n    rafId = requestAnimationFrame(frame);\n  }\n\n  function setup(): void {\n    if (container === null) return\n    if (context === null) return\n    if (rafId) cancelAnimationFrame(rafId);\n    const { clientWidth: width, clientHeight: height } = container;\n\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    context.scale(dpr, dpr);\n\n    for (const star of stars) {\n      star.x = Math.random() * width - width / 2;\n      star.y = Math.random() * height - height / 2;\n      star.z = 0;\n    }\n\n    context.translate(width / 2, height / 2);\n    context.fillStyle = \"rgba(0, 0, 0, 0.4)\";\n    context.strokeStyle = \"white\";\n    rafId = requestAnimationFrame(frame);\n  }\n  const resizeObserver = new ResizeObserver(setup);\n  resizeObserver.observe(container);\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/constants.ts",["404"],[],"import type { Marketplace } from \"@thirdweb-dev/sdk\"\n\nexport const tokenId = 'ethereum'\nexport const coingeckoApiUrl = 'https://api.coingecko.com/api/v3/'\nexport const tokenQuery = '?localization=false&tickers=true&market_data=true'\nexport const packageContract = '0x3E7bD1a413D7f411C33A201A7e97b5680101a2e3'\nexport const marketPlaceContract = '0x98Cd691f8533359782B83BD3231348e39c553050'\nexport const officialUrl = import.meta.env.VITE_METABUILDERS_OFFICIAL_URL as string\nexport const imgixUrl = 'https://metabuilders.luxumbra.dev/'","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/helpers.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/useDarkMode.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/main.tsx",["405"],["406"],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/404.tsx",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/routes/Home.tsx",["407","408","409","410"],[],"import { lazy, Suspense } from 'react'\n\nimport LoadingOrError from '~mb/components/LoadingOrError'\nimport Layout from '~mb/layouts/Default'\nimport { imgixUrl } from '~mb/lib/constants'\n\nimport '~mb/styles/index.css'\nimport { useLocation } from 'react-router-dom'\n\nconst BuySection = lazy(async () => import('~mb/sections/Buy'))\nconst IntroSection = lazy(async () => import('~mb/sections/Intro'))\nconst SplashSection = lazy(async () => import('~mb/sections/Splash'))\nconst PartnersSection = lazy(async () => import('~mb/sections/Partners'))\nconst TeamSection = lazy(async () => import('~mb/sections/Team'))\nconst ServicesSection = lazy(async () => import('~mb/sections/Services'))\n\n\n\n\nexport function Home(): JSX.Element {\n  const meta = {\n    title: 'Welcome to the Metaverse',\n    description:\n      'We the Meta-Builders will help you navigate this new paradigm, and take your brand to new heights',\n    previewImageSrc: new URL('social.png', imgixUrl)\n  }\n\n  return (\n    <Layout content={meta}>\n      <SplashSection />\n      <IntroSection />\n      <ServicesSection />\n      <PartnersSection />\n      <TeamSection />\n      <BuySection />\n    </Layout>\n  )\n}\n\nexport default Home\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/types/index.ts",[],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/vite-env.d.ts",["411"],[],"/home/lux/work/metaverse/meta-builders/meta-builders-website/src/lib/hooks/animation.ts",["412","413","414","415","416","417","418"],["419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461"],"/* eslint-disable @typescript-eslint/no-magic-numbers */\nimport type { MutableRefObject, RefObject} from 'react';\nimport { useEffect, useRef } from 'react'\n\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\nimport { useIntersectionObserver, useIsClient, useSsr } from 'usehooks-ts'\n\ngsap.registerPlugin(ScrollTrigger)\n\nexport * from '../animation/starfield'\n\n/** Handle the scroll triggers for page sections */\nexport function useSectionAnimation(\n  section: string,\n  clear?: boolean | undefined\n): void {\n  // if (section.length === 0) return ;\n  const { isBrowser } = useSsr()\n\n\n  const wrapper = document.querySelector(section)\n  console.log('useSectionAnimation', wrapper);\n\n  // const entry = useIntersectionObserver(section, {})\n  const tl = gsap.timeline({\n    paused: true,\n    reversed: true,\n    defaults: {\n      duration: 0.3,\n      delay: 0.3,\n      ease: 'power3.inOut'\n    },\n    scrollTrigger: {\n      trigger: wrapper,\n      start: 'top center',\n      end: '+=200',\n      scrub: 1,\n    }\n  })\n\n  if (clear) {\n    tl.clear()\n  }\n\n  function init(): void {\n    tl.fromTo(\n      `${section} .leadIn`,\n      {\n        opacity: 0,\n        y: 20,\n        stagger: 0.2\n      },\n      {\n        opacity: 1,\n        y: 0,\n        stagger: 0.2\n      }\n    )\n\n    // tl.to(\n    //   `${section} .leadIn`,\n    //   {\n    //     opacity: 0,\n    //     stagger: 0.5,\n    //     scrollTrigger: {\n    //       trigger: `${section} + section`,\n    //       start: \"top center\",\n    //       end: \"+=200\",\n    //       scrub: 1,\n    //       markers: true,\n    //     }\n    //   }\n    // )\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    tl.play()\n  }\n\n  useEffect(() => {\n    // if (!isBrowser) return ;\n      init()\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isBrowser])\n}\n\n/**\n * Reveals the CTA for buying a package\n *\n * Takes a `string` containing the selector for the CTA element and one for the trigger\n * @param element string\n * @param trigger string\n */\nexport function useBuyCtaAnimation(\n  element: string,\n  trigger: string,\n): void {\n  const { isBrowser } = useSsr()\n  const tl = gsap.timeline({\n    defaults: {\n      duration: 2,\n      delay: 0.5,\n      ease: 'power3.inOut'\n    },\n    scrollTrigger: {\n      trigger,\n      start: 'top top',\n      end: 'bottom center',\n      scrub: 1,\n      // markers: true,\n      pin: true\n    }\n  })\n\n  function init(): void {\n    if (element.length === 0) return\n    tl.fromTo(\n      element,\n      {\n        opacity: 0,\n        scale: 0.5,\n        x: '100%'\n      },\n      {\n        opacity: 1,\n        scale: 1,\n        x: 25\n      }\n    )\n  }\n\n  useEffect(() => {\n    if (isBrowser) init()\n    return () => {\n      tl.clear()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isBrowser]);\n}\n\n/** Animations & triggers for the extra content (rhs) on the splash screen */\nexport function useSplashCharacterAnimation(\n  element: string,\n  triggerReference: RefObject<HTMLElement>,\n): void {\n  const {isBrowser} = useSsr()\n  const trigger = triggerReference.current\n  // const entry = useIntersectionObserver(triggerReference, {})\n  const tl = gsap.timeline({\n    defaults: {\n      duration: 0.5,\n      opacity: 0,\n      delay: 0,\n      ease: 'power3.inOut'\n    }\n  })\n\n  function init(): void {\n    tl.from(element, { autoAlpha: 0 })\n\n    tl.fromTo(\n      element,\n      {\n        opacity: 1,\n        scale: 1,\n        rotate: 0,\n        x: 0,\n        y: 0,\n        stagger: 0.5\n      },\n      {\n        opacity: 1,\n        rotate: 90,\n        scale: 0.5,\n        y: '15%',\n        x: '2%',\n        stagger: 0.5,\n        scrollTrigger: {\n          trigger,\n          start: 'top top',\n          end: '+=500',\n          scrub: 1\n          // markers: true,\n        }\n      }\n    )\n  }\n\n  useEffect(() => {\n    if (isBrowser) init()\n  });\n\n}\n\n/** Animations for the splash screen content */\nexport function useSplashContentAnimation(\n  element: string,\n  triggerReference: RefObject<HTMLElement>,\n): void {\n  const {isBrowser} = useSsr()\n  const trigger = triggerReference.current\n  const entry = useIntersectionObserver(triggerReference, {})\n  const isVisible = !!entry?.isIntersecting\n\n  const tl = gsap.timeline({\n    paused: true,\n    reversed: true,\n    defaults: {\n      duration: 1.5,\n      delay: 0,\n      ease: 'power3.inOut'\n    }\n  })\n\n  function init(): void {\n    tl.from(element, {\n      autoAlpha: 0,\n      // y: 0,\n      xPercent: 0,\n      scale: 1,\n      transformOrigin: 'center',\n      stagger: 0.1,\n    })\n\n    // tl.fromTo(\n    //   element,\n    //   {\n    //     opacity: 1,\n    //     xPercent: 0,\n    //     scale: 1\n    //   },\n    //   {\n    //     opacity: 0,\n    //     scale: 0.5,\n    //     transformOrigin: 'center',\n    //     xPercent: -10,\n    //     scrollTrigger: {\n    //       trigger,\n    //       start: '15% center',\n    //       end: '+=1000',\n    //       scrub: 1,\n    //     }\n    //   }\n    // )\n\n    // if (isVisible) {\n      if (tl.reversed()) {\n        tl.play()\n      } else {\n        tl.reverse()\n      }\n\n    // }\n  }\n\n  useEffect(() => {\n    if (isBrowser && isVisible) init()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isBrowser, isVisible]);\n}\n\nexport function useScrollReveal(element: string, trigger: string): void {\n\n  function init(): void {\n    if (typeof window === 'undefined') return\n    console.log('init scroll reveal', {trigger, element});\n\n    const tl = gsap.timeline({\n      defaults: {\n        duration: 0.3,\n        delay: 0.5,\n        ease: 'power3.inOut'\n      }\n    })\n    tl.fromTo(\n      `${trigger} ${element}`,\n      {\n        opacity: 0,\n        y: 10,\n        stagger: 0.2,\n        autoAlpha: 1\n      },\n      {\n        opacity: 1,\n        y: 0,\n        stagger: 0.2,\n        scrollTrigger: {\n          trigger,\n          start: 'top 85%',\n          end: '+=25px',\n          scrub: 1,\n          }\n        }\n      )\n\n    }\n\n\n\n  useEffect(() => {\n    if (element.length === 0) return\n    init()\n  })\n}\n\nexport function useHeaderAnimation(): void {\n  if (typeof window === 'undefined') return\n\n  const mobileMenuId = 'mobile-menu'\n  const mobileMenuWrapper = document.querySelector(\n    `#${mobileMenuId}`\n  ) as HTMLElement\n  const header = document.querySelector('#page-header') as HTMLElement\n  const page = document.documentElement\n  const menu = document.querySelector(`#${mobileMenuId} ul`) as HTMLElement\n  const openNavButton = document.querySelector(\n    '#open-nav-button'\n  ) as HTMLButtonElement\n  const closeNavButton = document.querySelector(\n    '#close-nav-button'\n  ) as HTMLButtonElement\n\n  const openMenu = (): void => {\n    console.log('openMenu')\n    mobileMenuWrapper.classList.remove('hidden')\n    gsap.to(mobileMenuWrapper, {\n      duration: 0.5,\n      opacity: 1,\n      y: 0,\n      ease: 'power2.inOut'\n    })\n  }\n\n  const closeMenu = (): void => {\n    mobileMenuWrapper.classList.add('hidden')\n    gsap.to(mobileMenuWrapper, {\n      duration: 0.5,\n      opacity: 0,\n      y: -100,\n      ease: 'power2.inOut'\n    })\n  }\n\n  function init(): void {\n    gsap.from(header, {\n      duration: 1,\n      opacity: 0,\n      y: '-100%',\n      ease: 'bounce'\n    })\n    openNavButton.addEventListener('click', openMenu)\n    closeNavButton.addEventListener('click', closeMenu)\n\n    document.addEventListener('scroll', () => {\n      const d = page.clientHeight - page.scrollTop - header.offsetHeight\n      header.classList.toggle('fixed-header', d < 0)\n      gsap.from(header, {\n        duration: 0.5,\n        // opacity: d < 0 ? 1 : 0.5,\n        ease: 'power3.inOut'\n      })\n    })\n\n    menu.addEventListener('click', event => {\n      const target = event.target as HTMLElement\n      if (target.tagName === 'A') {\n        closeMenu()\n      }\n    })\n  }\n\n  if (typeof window !== 'undefined') {\n    window.addEventListener('load', () => {\n      init()\n    })\n  }\n}\n","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Portal.tsx",["462","463","464","465"],[],"import type React from 'react'\n\nimport usePortal from 'react-useportal'\n\n\nexport function Portal({ children }: { children: JSX.Element }): JSX.Element {\n  const { openPortal, closePortal, isOpen, Portal: ZagPortal, ref } = usePortal({\n    bindTo: document.querySelector('#portal-root') as HTMLElement,\n    closeOnOutsideClick: true,\n  })\n\n  return (\n    <ZagPortal forwardRef={ref}>\n      {children}\n    </ZagPortal>\n  )\n}","/home/lux/work/metaverse/meta-builders/meta-builders-website/src/components/Seo.tsx",[],[],{"ruleId":"466","severity":1,"message":"467","line":34,"column":11,"nodeType":"468","messageId":"469","endLine":34,"endColumn":13},{"ruleId":"470","severity":1,"message":"471","line":50,"column":18,"nodeType":"472","messageId":"473","endLine":50,"endColumn":22},{"ruleId":"466","severity":1,"message":"474","line":63,"column":11,"nodeType":"468","messageId":"469","endLine":63,"endColumn":19},{"ruleId":"470","severity":1,"message":"475","line":72,"column":21,"nodeType":"472","messageId":"473","endLine":72,"endColumn":22},{"ruleId":"476","severity":2,"message":"477","line":2,"column":24,"nodeType":"472","messageId":"478","endLine":2,"endColumn":32,"fix":"479","suppressions":"480"},{"ruleId":"481","severity":2,"message":"482","line":82,"column":5,"nodeType":"483","messageId":"484","endLine":82,"endColumn":46,"suppressions":"485"},{"ruleId":"486","severity":2,"message":"487","line":88,"column":6,"nodeType":"488","endLine":88,"endColumn":40,"suggestions":"489","suppressions":"490"},{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"497","replacedBy":"498"},{"ruleId":"499","replacedBy":"500"},{"ruleId":"501","severity":2,"message":"502","line":18,"column":7,"nodeType":"503","messageId":"504","endLine":18,"endColumn":16,"suppressions":"505"},{"ruleId":"466","severity":1,"message":"506","line":5,"column":15,"nodeType":"468","messageId":"469","endLine":5,"endColumn":28},{"ruleId":"466","severity":1,"message":"507","line":5,"column":43,"nodeType":"468","messageId":"469","endLine":5,"endColumn":48},{"ruleId":"466","severity":1,"message":"508","line":49,"column":96,"nodeType":"468","messageId":"469","endLine":49,"endColumn":105},{"ruleId":"466","severity":1,"message":"509","line":73,"column":9,"nodeType":"468","messageId":"469","endLine":73,"endColumn":19},{"ruleId":"470","severity":1,"message":"475","line":74,"column":14,"nodeType":"472","messageId":"473","endLine":74,"endColumn":15},{"ruleId":"470","severity":1,"message":"510","line":76,"column":12,"nodeType":"472","messageId":"473","endLine":76,"endColumn":15},{"ruleId":"470","severity":1,"message":"511","line":77,"column":15,"nodeType":"472","messageId":"473","endLine":77,"endColumn":18},{"ruleId":"470","severity":1,"message":"475","line":79,"column":16,"nodeType":"472","messageId":"473","endLine":79,"endColumn":17},{"ruleId":"466","severity":1,"message":"512","line":87,"column":13,"nodeType":"468","messageId":"469","endLine":87,"endColumn":24},{"ruleId":"470","severity":1,"message":"513","line":92,"column":19,"nodeType":"472","messageId":"473","endLine":92,"endColumn":23},{"ruleId":"466","severity":1,"message":"514","line":94,"column":15,"nodeType":"468","messageId":"469","endLine":94,"endColumn":30},{"ruleId":"470","severity":1,"message":"513","line":98,"column":19,"nodeType":"472","messageId":"473","endLine":98,"endColumn":23},{"ruleId":"466","severity":1,"message":"515","line":109,"column":13,"nodeType":"468","messageId":"469","endLine":109,"endColumn":23},{"ruleId":"470","severity":1,"message":"516","line":115,"column":19,"nodeType":"472","messageId":"473","endLine":115,"endColumn":23},{"ruleId":"517","severity":1,"message":"518","line":119,"column":7,"nodeType":"519","messageId":"520","endLine":119,"endColumn":18},{"ruleId":"470","severity":1,"message":"516","line":185,"column":23,"nodeType":"472","messageId":"473","endLine":185,"endColumn":27},{"ruleId":"521","severity":1,"message":"522","line":191,"column":24,"nodeType":"523","messageId":"524","endLine":191,"endColumn":27,"suggestions":"525"},{"ruleId":"517","severity":1,"message":"518","line":192,"column":11,"nodeType":"519","messageId":"520","endLine":192,"endColumn":22},{"ruleId":"526","severity":1,"message":"527","line":194,"column":14,"nodeType":"519","messageId":"528","endLine":194,"endColumn":27},{"ruleId":"526","severity":1,"message":"529","line":194,"column":43,"nodeType":"519","messageId":"528","endLine":194,"endColumn":57},{"ruleId":"466","severity":1,"message":"530","line":198,"column":17,"nodeType":"468","messageId":"469","endLine":198,"endColumn":29},{"ruleId":"470","severity":1,"message":"516","line":202,"column":23,"nodeType":"472","messageId":"473","endLine":202,"endColumn":27},{"ruleId":"486","severity":2,"message":"531","line":209,"column":5,"nodeType":"488","endLine":209,"endColumn":83,"suggestions":"532"},{"ruleId":"470","severity":1,"message":"533","line":218,"column":50,"nodeType":"472","messageId":"473","endLine":218,"endColumn":53},{"ruleId":"470","severity":1,"message":"475","line":222,"column":18,"nodeType":"472","messageId":"473","endLine":222,"endColumn":19},{"ruleId":"470","severity":1,"message":"534","line":225,"column":19,"nodeType":"472","messageId":"473","endLine":225,"endColumn":22},{"ruleId":"470","severity":1,"message":"475","line":230,"column":18,"nodeType":"472","messageId":"473","endLine":230,"endColumn":19},{"ruleId":"470","severity":1,"message":"475","line":231,"column":16,"nodeType":"472","messageId":"473","endLine":231,"endColumn":17},{"ruleId":"470","severity":1,"message":"535","line":232,"column":16,"nodeType":"472","messageId":"473","endLine":232,"endColumn":20},{"ruleId":"470","severity":1,"message":"536","line":233,"column":19,"nodeType":"472","messageId":"473","endLine":233,"endColumn":22},{"ruleId":"470","severity":1,"message":"475","line":236,"column":18,"nodeType":"472","messageId":"473","endLine":236,"endColumn":19},{"ruleId":"517","severity":1,"message":"518","line":242,"column":26,"nodeType":"519","messageId":"520","endLine":242,"endColumn":37},{"ruleId":"470","severity":1,"message":"537","line":242,"column":50,"nodeType":"472","messageId":"473","endLine":242,"endColumn":53},{"ruleId":"470","severity":1,"message":"538","line":271,"column":120,"nodeType":"472","messageId":"473","endLine":271,"endColumn":121},{"ruleId":"517","severity":1,"message":"518","line":354,"column":9,"nodeType":"519","messageId":"520","endLine":354,"endColumn":20},{"ruleId":"517","severity":1,"message":"518","line":357,"column":9,"nodeType":"519","messageId":"520","endLine":357,"endColumn":20},{"ruleId":"539","severity":1,"message":"540","line":376,"column":9,"nodeType":"541","messageId":"542","endLine":376,"endColumn":62},{"ruleId":"501","severity":2,"message":"502","line":326,"column":11,"nodeType":"503","messageId":"504","endLine":326,"endColumn":67,"suppressions":"543"},{"ruleId":"466","severity":1,"message":"544","line":5,"column":10,"nodeType":"468","messageId":"469","endLine":5,"endColumn":20},{"ruleId":"466","severity":1,"message":"545","line":5,"column":22,"nodeType":"468","messageId":"469","endLine":5,"endColumn":33},{"ruleId":"546","severity":1,"message":"547","line":13,"column":13,"nodeType":"468","messageId":"548","endLine":13,"endColumn":35},{"ruleId":"517","severity":1,"message":"518","line":28,"column":7,"nodeType":"519","messageId":"520","endLine":28,"endColumn":18},{"ruleId":"517","severity":1,"message":"518","line":30,"column":7,"nodeType":"519","messageId":"520","endLine":30,"endColumn":18},{"ruleId":"517","severity":1,"message":"518","line":44,"column":7,"nodeType":"519","messageId":"520","endLine":44,"endColumn":18},{"ruleId":"517","severity":1,"message":"518","line":46,"column":9,"nodeType":"519","messageId":"520","endLine":46,"endColumn":20},{"ruleId":"517","severity":1,"message":"518","line":52,"column":7,"nodeType":"519","messageId":"520","endLine":52,"endColumn":18},{"ruleId":"466","severity":1,"message":"549","line":4,"column":15,"nodeType":"468","messageId":"469","endLine":4,"endColumn":19},{"ruleId":"526","severity":1,"message":"550","line":33,"column":11,"nodeType":"519","messageId":"528","endLine":33,"endColumn":29},{"ruleId":"466","severity":1,"message":"551","line":46,"column":81,"nodeType":"468","messageId":"469","endLine":46,"endColumn":85},{"ruleId":"517","severity":1,"message":"518","line":63,"column":3,"nodeType":"519","messageId":"520","endLine":63,"endColumn":14},{"ruleId":"466","severity":1,"message":"552","line":13,"column":9,"nodeType":"468","messageId":"469","endLine":13,"endColumn":14},{"ruleId":"466","severity":1,"message":"553","line":1,"column":8,"nodeType":"468","messageId":"469","endLine":1,"endColumn":13},{"ruleId":"466","severity":1,"message":"554","line":3,"column":10,"nodeType":"468","messageId":"469","endLine":3,"endColumn":23},{"ruleId":"466","severity":1,"message":"555","line":4,"column":10,"nodeType":"468","messageId":"469","endLine":4,"endColumn":21},{"ruleId":"466","severity":1,"message":"552","line":12,"column":9,"nodeType":"468","messageId":"469","endLine":12,"endColumn":14},{"ruleId":"466","severity":1,"message":"556","line":6,"column":42,"nodeType":"468","messageId":"469","endLine":6,"endColumn":65},{"ruleId":"466","severity":1,"message":"557","line":22,"column":9,"nodeType":"468","messageId":"469","endLine":22,"endColumn":27},{"ruleId":"466","severity":1,"message":"558","line":25,"column":9,"nodeType":"468","messageId":"469","endLine":25,"endColumn":17},{"ruleId":"466","severity":1,"message":"467","line":32,"column":9,"nodeType":"468","messageId":"469","endLine":32,"endColumn":11},{"ruleId":"517","severity":1,"message":"518","line":68,"column":5,"nodeType":"519","messageId":"520","endLine":68,"endColumn":16},{"ruleId":"546","severity":1,"message":"559","line":119,"column":30,"nodeType":"468","messageId":"560","endLine":119,"endColumn":43},{"ruleId":"517","severity":1,"message":"518","line":120,"column":5,"nodeType":"519","messageId":"520","endLine":120,"endColumn":16},{"ruleId":"486","severity":2,"message":"561","line":83,"column":6,"nodeType":"488","endLine":83,"endColumn":14,"suggestions":"562","suppressions":"563"},{"ruleId":"466","severity":1,"message":"564","line":1,"column":10,"nodeType":"468","messageId":"469","endLine":1,"endColumn":23},{"ruleId":"466","severity":1,"message":"565","line":1,"column":25,"nodeType":"468","messageId":"469","endLine":1,"endColumn":29},{"ruleId":"466","severity":1,"message":"553","line":3,"column":8,"nodeType":"468","messageId":"469","endLine":3,"endColumn":13},{"ruleId":"466","severity":1,"message":"555","line":6,"column":10,"nodeType":"468","messageId":"469","endLine":6,"endColumn":21},{"ruleId":"466","severity":1,"message":"566","line":10,"column":30,"nodeType":"468","messageId":"469","endLine":10,"endColumn":33},{"ruleId":"466","severity":1,"message":"567","line":11,"column":11,"nodeType":"468","messageId":"469","endLine":11,"endColumn":21},{"ruleId":"466","severity":1,"message":"568","line":12,"column":9,"nodeType":"468","messageId":"469","endLine":12,"endColumn":15},{"ruleId":"470","severity":1,"message":"569","line":12,"column":19,"nodeType":"472","messageId":"473","endLine":12,"endColumn":22},{"ruleId":"470","severity":1,"message":"570","line":12,"column":24,"nodeType":"472","messageId":"473","endLine":12,"endColumn":27},{"ruleId":"470","severity":1,"message":"571","line":12,"column":29,"nodeType":"472","messageId":"473","endLine":12,"endColumn":33},{"ruleId":"470","severity":1,"message":"572","line":12,"column":35,"nodeType":"472","messageId":"473","endLine":12,"endColumn":39},{"ruleId":"466","severity":1,"message":"552","line":13,"column":9,"nodeType":"468","messageId":"469","endLine":13,"endColumn":14},{"ruleId":"466","severity":1,"message":"573","line":14,"column":9,"nodeType":"468","messageId":"469","endLine":14,"endColumn":17},{"ruleId":"466","severity":1,"message":"574","line":15,"column":9,"nodeType":"468","messageId":"469","endLine":15,"endColumn":17},{"ruleId":"466","severity":1,"message":"575","line":16,"column":9,"nodeType":"468","messageId":"469","endLine":16,"endColumn":17},{"ruleId":"466","severity":1,"message":"576","line":17,"column":9,"nodeType":"468","messageId":"469","endLine":17,"endColumn":17},{"ruleId":"466","severity":1,"message":"577","line":18,"column":9,"nodeType":"468","messageId":"469","endLine":18,"endColumn":17},{"ruleId":"539","severity":1,"message":"578","line":49,"column":9,"nodeType":"541","messageId":"542","endLine":49,"endColumn":35,"suppressions":"579"},{"ruleId":"517","severity":1,"message":"518","line":26,"column":7,"nodeType":"519","messageId":"520","endLine":26,"endColumn":18},{"ruleId":"517","severity":1,"message":"518","line":36,"column":7,"nodeType":"519","messageId":"520","endLine":36,"endColumn":20},{"ruleId":"517","severity":1,"message":"518","line":47,"column":22,"nodeType":"519","messageId":"520","endLine":47,"endColumn":35},{"ruleId":"470","severity":1,"message":"538","line":11,"column":56,"nodeType":"472","messageId":"473","endLine":11,"endColumn":57},{"ruleId":"517","severity":1,"message":"518","line":30,"column":5,"nodeType":"519","messageId":"520","endLine":30,"endColumn":16},{"ruleId":"486","severity":2,"message":"580","line":32,"column":6,"nodeType":"488","endLine":32,"endColumn":17,"suggestions":"581","suppressions":"582"},{"ruleId":"466","severity":1,"message":"583","line":1,"column":10,"nodeType":"468","messageId":"469","endLine":1,"endColumn":19},{"ruleId":"466","severity":1,"message":"584","line":1,"column":21,"nodeType":"468","messageId":"469","endLine":1,"endColumn":36},{"ruleId":"466","severity":1,"message":"585","line":4,"column":9,"nodeType":"468","messageId":"469","endLine":4,"endColumn":20},{"ruleId":"466","severity":1,"message":"586","line":6,"column":10,"nodeType":"468","messageId":"469","endLine":6,"endColumn":29},{"ruleId":"466","severity":1,"message":"584","line":1,"column":10,"nodeType":"468","messageId":"469","endLine":1,"endColumn":25},{"ruleId":"466","severity":1,"message":"586","line":7,"column":10,"nodeType":"468","messageId":"469","endLine":7,"endColumn":29},{"ruleId":"466","severity":1,"message":"586","line":5,"column":10,"nodeType":"468","messageId":"469","endLine":5,"endColumn":29},{"ruleId":"517","severity":1,"message":"518","line":22,"column":7,"nodeType":"519","messageId":"520","endLine":22,"endColumn":18},{"ruleId":"466","severity":1,"message":"586","line":5,"column":10,"nodeType":"468","messageId":"469","endLine":5,"endColumn":29},{"ruleId":"466","severity":1,"message":"587","line":7,"column":10,"nodeType":"468","messageId":"469","endLine":7,"endColumn":21},{"ruleId":"588","severity":2,"message":"589","line":5,"column":15,"nodeType":"472","endLine":5,"endColumn":25},{"ruleId":"491","replacedBy":"590"},{"ruleId":"493","replacedBy":"591"},{"ruleId":"495","replacedBy":"592"},{"ruleId":"497","replacedBy":"593"},{"ruleId":"499","replacedBy":"594"},{"ruleId":"466","severity":1,"message":"583","line":4,"column":10,"nodeType":"468","messageId":"469","endLine":4,"endColumn":19},{"ruleId":"501","severity":2,"message":"502","line":24,"column":61,"nodeType":"503","messageId":"504","endLine":24,"endColumn":84,"suppressions":"595"},{"ruleId":"501","severity":2,"message":"502","line":26,"column":41,"nodeType":"503","messageId":"504","endLine":26,"endColumn":65,"suppressions":"596"},{"ruleId":"501","severity":2,"message":"502","line":36,"column":12,"nodeType":"503","messageId":"504","endLine":36,"endColumn":42,"suppressions":"597"},{"ruleId":"598","severity":2,"message":"599","line":66,"column":35,"nodeType":"600","messageId":"601","endLine":66,"endColumn":54,"suppressions":"602"},{"ruleId":"466","severity":1,"message":"603","line":4,"column":10,"nodeType":"468","messageId":"469","endLine":4,"endColumn":22},{"ruleId":"466","severity":1,"message":"583","line":4,"column":24,"nodeType":"468","messageId":"469","endLine":4,"endColumn":33},{"ruleId":"466","severity":1,"message":"604","line":8,"column":10,"nodeType":"468","messageId":"469","endLine":8,"endColumn":21},{"ruleId":"605","severity":1,"message":"606","line":14,"column":1,"nodeType":"607","endLine":14,"endColumn":48},{"ruleId":"466","severity":1,"message":"608","line":14,"column":10,"nodeType":"468","messageId":"469","endLine":14,"endColumn":26},{"ruleId":"517","severity":1,"message":"518","line":27,"column":3,"nodeType":"519","messageId":"520","endLine":27,"endColumn":14},{"ruleId":"517","severity":1,"message":"518","line":33,"column":7,"nodeType":"519","messageId":"520","endLine":33,"endColumn":18},{"ruleId":"470","severity":1,"message":"609","line":41,"column":23,"nodeType":"472","messageId":"473","endLine":41,"endColumn":26},{"ruleId":"470","severity":1,"message":"510","line":42,"column":20,"nodeType":"472","messageId":"473","endLine":42,"endColumn":23},{"ruleId":"466","severity":1,"message":"610","line":59,"column":18,"nodeType":"468","messageId":"469","endLine":59,"endColumn":29},{"ruleId":"466","severity":1,"message":"611","line":59,"column":42,"nodeType":"468","messageId":"469","endLine":59,"endColumn":57},{"ruleId":"466","severity":1,"message":"612","line":60,"column":9,"nodeType":"468","messageId":"469","endLine":60,"endColumn":18},{"ruleId":"466","severity":1,"message":"613","line":61,"column":9,"nodeType":"468","messageId":"469","endLine":61,"endColumn":17},{"ruleId":"466","severity":1,"message":"614","line":7,"column":8,"nodeType":"468","messageId":"469","endLine":7,"endColumn":13},{"ruleId":"470","severity":1,"message":"615","line":36,"column":25,"nodeType":"472","messageId":"473","endLine":36,"endColumn":31},{"ruleId":"470","severity":1,"message":"616","line":37,"column":35,"nodeType":"472","messageId":"473","endLine":37,"endColumn":41},{"ruleId":"470","severity":1,"message":"616","line":38,"column":35,"nodeType":"472","messageId":"473","endLine":38,"endColumn":41},{"ruleId":"470","severity":1,"message":"538","line":40,"column":26,"nodeType":"472","messageId":"473","endLine":40,"endColumn":27},{"ruleId":"470","severity":1,"message":"538","line":41,"column":27,"nodeType":"472","messageId":"473","endLine":41,"endColumn":28},{"ruleId":"470","severity":1,"message":"538","line":42,"column":27,"nodeType":"472","messageId":"473","endLine":42,"endColumn":28},{"ruleId":"470","severity":1,"message":"538","line":43,"column":28,"nodeType":"472","messageId":"473","endLine":43,"endColumn":29},{"ruleId":"470","severity":1,"message":"538","line":45,"column":50,"nodeType":"472","messageId":"473","endLine":45,"endColumn":51},{"ruleId":"470","severity":1,"message":"538","line":46,"column":52,"nodeType":"472","messageId":"473","endLine":46,"endColumn":53},{"ruleId":"470","severity":1,"message":"538","line":81,"column":31,"nodeType":"472","messageId":"473","endLine":81,"endColumn":32},{"ruleId":"470","severity":1,"message":"538","line":81,"column":44,"nodeType":"472","messageId":"473","endLine":81,"endColumn":45},{"ruleId":"470","severity":1,"message":"475","line":91,"column":44,"nodeType":"472","messageId":"473","endLine":91,"endColumn":45},{"ruleId":"470","severity":1,"message":"538","line":99,"column":48,"nodeType":"472","messageId":"473","endLine":99,"endColumn":49},{"ruleId":"470","severity":1,"message":"538","line":100,"column":50,"nodeType":"472","messageId":"473","endLine":100,"endColumn":51},{"ruleId":"470","severity":1,"message":"538","line":104,"column":31,"nodeType":"472","messageId":"473","endLine":104,"endColumn":32},{"ruleId":"470","severity":1,"message":"538","line":104,"column":43,"nodeType":"472","messageId":"473","endLine":104,"endColumn":44},{"ruleId":"617","severity":2,"message":"618","line":15,"column":5,"nodeType":"619","messageId":"620","endLine":15,"endColumn":15,"suppressions":"621"},{"ruleId":"617","severity":2,"message":"622","line":17,"column":5,"nodeType":"619","messageId":"620","endLine":17,"endColumn":15,"suppressions":"623"},{"ruleId":"617","severity":2,"message":"624","line":19,"column":5,"nodeType":"619","messageId":"620","endLine":19,"endColumn":15,"suppressions":"625"},{"ruleId":"617","severity":2,"message":"626","line":21,"column":5,"nodeType":"619","messageId":"620","endLine":21,"endColumn":19,"suppressions":"627"},{"ruleId":"617","severity":2,"message":"628","line":23,"column":5,"nodeType":"619","messageId":"620","endLine":23,"endColumn":19,"suppressions":"629"},{"ruleId":"617","severity":2,"message":"630","line":25,"column":5,"nodeType":"631","messageId":"620","endLine":31,"endColumn":6,"suppressions":"632"},{"ruleId":"617","severity":2,"message":"633","line":33,"column":5,"nodeType":"631","messageId":"620","endLine":51,"endColumn":6,"suppressions":"634"},{"ruleId":"617","severity":2,"message":"635","line":53,"column":5,"nodeType":"631","messageId":"620","endLine":59,"endColumn":6,"suppressions":"636"},{"ruleId":"466","severity":1,"message":"637","line":1,"column":15,"nodeType":"468","messageId":"469","endLine":1,"endColumn":26},{"ruleId":"517","severity":1,"message":"518","line":20,"column":1,"nodeType":"519","messageId":"520","endLine":20,"endColumn":12},{"ruleId":"638","severity":2,"message":"639","line":24,"column":25,"nodeType":"640","messageId":"641","endLine":24,"endColumn":35,"suppressions":"642"},{"ruleId":"466","severity":1,"message":"643","line":1,"column":16,"nodeType":"468","messageId":"469","endLine":1,"endColumn":24},{"ruleId":"466","severity":1,"message":"644","line":3,"column":8,"nodeType":"468","messageId":"469","endLine":3,"endColumn":22},{"ruleId":"605","severity":1,"message":"645","line":8,"column":1,"nodeType":"607","endLine":8,"endColumn":47},{"ruleId":"466","severity":1,"message":"646","line":8,"column":10,"nodeType":"468","messageId":"469","endLine":8,"endColumn":21},{"ruleId":"546","severity":1,"message":"647","line":2,"column":1,"nodeType":"648","messageId":"548","endLine":2,"endColumn":1},{"ruleId":"466","severity":1,"message":"649","line":2,"column":15,"nodeType":"468","messageId":"469","endLine":2,"endColumn":31},{"ruleId":"466","severity":1,"message":"650","line":3,"column":21,"nodeType":"468","messageId":"469","endLine":3,"endColumn":27},{"ruleId":"466","severity":1,"message":"585","line":7,"column":35,"nodeType":"468","messageId":"469","endLine":7,"endColumn":46},{"ruleId":"517","severity":1,"message":"518","line":23,"column":3,"nodeType":"519","messageId":"520","endLine":23,"endColumn":14},{"ruleId":"466","severity":1,"message":"651","line":201,"column":9,"nodeType":"468","messageId":"469","endLine":201,"endColumn":16},{"ruleId":"517","severity":1,"message":"518","line":268,"column":5,"nodeType":"519","messageId":"520","endLine":268,"endColumn":16},{"ruleId":"517","severity":1,"message":"518","line":326,"column":5,"nodeType":"519","messageId":"520","endLine":326,"endColumn":16},{"ruleId":"470","severity":1,"message":"534","line":30,"column":17,"nodeType":"472","messageId":"473","endLine":30,"endColumn":20,"suppressions":"652"},{"ruleId":"470","severity":1,"message":"534","line":31,"column":14,"nodeType":"472","messageId":"473","endLine":31,"endColumn":17,"suppressions":"653"},{"ruleId":"470","severity":1,"message":"475","line":38,"column":14,"nodeType":"472","messageId":"473","endLine":38,"endColumn":15,"suppressions":"654"},{"ruleId":"470","severity":1,"message":"655","line":51,"column":12,"nodeType":"472","messageId":"473","endLine":51,"endColumn":14,"suppressions":"656"},{"ruleId":"470","severity":1,"message":"657","line":52,"column":18,"nodeType":"472","messageId":"473","endLine":52,"endColumn":21,"suppressions":"658"},{"ruleId":"470","severity":1,"message":"475","line":55,"column":18,"nodeType":"472","messageId":"473","endLine":55,"endColumn":19,"suppressions":"659"},{"ruleId":"470","severity":1,"message":"657","line":57,"column":18,"nodeType":"472","messageId":"473","endLine":57,"endColumn":21,"suppressions":"660"},{"ruleId":"486","severity":2,"message":"661","line":84,"column":6,"nodeType":"488","endLine":84,"endColumn":17,"suggestions":"662","suppressions":"663"},{"ruleId":"470","severity":1,"message":"538","line":101,"column":17,"nodeType":"472","messageId":"473","endLine":101,"endColumn":18,"suppressions":"664"},{"ruleId":"470","severity":1,"message":"511","line":102,"column":14,"nodeType":"472","messageId":"473","endLine":102,"endColumn":17,"suppressions":"665"},{"ruleId":"470","severity":1,"message":"475","line":109,"column":14,"nodeType":"472","messageId":"473","endLine":109,"endColumn":15,"suppressions":"666"},{"ruleId":"470","severity":1,"message":"511","line":121,"column":16,"nodeType":"472","messageId":"473","endLine":121,"endColumn":19,"suppressions":"667"},{"ruleId":"470","severity":1,"message":"475","line":125,"column":18,"nodeType":"472","messageId":"473","endLine":125,"endColumn":19,"suppressions":"668"},{"ruleId":"470","severity":1,"message":"475","line":126,"column":16,"nodeType":"472","messageId":"473","endLine":126,"endColumn":17,"suppressions":"669"},{"ruleId":"470","severity":1,"message":"670","line":127,"column":12,"nodeType":"472","messageId":"473","endLine":127,"endColumn":14,"suppressions":"671"},{"ruleId":"486","severity":2,"message":"672","line":138,"column":6,"nodeType":"488","endLine":138,"endColumn":17,"suggestions":"673","suppressions":"674"},{"ruleId":"470","severity":1,"message":"511","line":151,"column":17,"nodeType":"472","messageId":"473","endLine":151,"endColumn":20,"suppressions":"675"},{"ruleId":"470","severity":1,"message":"475","line":164,"column":18,"nodeType":"472","messageId":"473","endLine":164,"endColumn":19,"suppressions":"676"},{"ruleId":"470","severity":1,"message":"475","line":165,"column":16,"nodeType":"472","messageId":"473","endLine":165,"endColumn":17,"suppressions":"677"},{"ruleId":"470","severity":1,"message":"511","line":169,"column":18,"nodeType":"472","messageId":"473","endLine":169,"endColumn":21,"suppressions":"678"},{"ruleId":"470","severity":1,"message":"475","line":172,"column":18,"nodeType":"472","messageId":"473","endLine":172,"endColumn":19,"suppressions":"679"},{"ruleId":"470","severity":1,"message":"680","line":173,"column":17,"nodeType":"472","messageId":"473","endLine":173,"endColumn":19,"suppressions":"681"},{"ruleId":"470","severity":1,"message":"511","line":174,"column":16,"nodeType":"472","messageId":"473","endLine":174,"endColumn":19,"suppressions":"682"},{"ruleId":"470","severity":1,"message":"511","line":177,"column":18,"nodeType":"472","messageId":"473","endLine":177,"endColumn":21,"suppressions":"683"},{"ruleId":"470","severity":1,"message":"475","line":182,"column":18,"nodeType":"472","messageId":"473","endLine":182,"endColumn":19,"suppressions":"684"},{"ruleId":"470","severity":1,"message":"685","line":209,"column":17,"nodeType":"472","messageId":"473","endLine":209,"endColumn":20,"suppressions":"686"},{"ruleId":"470","severity":1,"message":"475","line":220,"column":14,"nodeType":"472","messageId":"473","endLine":220,"endColumn":15,"suppressions":"687"},{"ruleId":"470","severity":1,"message":"510","line":222,"column":16,"nodeType":"472","messageId":"473","endLine":222,"endColumn":19,"suppressions":"688"},{"ruleId":"486","severity":2,"message":"661","line":261,"column":6,"nodeType":"488","endLine":261,"endColumn":28,"suggestions":"689","suppressions":"690"},{"ruleId":"470","severity":1,"message":"534","line":272,"column":19,"nodeType":"472","messageId":"473","endLine":272,"endColumn":22,"suppressions":"691"},{"ruleId":"470","severity":1,"message":"511","line":273,"column":16,"nodeType":"472","messageId":"473","endLine":273,"endColumn":19,"suppressions":"692"},{"ruleId":"470","severity":1,"message":"693","line":281,"column":12,"nodeType":"472","messageId":"473","endLine":281,"endColumn":14,"suppressions":"694"},{"ruleId":"470","severity":1,"message":"657","line":282,"column":18,"nodeType":"472","messageId":"473","endLine":282,"endColumn":21,"suppressions":"695"},{"ruleId":"470","severity":1,"message":"475","line":283,"column":20,"nodeType":"472","messageId":"473","endLine":283,"endColumn":21,"suppressions":"696"},{"ruleId":"470","severity":1,"message":"475","line":286,"column":18,"nodeType":"472","messageId":"473","endLine":286,"endColumn":19,"suppressions":"697"},{"ruleId":"470","severity":1,"message":"657","line":288,"column":18,"nodeType":"472","messageId":"473","endLine":288,"endColumn":21,"suppressions":"698"},{"ruleId":"470","severity":1,"message":"475","line":293,"column":18,"nodeType":"472","messageId":"473","endLine":293,"endColumn":19,"suppressions":"699"},{"ruleId":"470","severity":1,"message":"511","line":329,"column":17,"nodeType":"472","messageId":"473","endLine":329,"endColumn":20,"suppressions":"700"},{"ruleId":"470","severity":1,"message":"475","line":330,"column":16,"nodeType":"472","messageId":"473","endLine":330,"endColumn":17,"suppressions":"701"},{"ruleId":"470","severity":1,"message":"511","line":339,"column":17,"nodeType":"472","messageId":"473","endLine":339,"endColumn":20,"suppressions":"702"},{"ruleId":"470","severity":1,"message":"703","line":341,"column":10,"nodeType":"704","messageId":"473","endLine":341,"endColumn":14,"suppressions":"705"},{"ruleId":"470","severity":1,"message":"475","line":348,"column":17,"nodeType":"472","messageId":"473","endLine":348,"endColumn":18,"suppressions":"706"},{"ruleId":"470","severity":1,"message":"511","line":360,"column":19,"nodeType":"472","messageId":"473","endLine":360,"endColumn":22,"suppressions":"707"},{"ruleId":"466","severity":1,"message":"708","line":1,"column":13,"nodeType":"468","messageId":"469","endLine":1,"endColumn":18},{"ruleId":"466","severity":1,"message":"709","line":7,"column":11,"nodeType":"468","messageId":"469","endLine":7,"endColumn":21},{"ruleId":"466","severity":1,"message":"710","line":7,"column":23,"nodeType":"468","messageId":"469","endLine":7,"endColumn":34},{"ruleId":"466","severity":1,"message":"711","line":7,"column":36,"nodeType":"468","messageId":"469","endLine":7,"endColumn":42},"@typescript-eslint/no-unused-vars","'tl' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-magic-numbers","No magic number: 1200.","Literal","noMagic","'fallback' is assigned a value but never used.","No magic number: 1.","unicorn/prefer-node-protocol","Prefer `node:buffer` over `buffer`.","prefer-node-protocol",{"range":"712","text":"713"},["714"],"@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["715"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLocation'. Either include it or remove the dependency array.","ArrayExpression",["716"],["717"],"lines-around-directive",["718"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/jsx-props-no-spreading","Prop spreading is forbidden","JSXSpreadAttribute","noSpreading",["719"],"'CurrencyValue' is defined but never used.","'Token' is defined but never used.","'packValue' is assigned a value but never used.","'popupTween' is assigned a value but never used.","No magic number: 0.1.","No magic number: 0.5.","'copyToastId' is assigned a value but never used.","No magic number: 3000.","'_error' is defined but never used.","'buyToastId' is assigned a value but never used.","No magic number: 7000.","no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["720","721"],"@typescript-eslint/no-unsafe-member-access","Unsafe member access .message on an `any` value.","unsafeMemberExpression","Unsafe member access .toString on an `any` value.","'errorToastId' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'nativeBalance' and 'quantityToBuy'. Either include them or remove the dependency array.",["722"],"No magic number: 101.","No magic number: 0.3.","No magic number: 0.05.","No magic number: 0.7.","No magic number: 300.","No magic number: 2.","react/jsx-handler-names","Handler function for onClick prop key must be a camelCase name beginning with 'on' only","JSXAttribute","badHandlerName",["723"],"'MdDarkMode' is defined but never used.","'MdLightMode' is defined but never used.","unicorn/prevent-abbreviations","The variable `ButtonWeb3ConnectProps` should be named `ButtonWeb3ConnectProperties`. A more descriptive name will do too.","replace","'Json' is defined but never used.","Unsafe member access .trait_type on an `any` value.","'type' is assigned a value but never used.","'sizes' is assigned a value but never used.","'Imgix' is defined but never used.","'isDevelopment' is defined but never used.","'buildImgUrl' is defined but never used.","'useIntersectionObserver' is defined but never used.","'desktopMenuWrapper' is assigned a value but never used.","'isMobile' is assigned a value but never used.","Please rename the variable `e`. Suggested names are: `error`, `event_`. A more descriptive name will do too.","suggestion","React Hook useEffect has a missing dependency: 'wrapper'. Either include it or remove the dependency array.",["724"],["725"],"'CSSProperties' is defined but never used.","'lazy' is defined but never used.","'css' is assigned a value but never used.","'isDarkMode' is assigned a value but never used.","'widths' is assigned a value but never used.","No magic number: 450.","No magic number: 768.","No magic number: 1366.","No magic number: 1920.","'deviceXs' is assigned a value but never used.","'deviceSm' is assigned a value but never used.","'deviceMd' is assigned a value but never used.","'deviceLg' is assigned a value but never used.","'deviceXl' is assigned a value but never used.","Handler function for onLoad prop key must be a camelCase name beginning with 'on' only",["726"],"React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["727"],["728"],"'useEffect' is defined but never used.","'useLayoutEffect' is defined but never used.","'useIsClient' is defined but never used.","'useSectionAnimation' is defined but never used.","'ITeamMember' is defined but never used.","import/export","No named exports found in module './Splash'.",["718"],[],[],[],[],["729"],["730"],["731"],"react/jsx-no-constructed-context-values","The object passed as the value prop to the Context provider (at line 66) changes every render. To fix this consider wrapping it in a useMemo hook.","ObjectExpression","defaultMsg",["732"],"'ReactElement' is defined but never used.","'ButtonProps' is defined but never used.","import/order","`usehooks-ts` import should occur before import of `~mb/default/Footer`","ImportDeclaration","'useEventListener' is defined but never used.","No magic number: 0.4.","'description' is assigned a value but never used.","'previewImageSrc' is assigned a value but never used.","'metaTitle' is assigned a value but never used.","'metaLink' is assigned a value but never used.","'IStar' is defined but never used.","No magic number: 0.0675.","No magic number: 0.0225.","@typescript-eslint/explicit-member-accessibility","Missing accessibility modifier on class property x.","PropertyDefinition","missingAccessibility",["733"],"Missing accessibility modifier on class property y.",["734"],"Missing accessibility modifier on class property z.",["735"],"Missing accessibility modifier on class property xPrev.",["736"],"Missing accessibility modifier on class property yPrev.",["737"],"Missing accessibility modifier on method definition constructor.","MethodDefinition",["738"],"Missing accessibility modifier on method definition update.",["739"],"Missing accessibility modifier on method definition draw.",["740"],"'Marketplace' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["741"],"'Suspense' is defined but never used.","'LoadingOrError' is defined but never used.","`react-router-dom` import should occur before import of `~mb/components/LoadingOrError`","'useLocation' is defined but never used.","The filename `vite-env.d.ts` should be named `vite-environment.d.ts`. A more descriptive name will do too.","Program","'MutableRefObject' is defined but never used.","'useRef' is defined but never used.","'trigger' is assigned a value but never used.",["742"],["743"],["744"],"No magic number: 20.",["745"],"No magic number: 0.2.",["746"],["747"],["748"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["749"],["750"],["751"],["752"],["753"],["754"],["755"],["756"],"No magic number: 25.",["757"],"React Hook useEffect has missing dependencies: 'init' and 'tl'. Either include them or remove the dependency array.",["758"],["759"],["760"],["761"],["762"],["763"],["764"],"No magic number: 90.",["765"],["766"],["767"],["768"],"No magic number: 1.5.",["769"],["770"],["771"],["772"],["773"],["774"],["775"],"No magic number: 10.",["776"],["777"],["778"],["779"],["780"],["781"],["782"],["783"],["784"],"No magic number: -100.","UnaryExpression",["785"],["786"],["787"],"'React' is defined but never used.","'openPortal' is assigned a value but never used.","'closePortal' is assigned a value but never used.","'isOpen' is assigned a value but never used.",[81,81],"node:",{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"desc":"790","fix":"791"},{"kind":"788","justification":"789"},"padding-line-between-statements",{"kind":"788","justification":"789"},{"messageId":"792","fix":"793","desc":"794"},{"messageId":"795","fix":"796","desc":"797"},{"desc":"798","fix":"799"},{"kind":"788","justification":"789"},{"desc":"800","fix":"801"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"desc":"802","fix":"803"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"desc":"804","fix":"805"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"desc":"806","fix":"807"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"desc":"808","fix":"809"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},{"kind":"788","justification":"789"},"directive","","Update the dependencies array to be: [location.hash, location.pathname, onLocation]",{"range":"810","text":"811"},"suggestUnknown",{"range":"812","text":"813"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"812","text":"814"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [apiToast, currencySymbol, isNetworkMismatch, marketplace, name, nativeBalance, price, quantityToBuy, token]",{"range":"815","text":"816"},"Update the dependencies array to be: [isOpen, wrapper]",{"range":"817","text":"818"},"Update the dependencies array to be: [isVisible, title]",{"range":"819","text":"820"},"Update the dependencies array to be: [init, isBrowser]",{"range":"821","text":"822"},"Update the dependencies array to be: [init, isBrowser, tl]",{"range":"823","text":"824"},"Update the dependencies array to be: [init, isBrowser, isVisible]",{"range":"825","text":"826"},[2494,2528],"[location.hash, location.pathname, onLocation]",[5970,5973],"unknown","never",[6533,6611],"[apiToast, currencySymbol, isNetworkMismatch, marketplace, name, nativeBalance, price, quantityToBuy, token]",[2658,2666],"[isOpen, wrapper]",[978,989],"[isVisible, title]",[1846,1857],"[init, isBrowser]",[2840,2851],"[init, isBrowser, tl]",[5312,5334],"[init, isBrowser, isVisible]"]